<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="21:ProximityAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403a5878"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403aa188"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403aa188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4048d2b8"/></to>
    </wire>
    <wire loc="22:ProximityAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403a5be0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b44b0"/></to>
    </wire>
    <wire loc="23:ProximityAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x404cc270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404c7330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x404c7330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:ProximityAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4050fce8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ba9918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ba9918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41318230"/></to>
    </wire>
    <wire loc="25:ProximityAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40521a98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c01010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c01010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413188c8"/></to>
    </wire>
    <wire loc="26:ProximityAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x40524dc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40634e70"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40634e70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40654470"/></to>
    </wire>
    <wire loc="27:ProximityAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4051c7d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ba9280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40ba9280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4131bb18"/></to>
    </wire>
    <wire loc="28:ProximityAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405258e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bff758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40bff758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40644158"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fd2310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414443d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413dc238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413bf430"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dc1558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412c1700"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40994498"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4091df00"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x408aa010"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40844010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4083e0a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41271f00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4053b890"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4048d650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402fced8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402fced8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40381df8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a2b868"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40995e10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403acee8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403acee8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403b5168"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049c030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e59a38"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b12480"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ad760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4048a880"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403b5950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4048a4d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403b5548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bc7c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403b5548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403bbc10"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403bbc10"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403bab98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403ba010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403c00e0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403c24b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403c24b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040d988"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403c0ad0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403ba010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403e1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40463880"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403d2d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40428a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40428a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41155010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403d52f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404357d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404357d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41199228"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403da4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40439030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40439030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a2c08"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403c18e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040cc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4107e010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403db0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043bd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a57f8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40412dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40412dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d2de8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403cc4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041c9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041c9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110fd70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403d0c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40426790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40426790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41150010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403dd210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404334f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404334f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411940b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403c4590"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40410cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40410cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410879e8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403c8c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cac08"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403d42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40424790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40424790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110ac08"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403d8a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4114a010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403e22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40438c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40438c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119ca88"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403df830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404660b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403d7ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115dde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040d988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410829e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403c6b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404177d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404177d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c5a88"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403e03d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404600b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403cd010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4041d6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4041d6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41112938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403d1750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40427410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40427410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411549e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403d5ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40434170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40434170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41198c08"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403daea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40439988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40439988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119f6c0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403ca2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404156b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404156b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4107d9e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403c9750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40411790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40411790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cd7f8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403ccea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041b410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110d7f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403d9670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40425170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40425170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4114f9e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403ddc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40433e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40433e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41193a88"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403c3010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040e6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41085538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403c7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404194f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404194f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c86c0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403d4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40423170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40423170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411086c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403e2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404366b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404366b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119a538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403d2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40428128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40428128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41157538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403d68e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042be48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115b7f8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403dba98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a3228"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403e82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40470880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403c2ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41080538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403ce590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40416170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40416170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c2538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403dc670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043b3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043b3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411aade8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403cda08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4041c090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4041c090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411103b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403d0210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40427d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40427d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41152538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403de750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40434ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40434ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411966c0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403e38e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40438330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40438330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119d0b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403b9af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404103a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404103a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41088010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403c8210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cb228"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403cb8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041bd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110b228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403d80a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40425ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40425ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4114c538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403e0dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40469880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403d74b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042cb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042cb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115e418"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403d3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40423ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40423ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411060b0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403c3a08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040d030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040d030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41083010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403c6120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40419e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40419e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c60b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40380670"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40385310"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402f7c28"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40394e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405acce0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404bc7c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b4168"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404b3240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404be978"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404be978"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403c3010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404b3c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404bd3e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404bd3e0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403c4590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404b2660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404bdde8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404bdde8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403b9af0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40547100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40547100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4060c600"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4053b890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405437f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405440d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4062a0a0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405437f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405e5418"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4062f968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40602720"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40600a48"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4054e1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4054e1c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405e5850"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4062aa38"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40556dc8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40556dc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405e3340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x405e3340"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x412330c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x405e5418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41236200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x405e5850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41236638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41232300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a94c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405a94c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405b1388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x412304e0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405a6798"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405a6798"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405ae678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41230ec8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405a5338"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405a5338"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405ad248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4122d9a8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405a4e68"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405a4e68"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405aa1a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x405fd4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4062cbc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40654470"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406666a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4064f748"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406689d8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406689d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40682f20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40641f08"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406504b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406504b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40675778"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40645770"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40654d48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40654d48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40676010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406447f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40651db8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40651db8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40675100"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40643270"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40650808"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40650808"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406748b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4064d830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40661200"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40661200"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4067c978"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40644158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40651720"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40651720"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406769d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40662bc0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40662bc0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4067c3f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406461b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40661820"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40661820"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4068a010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40650ef8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40650ef8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40675ae8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40657d38"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4066a010"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4066a010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40684560"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406666a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40828a98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4066c098"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40686580"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40686580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40983d18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40675778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4071f2a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406748b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40721190"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40676010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40721b48"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40675100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40720bf0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4065fc50"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40688218"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40688218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409849b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4067c978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408602e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406769d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40720558"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40684560"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4094d5e0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4066b410"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40685908"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40685908"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097d890"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4065b890"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4068ae18"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4068ae18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4097f520"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4067c3f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40910868"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4068a010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40879908"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40675ae8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406fe500"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4065d200"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4068a728"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4068a728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408b33a8"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40682f20"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40952c08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40828a98"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408609f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40983d18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40991b40"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40672778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x407a64f0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4067deb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40780170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40780170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4126e258"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4071f2a8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4072a1b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40721b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4072ca58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40720bf0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4072bb10"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x4067f010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407ed958"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407ed958"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x408002b8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4067fb70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407a9280"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408602e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40877010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409849b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409927d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40720558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4072b478"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40721190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4072c0a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4094d5e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40965af8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097d890"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2e400"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4097f520"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x409ac3d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40910868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40928350"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40680ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x407a9988"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40879908"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x408897c0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406fe500"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4072d448"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40672328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x407a6158"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x408b33a8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408aad18"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40952c08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40966100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406b8458"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407ee258"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407ee258"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407ebb10"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x406b55c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406fd238"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x406af1b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4094d5e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x406c77e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40984010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40984010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40993e20"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4071dd38"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x406b2c08"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4071a980"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40775948"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4071d900"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x407d6108"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4071f700"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x407d6530"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40774370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40780170"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40775e70"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x407d7b00"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a6910"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407ee258"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407be0e8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407ed958"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407bd3d0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x407c0858"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407bd9a0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x407c0e50"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407beb70"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407d72a8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407d6db8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4082a3b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4082a3b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40842710"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407d5408"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408616c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408616c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4087b678"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407d5810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407ec460"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407ec460"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40800d40"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407ecd18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40861a50"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40861a50"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4087ba80"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40843ac8"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40698928"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40843010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40861118"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40861118"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4087b0a8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408609f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40899348"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40899348"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408b1918"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4087b0a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408793c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408793c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40889280"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4087b678"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b3010"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408b3010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408aa980"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4087ba80"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40871040"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40871040"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40889ec8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408706f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40910868"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408718b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408999a8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408999a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408aa3d0"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40871e80"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4096ccd0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4096ccd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409622a8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408ac990"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408ea5b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408ea5b0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x408e74f0"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408acee8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40841a90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40841a90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40842c68"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408aeb88"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408d8e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x408d8e18"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408e8c40"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408435f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408eaa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408eaa88"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x408e79e8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408e69e8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40697bd8"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x408e74f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408e34d0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408e34d0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408fc780"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0x408e79e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408e3a28"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408e3a28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408fccd8"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x408e8c40"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409889c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409889c0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40994818"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408fdb20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x406a4548"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408fd010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408ffdf0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408ffdf0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4092b8e8"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408fd5f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40910390"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40910390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4092be40"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4090f960"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4069b228"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40910e58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40959150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40959150"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40955010"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4090f458"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40985708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40985708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40993568"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409544f0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40697bd8"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40955010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409851b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409851b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40993010"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40955920"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40985b58"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40985b58"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409939b8"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4096b700"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097d890"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4096a090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4094c638"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4094cef0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40984010"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4099c268"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x4068ddc0"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4099cb50"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4094d5e0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x406fd238"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406fbf18"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406fdd88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a31810"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4070c808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406fdd88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40706b60"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40713010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40724ae8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40718b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4072a608"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4071f700"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4072ae40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4071a980"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40729448"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4071d900"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40729880"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4071dd38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407808b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4126e998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40780cb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4126eda0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4126c2f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407aa208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4126c720"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4126f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4126cd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407ff5f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40718b98"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407ffc98"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407ecd18"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40839b20"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40840430"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40840430"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408443a8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40836bd0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40847010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40847010"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40844dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4083e4d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40843010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4083eab0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408435f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4083ef28"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40843ac8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40888760"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408718b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40888d18"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408706f0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408846a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40871e80"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x408873c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4086e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4086e010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x408838c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408a92e8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408aeb88"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408a9aa8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40713010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408a80d8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408ac990"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408a8630"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408acee8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x408bdb98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x408b7e28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x408c52c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408d8030"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408e9d90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408eae80"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408e7e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408d8608"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408e8410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408e9290"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408e6250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408e9a28"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408e69e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408d8b00"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408e8908"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408f9268"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408fd010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408f5630"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408fdb20"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408f9848"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408fd5f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408f9ca8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406fd238"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x408f5100"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4091d2a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4091d2a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40919cf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x408f4690"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4091b938"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40919438"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408fa6f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4091df00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40928940"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40910e58"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40928f20"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4090f458"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40927ae0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4090f960"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40927398"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406fd238"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40922190"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092ee70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x4092ee70"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4094c010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4092db48"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40957938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40959a20"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40955920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x4095a980"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40956760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4095a170"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40957f10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40959e18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40955d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409575d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409544f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40959628"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40955508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4095a668"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40956428"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409606e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4096a090"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40961330"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4096b700"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40961d68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409687f8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409687f8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x405440d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40962b80"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4098b0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x4098b0b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4094c010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40980100"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4098e010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2e400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b5e570"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409a1638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4099c268"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409a1e08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b80e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b80e00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4094c010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x4099f4d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b7b3e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b7b3e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4094c010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x4099fb90"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b7aa30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b7aa30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4094c010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4099e3a8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x4099cb50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409a3cc0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2e400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409bc1b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406fd238"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a31810"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b1ac88"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409ab6c8"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40a14288"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a14288"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409a9148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a14ca8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a14ca8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a3d588"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409a57c0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a33460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a33460"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a3b748"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409a5e38"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a33ad8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a33ad8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403ce590"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409a8860"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a32580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a32580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403c18e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409a29c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a31010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a31010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a2b1e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4099da70"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40713010"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409a3208"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b7f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b1ac88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x412f7db0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a3b748"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a3cdb8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b5e570"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b85f18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a29d00"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403d80a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a46758"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403d0c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a25f08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40ab7b28"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ab7b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40acd258"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a39dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a58450"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a3b3a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a3ca30"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a2c710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a3c6d0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a3d588"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a58b80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a548c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac2ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ac2ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412c0a50"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a69010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac1a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac1a20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412bf5f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a47bc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a852e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a852e8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a836c0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a69490"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403908f8"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a7a548"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a9fce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403908f8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a7e4d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a7eea8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403c9750"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a7d8d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403c8210"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a9f2e0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403c8c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ac1618"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x412bf1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x412bfab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac1ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x412bfed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x412c1a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x412bd4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40ad8e10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40ace530"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40abc4a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ad0230"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad6d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40aca128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad6d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40ac9d20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad6d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40ac6950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x412f47b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abc4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x412f2a60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40ad6d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b12868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abc4a8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b848c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b59e60"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b870e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5b688"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b5b688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b56e90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b73078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abc4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4131bb18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41311228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41318230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413188c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40c01c08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x413174f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x413174f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x413118f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb6410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41310010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bb6410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be13d8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40be1b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40645770"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bdf230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40bdfe08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40bde510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40bde948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40bffa70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bfe150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c29450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d207b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40d207b0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c29450"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40eeb330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40eeb330"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c29450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ee5e80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ee5e80"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c24918"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ee2e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ee2e28"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c24918"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40edbaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40edbaf0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c24918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ed97f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ed97f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c0a180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bf1c88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40fb6350"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403aa188"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fb6698"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bf1c88"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x410004b8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40f6a3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x40f6a3d8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x4143b200"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x40fff3c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fb95a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fb95a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f199d8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x40fff850"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40c08890"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x40c08890"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40c1f850"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x40ffe610"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x40fe8228"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x40fe8228"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x40fd3ed0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x40ffe010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40634e70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40ffed90"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40d16d08"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40d16d08"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40d40568"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x40ff94d8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x410509d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x410509d8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41018928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41015010"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x40ffc5c0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x40ff8810"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4106ba48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4106ba48"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4104acc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ff8c60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4104c818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4104c818"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c86178"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40c29450"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c86b88"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40c24918"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c40410"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c22560"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c22560"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c7f138"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x40c3e990"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40d10898"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x40c3ee50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cf16a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40cf16a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413238a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x40c45600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d086a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d086a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40644158"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40c843d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d06b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d06b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413547a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c85818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d03ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d03ab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40644158"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40c85c00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d00070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d00070"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413844d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c85410"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cfc030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40cfc030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40644158"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c84ac8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d00da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d00da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41383230"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c83d58"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c0a180"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c45c90"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40c24918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c1fe78"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4091d2a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c483f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d27e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d27e60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x40c351e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c79ac8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40c86178"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c7e5a8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40c86b88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c7ee18"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c85410"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c7d240"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c85818"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40c7d628"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x40c85c00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40c7dd88"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x40c843d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c77528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c84ac8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c76230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c83850"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40ca0a68"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4091d2a8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c76868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cd3ad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40cd3ad8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x40c79280"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x40cd45c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ca0e90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c83d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413238a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41364440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40cf1d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41320010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41320010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d0a3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413206a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413206a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d09010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4131f330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4131f330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41364b08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb6410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41363230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d089b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d07070"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413547a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4134c2b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d05230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41354e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41354e40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d058c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41353510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41353510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d044f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41352170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41352170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4134c980"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb6410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4134b030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d03dd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d024d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413844d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41380d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d00708"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41384b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41384b70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41383230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40cffa30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41383e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41383e28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4137d420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb6410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4137dab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40cfc348"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cfc9e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d20e48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4136c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4136c010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4136d460"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d41570"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d41cb0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d6b918"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d40978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40eca610"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40eca610"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d602f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d40978"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec3310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec3310"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d602f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d40978"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec1010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec1010"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d602f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d40978"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec0ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec0ca0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d602f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6b0f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d67e88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40d67e88"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d627f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6b0f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ec4af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ec4af8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d627f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6b0f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ec2870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ec2870"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d627f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6b0f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ec0528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ec0528"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d627f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d6bcd8"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ec9240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d5faa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ec9240"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5e228"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc3b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.1/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40d83620"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40dc6680"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40dc6680"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40dc18b0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dbe250"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ecfbf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ecfbf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413bd438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40dc3b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ecf0a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ecf0a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413be8d0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40dbe958"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ece310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ece310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413bdad0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x40de0c30"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x40dbdde8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x40dbdde8"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x40e24ca0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40dba1f8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b7f010"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x40dd3dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x40e04e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e5e180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e5a170"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e5a170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e70cc0"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x40e5e838"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x40e5a8c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x40e5a8c8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x40e59e10"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5eb50"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5ac68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5ac68"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e561d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x40e56970"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x403c3a08"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x40e553b0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x403d9670"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x40e54808"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x403d1750"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x40e55d88"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x403d0210"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40e53368"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b7f010"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x40e76d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x40e6f848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ecf7e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x413bd030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413bc010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ece7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x413bc438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x413bf768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x413bb6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d5faa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ec9240"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5e228"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc3b50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d5faa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ec9240"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5e228"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc3b50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d5faa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ec9240"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5e228"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc3b50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40eea348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ee9b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ee9b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413db578"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40eeaa50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ee86d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ee86d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413da150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ee82c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x413dbcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413da610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee8b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x413daa38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x413dc570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x413d9050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40eeb9c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4140d148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4140d148"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4140e5f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ee4530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41408568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41408568"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41409a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ee15f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41402948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41402948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41404e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40eda310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413fde60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413fde60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x413fd350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ed8010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414413a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414413a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41442860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x40fba2d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x4143a030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40f16210"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x4143a9b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40f14100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4143dcb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f115c0"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40f69100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41439170"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x41439d88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f199d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f14c48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40f0f450"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40f16210"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f0d010"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40f115c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40f0dae0"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x40f14100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f0df18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f10af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f10af8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41426010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f0c610"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f49010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f49010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40644158"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x40f0c9f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f46a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f46a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4145ded0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x40f0b238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f42010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f42010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40644158"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f0b580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f408c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41426010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41422b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f4c230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x414266a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x414266a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f4c8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41426d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41426d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f4b4f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41425950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41425950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4141e260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb6410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4141e8f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f49328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f499c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4145ded0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41455998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f45150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4145a580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4145a580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f457e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4145ac18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4145ac18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f44410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41458870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41458870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41452080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb6410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41452718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f42328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40643270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f429c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f69100"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40fbc118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40fbc118"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41444780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41444ee8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41489e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41489e18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x4148b3f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4091d2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x4148ca80"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41483618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x4148c128"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41485e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x4148b7e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x4148a430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x40fd2750"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x40fd9e78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x40fd2b68"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40d10898"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fd1010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x40fd0010"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40769a68"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x40ff34e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4101b848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41018928"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x410107f0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x4100ede0"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x41015010"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41010c48"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403aa188"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4100f308"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41014ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41014ef8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4100f308"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41026a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41026a60"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4100f308"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4105e6a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4105e6a0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4100f308"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4105c230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4105c230"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4100fd28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4105ae80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4105ae80"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4100fd28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41058b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41058b08"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4100fd28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410567f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410567f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4100fd28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41054520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41054520"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410135a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41499cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41499cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414991e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41024150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414931b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414931b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41494690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4105ed38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414da6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414da6d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4148fab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4105c8c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414d5b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414d5b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414d5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41059610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414ce010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414ce010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414d04a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41057310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414c9538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414c9538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414caa08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41055010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414c4b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414c4b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414c4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41054c98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414bd148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414bd148"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414be5f0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4104acc0"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41047b00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410442e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410465c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410465c0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410442e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41071250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41071250"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410442e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4106feb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4106feb8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41044dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41046d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41046d38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41502720"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41044dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410719c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410719c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414fdb20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41044dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4106e660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4106e660"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414f6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41502720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414b6bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414fdb20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414fd010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414f6010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eea348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414f7438"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ProximityC" loc="10:ProximityC.nc">
      <documentation loc="1:ProximityC.nc">
        <short>&#10; Rudimentary Proximity Detection, adapted from BlinkToRadio&#10;&#10; </short>
        <long>&#10; Rudimentary Proximity Detection, adapted from BlinkToRadio&#10;&#10; @author Mat Kelly &#60;mkelly@cs.odu.edu>&#10; @date   Nov 3, 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ProximityAppC.Timer0" loc="36(ProximityAppC.Timer0):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40555940"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ProximityAppC.AMSenderC" loc="39(ProximityAppC.AMSenderC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ProximityAppC.AMSenderC.SenderC" loc="39(ProximityAppC.AMSenderC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP" loc="35(ProximityAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ProximityAppC.AMReceiverC" loc="35(ProximityAppC.AMReceiverC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="36(DelugePageTransferC.Timer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CrcC" loc="37:/opt/tinyos-2.1.1/tos/system/CrcC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="39(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="39(ObjectTransferC.SendAdvMsg.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP" loc="35(ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="35(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="39(ObjectTransferC.SendReqMsg):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="39(ObjectTransferC.SendReqMsg.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP" loc="35(ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="35(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="39(ObjectTransferC.SendDataMsg):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="39(ObjectTransferC.SendDataMsg.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP" loc="35(ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="35(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="36(ObjectTransferC.Timer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="30(DelugeC.BlockReaderDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="27(DelugeC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="27(BlockStorageManagerC.BlockStorageManagerP):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="41:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="68:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="79(At45dbC.Arbiter):/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="32(At45dbC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="27(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="73(BlockStorageLockC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="32(BlockStorageLockC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="30(DelugeC.BlockReaderDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="27(DelugeC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="27(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="30(DelugeC.BlockReaderDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="27(DelugeC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="27(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="30(DelugeC.BlockWriterDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="27(DelugeC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="27(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="30(DelugeC.BlockWriterDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="27(DelugeC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="27(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="30(DelugeC.BlockWriterDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="27(DelugeC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="27(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf4ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf3748"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f08b00"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="39(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="39(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="35(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="39(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="39(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="35(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="36(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="519:/usr/lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C.&#9;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="36(DelugeC.Timer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="30(DelugeMetadataC.BlockReaderGoldenImage):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="30(DelugeMetadataC.BlockReaderDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="30(DelugeMetadataC.BlockReaderDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="30(DelugeMetadataC.BlockReaderDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="30(DelugeMetadataC.BlockWriterGoldenImage):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="30(DelugeMetadataC.BlockWriterDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="30(DelugeMetadataC.BlockWriterDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="30(DelugeMetadataC.BlockWriterDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="27(DelugeC.DelugeMetadataClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="27(DelugeC.DelugeVolumeManagerClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="30(DelugeVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="30(DelugeVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="30(DelugeVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="27(DelugeC.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403ed0e8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403ed300" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403ed518" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f14e8" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f1710" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f1938" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403f1b28" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4043fa30" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4043fc58" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4043fe80" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4043c088" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40555940" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40555940"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40555b00" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4055ec48" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4055ec48"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4055ee08" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405f1328" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405f1328"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405fc830" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405fc830"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x405fca10" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40628010" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40628010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4076a7c8" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40777570" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b13c30" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b13c30"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40b13e50" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b16938" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b16938"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b16d80" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b16d80"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b2c010" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b57470" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b57470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b578b8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b578b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40b6e5d0" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40b6e5d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40b6ea30" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40b6ea30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40b6ec98" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40b6ec98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40b6d148" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40b6d148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40b6d3b0" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40b6d838" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40b6d838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40babc18" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ba67c8" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b9f2c8" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40bb58e8" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40bfd010" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40d1e010" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40d1dce8" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x40d144f8" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x40d69b68" loc="23:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x40e25a40" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e27a48" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40e90780" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40ee37b8" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f08b00" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f08b00"/></type-var>
        </typedef>
        <constant name="key" ref="0x40f08cf0" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f02c68" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f02c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40f672b8" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40f674c8" loc="44:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40f676a8" loc="45:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40f678b0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40f64db0" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40f61010" loc="44:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40f611f0" loc="45:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40f613f8" loc="46:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x40f61600" loc="47:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40f9abf8" loc="33:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403aadb0" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403aa188" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403aa188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403aa360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403adec0" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403acee8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403acee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a80e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403ad760" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ad760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403ad938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403ada18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403adaf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x403adbd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403adcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403b5548" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403b5548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403b5168" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403b5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403b5950" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403b5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403ba010" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ba1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403bbc10" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bbde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403c0ad0" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403c00e0" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403c00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c02b8"/>
        <function-ref name="isInput" scoped="" ref="0x403c0398"/>
        <function-ref name="toggle" scoped="" ref="0x403c0478"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0558"/>
        <function-ref name="get" scoped="" ref="0x403c0638"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0718"/>
        <function-ref name="set" scoped="" ref="0x403c07f8"/>
        <function-ref name="clr" scoped="" ref="0x403c08d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403bab98" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403bab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403e1750" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403e1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1b28"/>
        <function-ref name="isInput" scoped="" ref="0x403e1c08"/>
        <function-ref name="toggle" scoped="" ref="0x403e1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1dc8"/>
        <function-ref name="get" scoped="" ref="0x403e1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0010"/>
        <function-ref name="set" scoped="" ref="0x403e00f0"/>
        <function-ref name="clr" scoped="" ref="0x403e01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403d2d08" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403d2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403d1010"/>
        <function-ref name="toggle" scoped="" ref="0x403d10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d11d0"/>
        <function-ref name="get" scoped="" ref="0x403d12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1390"/>
        <function-ref name="set" scoped="" ref="0x403d1470"/>
        <function-ref name="clr" scoped="" ref="0x403d1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403d52f0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d54c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d55a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d5688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5768"/>
        <function-ref name="get" scoped="" ref="0x403d5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5928"/>
        <function-ref name="set" scoped="" ref="0x403d5a08"/>
        <function-ref name="clr" scoped="" ref="0x403d5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403da4b0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da688"/>
        <function-ref name="isInput" scoped="" ref="0x403da768"/>
        <function-ref name="toggle" scoped="" ref="0x403da848"/>
        <function-ref name="isOutput" scoped="" ref="0x403da928"/>
        <function-ref name="get" scoped="" ref="0x403daa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daae8"/>
        <function-ref name="set" scoped="" ref="0x403dabc8"/>
        <function-ref name="clr" scoped="" ref="0x403daca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403c18e0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403c18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c1b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1d58"/>
        <function-ref name="get" scoped="" ref="0x403c1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1f18"/>
        <function-ref name="set" scoped="" ref="0x403ca010"/>
        <function-ref name="clr" scoped="" ref="0x403ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403db0a0" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db278"/>
        <function-ref name="isInput" scoped="" ref="0x403db358"/>
        <function-ref name="toggle" scoped="" ref="0x403db438"/>
        <function-ref name="isOutput" scoped="" ref="0x403db518"/>
        <function-ref name="get" scoped="" ref="0x403db5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db6d8"/>
        <function-ref name="set" scoped="" ref="0x403db7b8"/>
        <function-ref name="clr" scoped="" ref="0x403db898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403cace8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403caec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c9010"/>
        <function-ref name="toggle" scoped="" ref="0x403c90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c91d0"/>
        <function-ref name="get" scoped="" ref="0x403c92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9390"/>
        <function-ref name="set" scoped="" ref="0x403c9470"/>
        <function-ref name="clr" scoped="" ref="0x403c9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403cc4b0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403cc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc688"/>
        <function-ref name="isInput" scoped="" ref="0x403cc768"/>
        <function-ref name="toggle" scoped="" ref="0x403cc848"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc928"/>
        <function-ref name="get" scoped="" ref="0x403cca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ccae8"/>
        <function-ref name="set" scoped="" ref="0x403ccbc8"/>
        <function-ref name="clr" scoped="" ref="0x403ccca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403d0c08" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403d0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d90f0"/>
        <function-ref name="get" scoped="" ref="0x403d91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d92b0"/>
        <function-ref name="set" scoped="" ref="0x403d9390"/>
        <function-ref name="clr" scoped="" ref="0x403d9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403dd210" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403dd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403dd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd688"/>
        <function-ref name="get" scoped="" ref="0x403dd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd848"/>
        <function-ref name="set" scoped="" ref="0x403dd928"/>
        <function-ref name="clr" scoped="" ref="0x403dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403c4590" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403c4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4768"/>
        <function-ref name="isInput" scoped="" ref="0x403c4848"/>
        <function-ref name="toggle" scoped="" ref="0x403c4928"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4a08"/>
        <function-ref name="get" scoped="" ref="0x403c4ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c4bc8"/>
        <function-ref name="set" scoped="" ref="0x403c4ca8"/>
        <function-ref name="clr" scoped="" ref="0x403c4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403c8c08" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403c8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403c7010"/>
        <function-ref name="isOutput" scoped="" ref="0x403c70f0"/>
        <function-ref name="get" scoped="" ref="0x403c71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c72b0"/>
        <function-ref name="set" scoped="" ref="0x403c7390"/>
        <function-ref name="clr" scoped="" ref="0x403c7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403d42f0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d44c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d45a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d4688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4768"/>
        <function-ref name="get" scoped="" ref="0x403d4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4928"/>
        <function-ref name="set" scoped="" ref="0x403d4a08"/>
        <function-ref name="clr" scoped="" ref="0x403d4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403d8a98" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403d8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d8d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8f10"/>
        <function-ref name="get" scoped="" ref="0x403d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d70f0"/>
        <function-ref name="set" scoped="" ref="0x403d71d0"/>
        <function-ref name="clr" scoped="" ref="0x403d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403e22f0" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2768"/>
        <function-ref name="get" scoped="" ref="0x403e2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2928"/>
        <function-ref name="set" scoped="" ref="0x403e2a08"/>
        <function-ref name="clr" scoped="" ref="0x403e2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403df830" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403df830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfa08"/>
        <function-ref name="isInput" scoped="" ref="0x403dfae8"/>
        <function-ref name="toggle" scoped="" ref="0x403dfbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dfca8"/>
        <function-ref name="get" scoped="" ref="0x403dfd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dfe68"/>
        <function-ref name="set" scoped="" ref="0x403e8010"/>
        <function-ref name="clr" scoped="" ref="0x403e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403d7ea8" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403d7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d60c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d61a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d6280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6360"/>
        <function-ref name="get" scoped="" ref="0x403d6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6520"/>
        <function-ref name="set" scoped="" ref="0x403d6600"/>
        <function-ref name="clr" scoped="" ref="0x403d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403c24b0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2688"/>
        <function-ref name="isInput" scoped="" ref="0x403c2768"/>
        <function-ref name="toggle" scoped="" ref="0x403c2848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2928"/>
        <function-ref name="get" scoped="" ref="0x403c2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2ae8"/>
        <function-ref name="set" scoped="" ref="0x403c2bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403c6b18" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403c6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c6cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403c6dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403c6eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ce010"/>
        <function-ref name="get" scoped="" ref="0x403ce0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ce1d0"/>
        <function-ref name="set" scoped="" ref="0x403ce2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ce390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403e03d0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403e03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e05a8"/>
        <function-ref name="isInput" scoped="" ref="0x403e0688"/>
        <function-ref name="toggle" scoped="" ref="0x403e0768"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0848"/>
        <function-ref name="get" scoped="" ref="0x403e0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0a08"/>
        <function-ref name="set" scoped="" ref="0x403e0ae8"/>
        <function-ref name="clr" scoped="" ref="0x403e0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403cd010" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403cd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403cd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd488"/>
        <function-ref name="get" scoped="" ref="0x403cd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd648"/>
        <function-ref name="set" scoped="" ref="0x403cd728"/>
        <function-ref name="clr" scoped="" ref="0x403cd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403d1750" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403d1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1928"/>
        <function-ref name="isInput" scoped="" ref="0x403d1a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1bc8"/>
        <function-ref name="get" scoped="" ref="0x403d1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1d88"/>
        <function-ref name="set" scoped="" ref="0x403d1e68"/>
        <function-ref name="clr" scoped="" ref="0x403d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403d5ce8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403d5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403de010"/>
        <function-ref name="toggle" scoped="" ref="0x403de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403de1d0"/>
        <function-ref name="get" scoped="" ref="0x403de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de390"/>
        <function-ref name="set" scoped="" ref="0x403de470"/>
        <function-ref name="clr" scoped="" ref="0x403de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403daea8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3360"/>
        <function-ref name="get" scoped="" ref="0x403e3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3520"/>
        <function-ref name="set" scoped="" ref="0x403e3600"/>
        <function-ref name="clr" scoped="" ref="0x403e36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403ca2f0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ca5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ca688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca768"/>
        <function-ref name="get" scoped="" ref="0x403ca848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca928"/>
        <function-ref name="set" scoped="" ref="0x403caa08"/>
        <function-ref name="clr" scoped="" ref="0x403caae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403c9750" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403c9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9928"/>
        <function-ref name="isInput" scoped="" ref="0x403c9a08"/>
        <function-ref name="toggle" scoped="" ref="0x403c9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9bc8"/>
        <function-ref name="get" scoped="" ref="0x403c9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9d88"/>
        <function-ref name="set" scoped="" ref="0x403c9e68"/>
        <function-ref name="clr" scoped="" ref="0x403c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403ccea8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403ccea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403cb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403cb280"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb360"/>
        <function-ref name="get" scoped="" ref="0x403cb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb520"/>
        <function-ref name="set" scoped="" ref="0x403cb600"/>
        <function-ref name="clr" scoped="" ref="0x403cb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403d9670" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9848"/>
        <function-ref name="isInput" scoped="" ref="0x403d9928"/>
        <function-ref name="toggle" scoped="" ref="0x403d9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9ae8"/>
        <function-ref name="get" scoped="" ref="0x403d9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9ca8"/>
        <function-ref name="set" scoped="" ref="0x403d9d88"/>
        <function-ref name="clr" scoped="" ref="0x403d9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403ddc08" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x403ddec0"/>
        <function-ref name="toggle" scoped="" ref="0x403dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc0f0"/>
        <function-ref name="get" scoped="" ref="0x403dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc2b0"/>
        <function-ref name="set" scoped="" ref="0x403dc390"/>
        <function-ref name="clr" scoped="" ref="0x403dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403c3010" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c31e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c32c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3488"/>
        <function-ref name="get" scoped="" ref="0x403c3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3648"/>
        <function-ref name="set" scoped="" ref="0x403c3728"/>
        <function-ref name="clr" scoped="" ref="0x403c3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403c7670" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c78c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c79a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c7a88"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7b68"/>
        <function-ref name="get" scoped="" ref="0x403c7c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7d28"/>
        <function-ref name="set" scoped="" ref="0x403c7e08"/>
        <function-ref name="clr" scoped="" ref="0x403c7ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403d4ce8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403d4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d3010"/>
        <function-ref name="toggle" scoped="" ref="0x403d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d31d0"/>
        <function-ref name="get" scoped="" ref="0x403d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3390"/>
        <function-ref name="set" scoped="" ref="0x403d3470"/>
        <function-ref name="clr" scoped="" ref="0x403d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403e2ce8" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403e2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e1010"/>
        <function-ref name="toggle" scoped="" ref="0x403e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e11d0"/>
        <function-ref name="get" scoped="" ref="0x403e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1390"/>
        <function-ref name="set" scoped="" ref="0x403e1470"/>
        <function-ref name="clr" scoped="" ref="0x403e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403d2210" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403d2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d24e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d25c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d26a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2788"/>
        <function-ref name="get" scoped="" ref="0x403d2868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2948"/>
        <function-ref name="set" scoped="" ref="0x403d2a28"/>
        <function-ref name="clr" scoped="" ref="0x403d2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403d68e0" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403d68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d6b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6d58"/>
        <function-ref name="get" scoped="" ref="0x403d6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6f18"/>
        <function-ref name="set" scoped="" ref="0x403d5010"/>
        <function-ref name="clr" scoped="" ref="0x403d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403dba98" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403dba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dbc70"/>
        <function-ref name="isInput" scoped="" ref="0x403dbd50"/>
        <function-ref name="toggle" scoped="" ref="0x403dbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403dbf10"/>
        <function-ref name="get" scoped="" ref="0x403da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da0f0"/>
        <function-ref name="set" scoped="" ref="0x403da1d0"/>
        <function-ref name="clr" scoped="" ref="0x403da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403e82f0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8768"/>
        <function-ref name="get" scoped="" ref="0x403e8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e8928"/>
        <function-ref name="set" scoped="" ref="0x403e8a08"/>
        <function-ref name="clr" scoped="" ref="0x403e8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403c2ea8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403c2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c10c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c11a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c1280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1360"/>
        <function-ref name="get" scoped="" ref="0x403c1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1520"/>
        <function-ref name="set" scoped="" ref="0x403c1600"/>
        <function-ref name="clr" scoped="" ref="0x403c16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403ce590" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403ce590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ce768"/>
        <function-ref name="isInput" scoped="" ref="0x403ce848"/>
        <function-ref name="toggle" scoped="" ref="0x403ce928"/>
        <function-ref name="isOutput" scoped="" ref="0x403cea08"/>
        <function-ref name="get" scoped="" ref="0x403ceae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cebc8"/>
        <function-ref name="set" scoped="" ref="0x403ceca8"/>
        <function-ref name="clr" scoped="" ref="0x403ced88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403dc670" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc848"/>
        <function-ref name="isInput" scoped="" ref="0x403dc928"/>
        <function-ref name="toggle" scoped="" ref="0x403dca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcae8"/>
        <function-ref name="get" scoped="" ref="0x403dcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dcca8"/>
        <function-ref name="set" scoped="" ref="0x403dcd88"/>
        <function-ref name="clr" scoped="" ref="0x403dce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403cda08" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403cda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cdbe0"/>
        <function-ref name="isInput" scoped="" ref="0x403cdcc0"/>
        <function-ref name="toggle" scoped="" ref="0x403cdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cde80"/>
        <function-ref name="get" scoped="" ref="0x403cc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc0f0"/>
        <function-ref name="set" scoped="" ref="0x403cc1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403d0210" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d03e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d04c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0688"/>
        <function-ref name="get" scoped="" ref="0x403d0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0848"/>
        <function-ref name="set" scoped="" ref="0x403d0928"/>
        <function-ref name="clr" scoped="" ref="0x403d0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403de750" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de928"/>
        <function-ref name="isInput" scoped="" ref="0x403dea08"/>
        <function-ref name="toggle" scoped="" ref="0x403deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403debc8"/>
        <function-ref name="get" scoped="" ref="0x403deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ded88"/>
        <function-ref name="set" scoped="" ref="0x403dee68"/>
        <function-ref name="clr" scoped="" ref="0x403dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403e38e0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403e38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3d58"/>
        <function-ref name="get" scoped="" ref="0x403e3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3f18"/>
        <function-ref name="set" scoped="" ref="0x403e2010"/>
        <function-ref name="clr" scoped="" ref="0x403e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403b9af0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403b9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9cc8"/>
        <function-ref name="isInput" scoped="" ref="0x403b9da8"/>
        <function-ref name="toggle" scoped="" ref="0x403b9e88"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4010"/>
        <function-ref name="get" scoped="" ref="0x403c40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c41d0"/>
        <function-ref name="set" scoped="" ref="0x403c42b0"/>
        <function-ref name="clr" scoped="" ref="0x403c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403c8210" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403c8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c83e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c84c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8688"/>
        <function-ref name="get" scoped="" ref="0x403c8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8848"/>
        <function-ref name="set" scoped="" ref="0x403c8928"/>
        <function-ref name="clr" scoped="" ref="0x403c8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403cb8e0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403cb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cbab8"/>
        <function-ref name="isInput" scoped="" ref="0x403cbb98"/>
        <function-ref name="toggle" scoped="" ref="0x403cbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403cbd58"/>
        <function-ref name="get" scoped="" ref="0x403cbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cbf18"/>
        <function-ref name="set" scoped="" ref="0x403d4010"/>
        <function-ref name="clr" scoped="" ref="0x403d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403d80a0" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8278"/>
        <function-ref name="isInput" scoped="" ref="0x403d8358"/>
        <function-ref name="toggle" scoped="" ref="0x403d8438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8518"/>
        <function-ref name="get" scoped="" ref="0x403d85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d86d8"/>
        <function-ref name="set" scoped="" ref="0x403d87b8"/>
        <function-ref name="clr" scoped="" ref="0x403d8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403e0dc8" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403e0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df010"/>
        <function-ref name="isInput" scoped="" ref="0x403df0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403df1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403df2b0"/>
        <function-ref name="get" scoped="" ref="0x403df390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df470"/>
        <function-ref name="set" scoped="" ref="0x403df550"/>
        <function-ref name="clr" scoped="" ref="0x403df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403d74b0" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403d74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7688"/>
        <function-ref name="isInput" scoped="" ref="0x403d7768"/>
        <function-ref name="toggle" scoped="" ref="0x403d7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7928"/>
        <function-ref name="get" scoped="" ref="0x403d7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7ae8"/>
        <function-ref name="set" scoped="" ref="0x403d7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403d3750" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403d3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3928"/>
        <function-ref name="isInput" scoped="" ref="0x403d3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3bc8"/>
        <function-ref name="get" scoped="" ref="0x403d3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3d88"/>
        <function-ref name="set" scoped="" ref="0x403d3e68"/>
        <function-ref name="clr" scoped="" ref="0x403d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403c3a08" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403c3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3be0"/>
        <function-ref name="isInput" scoped="" ref="0x403c3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403c3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3e80"/>
        <function-ref name="get" scoped="" ref="0x403c2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c20f0"/>
        <function-ref name="set" scoped="" ref="0x403c21d0"/>
        <function-ref name="clr" scoped="" ref="0x403c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403c6120" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c62f8"/>
        <function-ref name="isInput" scoped="" ref="0x403c63d8"/>
        <function-ref name="toggle" scoped="" ref="0x403c64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6598"/>
        <function-ref name="get" scoped="" ref="0x403c6678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c6758"/>
        <function-ref name="set" scoped="" ref="0x403c6838"/>
        <function-ref name="clr" scoped="" ref="0x403c6918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040e6b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e888"/>
        <function-ref name="isInput" scoped="" ref="0x4040e968"/>
        <function-ref name="toggle" scoped="" ref="0x4040ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4040eb28"/>
        <function-ref name="get" scoped="" ref="0x4040ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ece8"/>
        <function-ref name="set" scoped="" ref="0x4040edc8"/>
        <function-ref name="clr" scoped="" ref="0x4040eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040c330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c508"/>
        <function-ref name="isInput" scoped="" ref="0x4040c5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4040c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c7a8"/>
        <function-ref name="get" scoped="" ref="0x4040c888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c968"/>
        <function-ref name="set" scoped="" ref="0x4040ca48"/>
        <function-ref name="clr" scoped="" ref="0x4040cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404103a0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404103a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410578"/>
        <function-ref name="isInput" scoped="" ref="0x40410658"/>
        <function-ref name="toggle" scoped="" ref="0x40410738"/>
        <function-ref name="isOutput" scoped="" ref="0x40410818"/>
        <function-ref name="get" scoped="" ref="0x404108f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404109d8"/>
        <function-ref name="set" scoped="" ref="0x40410ab8"/>
        <function-ref name="clr" scoped="" ref="0x40410b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040d030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d208"/>
        <function-ref name="isInput" scoped="" ref="0x4040d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d4a8"/>
        <function-ref name="get" scoped="" ref="0x4040d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d668"/>
        <function-ref name="set" scoped="" ref="0x4040d748"/>
        <function-ref name="clr" scoped="" ref="0x4040d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040cc88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040ce60"/>
        <function-ref name="isInput" scoped="" ref="0x40415010"/>
        <function-ref name="toggle" scoped="" ref="0x404150f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404151d0"/>
        <function-ref name="get" scoped="" ref="0x404152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415390"/>
        <function-ref name="set" scoped="" ref="0x40415470"/>
        <function-ref name="clr" scoped="" ref="0x40415550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40410cf8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40410cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410ed0"/>
        <function-ref name="isInput" scoped="" ref="0x4040e010"/>
        <function-ref name="toggle" scoped="" ref="0x4040e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e1d0"/>
        <function-ref name="get" scoped="" ref="0x4040e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e390"/>
        <function-ref name="set" scoped="" ref="0x4040e470"/>
        <function-ref name="clr" scoped="" ref="0x4040e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040d988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040db60"/>
        <function-ref name="isInput" scoped="" ref="0x4040dc40"/>
        <function-ref name="toggle" scoped="" ref="0x4040dd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4040de00"/>
        <function-ref name="get" scoped="" ref="0x4040dee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c010"/>
        <function-ref name="set" scoped="" ref="0x4040c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4040c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404156b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404156b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415888"/>
        <function-ref name="isInput" scoped="" ref="0x40415968"/>
        <function-ref name="toggle" scoped="" ref="0x40415a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40415b28"/>
        <function-ref name="get" scoped="" ref="0x40415c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415ce8"/>
        <function-ref name="set" scoped="" ref="0x40415dc8"/>
        <function-ref name="clr" scoped="" ref="0x40415ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41088010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41088010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410881e8"/>
        <function-ref name="isInput" scoped="" ref="0x410882c8"/>
        <function-ref name="toggle" scoped="" ref="0x410883a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41088488"/>
        <function-ref name="get" scoped="" ref="0x41088568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41088648"/>
        <function-ref name="set" scoped="" ref="0x41088728"/>
        <function-ref name="clr" scoped="" ref="0x41088808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410879e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410879e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41087bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41087ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41087d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41087e60"/>
        <function-ref name="get" scoped="" ref="0x41086010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410860f0"/>
        <function-ref name="set" scoped="" ref="0x410861d0"/>
        <function-ref name="clr" scoped="" ref="0x410862b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41085538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41085538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41085710"/>
        <function-ref name="isInput" scoped="" ref="0x410857f0"/>
        <function-ref name="toggle" scoped="" ref="0x410858d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410859b0"/>
        <function-ref name="get" scoped="" ref="0x41085a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41085b70"/>
        <function-ref name="set" scoped="" ref="0x41085c50"/>
        <function-ref name="clr" scoped="" ref="0x41085d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41083010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41083010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410831e8"/>
        <function-ref name="isInput" scoped="" ref="0x410832c8"/>
        <function-ref name="toggle" scoped="" ref="0x410833a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41083488"/>
        <function-ref name="get" scoped="" ref="0x41083568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41083648"/>
        <function-ref name="set" scoped="" ref="0x41083728"/>
        <function-ref name="clr" scoped="" ref="0x41083808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410829e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410829e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41082bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41082ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41082d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41082e60"/>
        <function-ref name="get" scoped="" ref="0x41081010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410810f0"/>
        <function-ref name="set" scoped="" ref="0x410811d0"/>
        <function-ref name="clr" scoped="" ref="0x410812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41080538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41080538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41080710"/>
        <function-ref name="isInput" scoped="" ref="0x410807f0"/>
        <function-ref name="toggle" scoped="" ref="0x410808d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410809b0"/>
        <function-ref name="get" scoped="" ref="0x41080a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41080b70"/>
        <function-ref name="set" scoped="" ref="0x41080c50"/>
        <function-ref name="clr" scoped="" ref="0x41080d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4107e010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4107e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4107e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4107e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4107e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4107e488"/>
        <function-ref name="get" scoped="" ref="0x4107e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4107e648"/>
        <function-ref name="set" scoped="" ref="0x4107e728"/>
        <function-ref name="clr" scoped="" ref="0x4107e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4107d9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4107d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4107dbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4107dca0"/>
        <function-ref name="toggle" scoped="" ref="0x4107dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4107de60"/>
        <function-ref name="get" scoped="" ref="0x410bd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410bd0f0"/>
        <function-ref name="set" scoped="" ref="0x410bd1d0"/>
        <function-ref name="clr" scoped="" ref="0x410bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041a170" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a348"/>
        <function-ref name="isInput" scoped="" ref="0x4041a428"/>
        <function-ref name="toggle" scoped="" ref="0x4041a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a5e8"/>
        <function-ref name="get" scoped="" ref="0x4041a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a7a8"/>
        <function-ref name="set" scoped="" ref="0x4041a888"/>
        <function-ref name="clr" scoped="" ref="0x4041a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40419e48" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40419e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417050"/>
        <function-ref name="isInput" scoped="" ref="0x40417130"/>
        <function-ref name="toggle" scoped="" ref="0x40417210"/>
        <function-ref name="isOutput" scoped="" ref="0x404172f0"/>
        <function-ref name="get" scoped="" ref="0x404173d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404174b0"/>
        <function-ref name="set" scoped="" ref="0x40417590"/>
        <function-ref name="clr" scoped="" ref="0x40417670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40412dc8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40412dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411010"/>
        <function-ref name="isInput" scoped="" ref="0x404110f0"/>
        <function-ref name="toggle" scoped="" ref="0x404111d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404112b0"/>
        <function-ref name="get" scoped="" ref="0x40411390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411470"/>
        <function-ref name="set" scoped="" ref="0x40411550"/>
        <function-ref name="clr" scoped="" ref="0x40411630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041aac8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4041ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40419010"/>
        <function-ref name="get" scoped="" ref="0x404190f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404191d0"/>
        <function-ref name="set" scoped="" ref="0x404192b0"/>
        <function-ref name="clr" scoped="" ref="0x40419390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404177d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404177d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404179a8"/>
        <function-ref name="isInput" scoped="" ref="0x40417a88"/>
        <function-ref name="toggle" scoped="" ref="0x40417b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40417c48"/>
        <function-ref name="get" scoped="" ref="0x40417d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417e08"/>
        <function-ref name="set" scoped="" ref="0x40417ee8"/>
        <function-ref name="clr" scoped="" ref="0x40416010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40411790" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40411790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411968"/>
        <function-ref name="isInput" scoped="" ref="0x40411a48"/>
        <function-ref name="toggle" scoped="" ref="0x40411b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40411c08"/>
        <function-ref name="get" scoped="" ref="0x40411ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411dc8"/>
        <function-ref name="set" scoped="" ref="0x40411ea8"/>
        <function-ref name="clr" scoped="" ref="0x4041a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404194f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404194f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404196c8"/>
        <function-ref name="isInput" scoped="" ref="0x404197a8"/>
        <function-ref name="toggle" scoped="" ref="0x40419888"/>
        <function-ref name="isOutput" scoped="" ref="0x40419968"/>
        <function-ref name="get" scoped="" ref="0x40419a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419b28"/>
        <function-ref name="set" scoped="" ref="0x40419c08"/>
        <function-ref name="clr" scoped="" ref="0x40419ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40416170" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40416170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416348"/>
        <function-ref name="isInput" scoped="" ref="0x40416428"/>
        <function-ref name="toggle" scoped="" ref="0x40416508"/>
        <function-ref name="isOutput" scoped="" ref="0x404165e8"/>
        <function-ref name="get" scoped="" ref="0x404166c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404167a8"/>
        <function-ref name="set" scoped="" ref="0x40416888"/>
        <function-ref name="clr" scoped="" ref="0x40416968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d2de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410ce010"/>
        <function-ref name="isInput" scoped="" ref="0x410ce0f0"/>
        <function-ref name="toggle" scoped="" ref="0x410ce1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410ce2b0"/>
        <function-ref name="get" scoped="" ref="0x410ce390"/>
        <function-ref name="makeOutput" scoped="" ref="0x410ce470"/>
        <function-ref name="set" scoped="" ref="0x410ce550"/>
        <function-ref name="clr" scoped="" ref="0x410ce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cd7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x410cdab0"/>
        <function-ref name="toggle" scoped="" ref="0x410cdb90"/>
        <function-ref name="isOutput" scoped="" ref="0x410cdc70"/>
        <function-ref name="get" scoped="" ref="0x410cdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cde30"/>
        <function-ref name="set" scoped="" ref="0x410cdf10"/>
        <function-ref name="clr" scoped="" ref="0x410cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cb228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cb400"/>
        <function-ref name="isInput" scoped="" ref="0x410cb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x410cb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410cb6a0"/>
        <function-ref name="get" scoped="" ref="0x410cb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cb860"/>
        <function-ref name="set" scoped="" ref="0x410cb940"/>
        <function-ref name="clr" scoped="" ref="0x410cba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cac08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cade0"/>
        <function-ref name="isInput" scoped="" ref="0x410caec0"/>
        <function-ref name="toggle" scoped="" ref="0x410c9010"/>
        <function-ref name="isOutput" scoped="" ref="0x410c90f0"/>
        <function-ref name="get" scoped="" ref="0x410c91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c92b0"/>
        <function-ref name="set" scoped="" ref="0x410c9390"/>
        <function-ref name="clr" scoped="" ref="0x410c9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c86c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c8898"/>
        <function-ref name="isInput" scoped="" ref="0x410c8978"/>
        <function-ref name="toggle" scoped="" ref="0x410c8a58"/>
        <function-ref name="isOutput" scoped="" ref="0x410c8b38"/>
        <function-ref name="get" scoped="" ref="0x410c8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c8cf8"/>
        <function-ref name="set" scoped="" ref="0x410c8dd8"/>
        <function-ref name="clr" scoped="" ref="0x410c8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c60b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c6288"/>
        <function-ref name="isInput" scoped="" ref="0x410c6368"/>
        <function-ref name="toggle" scoped="" ref="0x410c6448"/>
        <function-ref name="isOutput" scoped="" ref="0x410c6528"/>
        <function-ref name="get" scoped="" ref="0x410c6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c66e8"/>
        <function-ref name="set" scoped="" ref="0x410c67c8"/>
        <function-ref name="clr" scoped="" ref="0x410c68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c5a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c5c60"/>
        <function-ref name="isInput" scoped="" ref="0x410c5d40"/>
        <function-ref name="toggle" scoped="" ref="0x410c5e20"/>
        <function-ref name="isOutput" scoped="" ref="0x410c5f00"/>
        <function-ref name="get" scoped="" ref="0x410c3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c30f0"/>
        <function-ref name="set" scoped="" ref="0x410c31d0"/>
        <function-ref name="clr" scoped="" ref="0x410c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c2538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c2710"/>
        <function-ref name="isInput" scoped="" ref="0x410c27f0"/>
        <function-ref name="toggle" scoped="" ref="0x410c28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410c29b0"/>
        <function-ref name="get" scoped="" ref="0x410c2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c2b70"/>
        <function-ref name="set" scoped="" ref="0x410c2c50"/>
        <function-ref name="clr" scoped="" ref="0x410c2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041c9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4041cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4041cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ce60"/>
        <function-ref name="get" scoped="" ref="0x4041b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b0f0"/>
        <function-ref name="set" scoped="" ref="0x4041b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4041b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40424790" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40424790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424968"/>
        <function-ref name="isInput" scoped="" ref="0x40424a48"/>
        <function-ref name="toggle" scoped="" ref="0x40424b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40424c08"/>
        <function-ref name="get" scoped="" ref="0x40424ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424dc8"/>
        <function-ref name="set" scoped="" ref="0x40424ea8"/>
        <function-ref name="clr" scoped="" ref="0x40423010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4041d6f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4041d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4041d9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4041da90"/>
        <function-ref name="isOutput" scoped="" ref="0x4041db70"/>
        <function-ref name="get" scoped="" ref="0x4041dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041dd30"/>
        <function-ref name="set" scoped="" ref="0x4041de10"/>
        <function-ref name="clr" scoped="" ref="0x4041def0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041b410" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b888"/>
        <function-ref name="get" scoped="" ref="0x4041b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ba48"/>
        <function-ref name="set" scoped="" ref="0x4041bb28"/>
        <function-ref name="clr" scoped="" ref="0x4041bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40423170" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40423170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423348"/>
        <function-ref name="isInput" scoped="" ref="0x40423428"/>
        <function-ref name="toggle" scoped="" ref="0x40423508"/>
        <function-ref name="isOutput" scoped="" ref="0x404235e8"/>
        <function-ref name="get" scoped="" ref="0x404236c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404237a8"/>
        <function-ref name="set" scoped="" ref="0x40423888"/>
        <function-ref name="clr" scoped="" ref="0x40423968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4041c090" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4041c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c268"/>
        <function-ref name="isInput" scoped="" ref="0x4041c348"/>
        <function-ref name="toggle" scoped="" ref="0x4041c428"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c508"/>
        <function-ref name="get" scoped="" ref="0x4041c5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c6c8"/>
        <function-ref name="set" scoped="" ref="0x4041c7a8"/>
        <function-ref name="clr" scoped="" ref="0x4041c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041bd68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424010"/>
        <function-ref name="isInput" scoped="" ref="0x404240f0"/>
        <function-ref name="toggle" scoped="" ref="0x404241d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404242b0"/>
        <function-ref name="get" scoped="" ref="0x40424390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424470"/>
        <function-ref name="set" scoped="" ref="0x40424550"/>
        <function-ref name="clr" scoped="" ref="0x40424630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40423ac8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40423ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40423d80"/>
        <function-ref name="toggle" scoped="" ref="0x40423e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40422010"/>
        <function-ref name="get" scoped="" ref="0x404220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404221d0"/>
        <function-ref name="set" scoped="" ref="0x404222b0"/>
        <function-ref name="clr" scoped="" ref="0x40422390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41112938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41112938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41112b10"/>
        <function-ref name="isInput" scoped="" ref="0x41112bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41112cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41112db0"/>
        <function-ref name="get" scoped="" ref="0x41112e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41111010"/>
        <function-ref name="set" scoped="" ref="0x411110f0"/>
        <function-ref name="clr" scoped="" ref="0x411111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411103b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411103b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41110588"/>
        <function-ref name="isInput" scoped="" ref="0x41110668"/>
        <function-ref name="toggle" scoped="" ref="0x41110748"/>
        <function-ref name="isOutput" scoped="" ref="0x41110828"/>
        <function-ref name="get" scoped="" ref="0x41110908"/>
        <function-ref name="makeOutput" scoped="" ref="0x411109e8"/>
        <function-ref name="set" scoped="" ref="0x41110ac8"/>
        <function-ref name="clr" scoped="" ref="0x41110ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110fd70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110e010"/>
        <function-ref name="isInput" scoped="" ref="0x4110e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4110e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4110e2b0"/>
        <function-ref name="get" scoped="" ref="0x4110e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110e470"/>
        <function-ref name="set" scoped="" ref="0x4110e550"/>
        <function-ref name="clr" scoped="" ref="0x4110e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110d7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4110dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4110db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4110dc70"/>
        <function-ref name="get" scoped="" ref="0x4110dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110de30"/>
        <function-ref name="set" scoped="" ref="0x4110df10"/>
        <function-ref name="clr" scoped="" ref="0x4110c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110b228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110b400"/>
        <function-ref name="isInput" scoped="" ref="0x4110b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4110b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4110b6a0"/>
        <function-ref name="get" scoped="" ref="0x4110b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110b860"/>
        <function-ref name="set" scoped="" ref="0x4110b940"/>
        <function-ref name="clr" scoped="" ref="0x4110ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110ac08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4110aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41109010"/>
        <function-ref name="isOutput" scoped="" ref="0x411090f0"/>
        <function-ref name="get" scoped="" ref="0x411091d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411092b0"/>
        <function-ref name="set" scoped="" ref="0x41109390"/>
        <function-ref name="clr" scoped="" ref="0x41109470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411086c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411086c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41108898"/>
        <function-ref name="isInput" scoped="" ref="0x41108978"/>
        <function-ref name="toggle" scoped="" ref="0x41108a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41108b38"/>
        <function-ref name="get" scoped="" ref="0x41108c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41108cf8"/>
        <function-ref name="set" scoped="" ref="0x41108dd8"/>
        <function-ref name="clr" scoped="" ref="0x41108eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411060b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411060b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41106288"/>
        <function-ref name="isInput" scoped="" ref="0x41106368"/>
        <function-ref name="toggle" scoped="" ref="0x41106448"/>
        <function-ref name="isOutput" scoped="" ref="0x41106528"/>
        <function-ref name="get" scoped="" ref="0x41106608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411066e8"/>
        <function-ref name="set" scoped="" ref="0x411067c8"/>
        <function-ref name="clr" scoped="" ref="0x411068a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40427410" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40427410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404275e8"/>
        <function-ref name="isInput" scoped="" ref="0x404276c8"/>
        <function-ref name="toggle" scoped="" ref="0x404277a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40427888"/>
        <function-ref name="get" scoped="" ref="0x40427968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427a48"/>
        <function-ref name="set" scoped="" ref="0x40427b28"/>
        <function-ref name="clr" scoped="" ref="0x40427c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40425170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40425170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425348"/>
        <function-ref name="isInput" scoped="" ref="0x40425428"/>
        <function-ref name="toggle" scoped="" ref="0x40425508"/>
        <function-ref name="isOutput" scoped="" ref="0x404255e8"/>
        <function-ref name="get" scoped="" ref="0x404256c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404257a8"/>
        <function-ref name="set" scoped="" ref="0x40425888"/>
        <function-ref name="clr" scoped="" ref="0x40425968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40428128" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40428128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428300"/>
        <function-ref name="isInput" scoped="" ref="0x404283e0"/>
        <function-ref name="toggle" scoped="" ref="0x404284c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404285a0"/>
        <function-ref name="get" scoped="" ref="0x40428680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428760"/>
        <function-ref name="set" scoped="" ref="0x40428840"/>
        <function-ref name="clr" scoped="" ref="0x40428920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40427d68" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40427d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426010"/>
        <function-ref name="isInput" scoped="" ref="0x404260f0"/>
        <function-ref name="toggle" scoped="" ref="0x404261d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404262b0"/>
        <function-ref name="get" scoped="" ref="0x40426390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426470"/>
        <function-ref name="set" scoped="" ref="0x40426550"/>
        <function-ref name="clr" scoped="" ref="0x40426630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40425ac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40425ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40425d80"/>
        <function-ref name="toggle" scoped="" ref="0x40425e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f010"/>
        <function-ref name="get" scoped="" ref="0x4042f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f1d0"/>
        <function-ref name="set" scoped="" ref="0x4042f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40428a80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40428a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428c58"/>
        <function-ref name="isInput" scoped="" ref="0x40428d38"/>
        <function-ref name="toggle" scoped="" ref="0x40428e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40428ef8"/>
        <function-ref name="get" scoped="" ref="0x40427010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404270f0"/>
        <function-ref name="set" scoped="" ref="0x404271d0"/>
        <function-ref name="clr" scoped="" ref="0x404272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40426790" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40426790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426968"/>
        <function-ref name="isInput" scoped="" ref="0x40426a48"/>
        <function-ref name="toggle" scoped="" ref="0x40426b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40426c08"/>
        <function-ref name="get" scoped="" ref="0x40426ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426dc8"/>
        <function-ref name="set" scoped="" ref="0x40426ea8"/>
        <function-ref name="clr" scoped="" ref="0x40425010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042f4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f968"/>
        <function-ref name="get" scoped="" ref="0x4042fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042fb28"/>
        <function-ref name="set" scoped="" ref="0x4042fc08"/>
        <function-ref name="clr" scoped="" ref="0x4042fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41157538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41157538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41157710"/>
        <function-ref name="isInput" scoped="" ref="0x411577f0"/>
        <function-ref name="toggle" scoped="" ref="0x411578d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411579b0"/>
        <function-ref name="get" scoped="" ref="0x41157a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41157b70"/>
        <function-ref name="set" scoped="" ref="0x41157c50"/>
        <function-ref name="clr" scoped="" ref="0x41157d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41155010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41155010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411551e8"/>
        <function-ref name="isInput" scoped="" ref="0x411552c8"/>
        <function-ref name="toggle" scoped="" ref="0x411553a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41155488"/>
        <function-ref name="get" scoped="" ref="0x41155568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41155648"/>
        <function-ref name="set" scoped="" ref="0x41155728"/>
        <function-ref name="clr" scoped="" ref="0x41155808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411549e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411549e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41154bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41154ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41154d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41154e60"/>
        <function-ref name="get" scoped="" ref="0x41153010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411530f0"/>
        <function-ref name="set" scoped="" ref="0x411531d0"/>
        <function-ref name="clr" scoped="" ref="0x411532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41152538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41152538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41152710"/>
        <function-ref name="isInput" scoped="" ref="0x411527f0"/>
        <function-ref name="toggle" scoped="" ref="0x411528d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411529b0"/>
        <function-ref name="get" scoped="" ref="0x41152a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41152b70"/>
        <function-ref name="set" scoped="" ref="0x41152c50"/>
        <function-ref name="clr" scoped="" ref="0x41152d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41150010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41150010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411501e8"/>
        <function-ref name="isInput" scoped="" ref="0x411502c8"/>
        <function-ref name="toggle" scoped="" ref="0x411503a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41150488"/>
        <function-ref name="get" scoped="" ref="0x41150568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41150648"/>
        <function-ref name="set" scoped="" ref="0x41150728"/>
        <function-ref name="clr" scoped="" ref="0x41150808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4114f9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4114f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4114fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4114fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4114fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4114fe60"/>
        <function-ref name="get" scoped="" ref="0x4114d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4114d0f0"/>
        <function-ref name="set" scoped="" ref="0x4114d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4114d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4114c538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4114c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4114c710"/>
        <function-ref name="isInput" scoped="" ref="0x4114c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4114c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4114c9b0"/>
        <function-ref name="get" scoped="" ref="0x4114ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4114cb70"/>
        <function-ref name="set" scoped="" ref="0x4114cc50"/>
        <function-ref name="clr" scoped="" ref="0x4114cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4114a010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4114a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4114a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4114a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4114a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4114a488"/>
        <function-ref name="get" scoped="" ref="0x4114a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4114a648"/>
        <function-ref name="set" scoped="" ref="0x4114a728"/>
        <function-ref name="clr" scoped="" ref="0x4114a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042be48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435050"/>
        <function-ref name="isInput" scoped="" ref="0x40435130"/>
        <function-ref name="toggle" scoped="" ref="0x40435210"/>
        <function-ref name="isOutput" scoped="" ref="0x404352f0"/>
        <function-ref name="get" scoped="" ref="0x404353d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404354b0"/>
        <function-ref name="set" scoped="" ref="0x40435590"/>
        <function-ref name="clr" scoped="" ref="0x40435670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40434ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40434ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40434d80"/>
        <function-ref name="toggle" scoped="" ref="0x40434e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40433010"/>
        <function-ref name="get" scoped="" ref="0x404330f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404331d0"/>
        <function-ref name="set" scoped="" ref="0x404332b0"/>
        <function-ref name="clr" scoped="" ref="0x40433390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042cb00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ccd8"/>
        <function-ref name="isInput" scoped="" ref="0x4042cdb8"/>
        <function-ref name="toggle" scoped="" ref="0x4042ce98"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b010"/>
        <function-ref name="get" scoped="" ref="0x4042b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b1d0"/>
        <function-ref name="set" scoped="" ref="0x4042b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404357d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404357d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404359a8"/>
        <function-ref name="isInput" scoped="" ref="0x40435a88"/>
        <function-ref name="toggle" scoped="" ref="0x40435b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40435c48"/>
        <function-ref name="get" scoped="" ref="0x40435d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435e08"/>
        <function-ref name="set" scoped="" ref="0x40435ee8"/>
        <function-ref name="clr" scoped="" ref="0x40434010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404334f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404334f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404336c8"/>
        <function-ref name="isInput" scoped="" ref="0x404337a8"/>
        <function-ref name="toggle" scoped="" ref="0x40433888"/>
        <function-ref name="isOutput" scoped="" ref="0x40433968"/>
        <function-ref name="get" scoped="" ref="0x40433a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433b28"/>
        <function-ref name="set" scoped="" ref="0x40433c08"/>
        <function-ref name="clr" scoped="" ref="0x40433ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042b4f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b968"/>
        <function-ref name="get" scoped="" ref="0x4042ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042bb28"/>
        <function-ref name="set" scoped="" ref="0x4042bc08"/>
        <function-ref name="clr" scoped="" ref="0x4042bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40434170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40434170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434348"/>
        <function-ref name="isInput" scoped="" ref="0x40434428"/>
        <function-ref name="toggle" scoped="" ref="0x40434508"/>
        <function-ref name="isOutput" scoped="" ref="0x404345e8"/>
        <function-ref name="get" scoped="" ref="0x404346c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404347a8"/>
        <function-ref name="set" scoped="" ref="0x40434888"/>
        <function-ref name="clr" scoped="" ref="0x40434968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40433e48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40433e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432050"/>
        <function-ref name="isInput" scoped="" ref="0x40432130"/>
        <function-ref name="toggle" scoped="" ref="0x40432210"/>
        <function-ref name="isOutput" scoped="" ref="0x404322f0"/>
        <function-ref name="get" scoped="" ref="0x404323d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404324b0"/>
        <function-ref name="set" scoped="" ref="0x40432590"/>
        <function-ref name="clr" scoped="" ref="0x40432670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115e418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115e5f0"/>
        <function-ref name="isInput" scoped="" ref="0x4115e6d0"/>
        <function-ref name="toggle" scoped="" ref="0x4115e7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115e890"/>
        <function-ref name="get" scoped="" ref="0x4115e970"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115ea50"/>
        <function-ref name="set" scoped="" ref="0x4115eb30"/>
        <function-ref name="clr" scoped="" ref="0x4115ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115dde0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115c010"/>
        <function-ref name="isInput" scoped="" ref="0x4115c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4115c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115c2b0"/>
        <function-ref name="get" scoped="" ref="0x4115c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115c470"/>
        <function-ref name="set" scoped="" ref="0x4115c550"/>
        <function-ref name="clr" scoped="" ref="0x4115c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115b7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4115bab0"/>
        <function-ref name="toggle" scoped="" ref="0x4115bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4115bc70"/>
        <function-ref name="get" scoped="" ref="0x4115bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115be30"/>
        <function-ref name="set" scoped="" ref="0x4115bf10"/>
        <function-ref name="clr" scoped="" ref="0x4115a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41199228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41199228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41199400"/>
        <function-ref name="isInput" scoped="" ref="0x411994e0"/>
        <function-ref name="toggle" scoped="" ref="0x411995c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411996a0"/>
        <function-ref name="get" scoped="" ref="0x41199780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41199860"/>
        <function-ref name="set" scoped="" ref="0x41199940"/>
        <function-ref name="clr" scoped="" ref="0x41199a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41198c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41198c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41198de0"/>
        <function-ref name="isInput" scoped="" ref="0x41198ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41197010"/>
        <function-ref name="isOutput" scoped="" ref="0x411970f0"/>
        <function-ref name="get" scoped="" ref="0x411971d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411972b0"/>
        <function-ref name="set" scoped="" ref="0x41197390"/>
        <function-ref name="clr" scoped="" ref="0x41197470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411966c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411966c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41196898"/>
        <function-ref name="isInput" scoped="" ref="0x41196978"/>
        <function-ref name="toggle" scoped="" ref="0x41196a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41196b38"/>
        <function-ref name="get" scoped="" ref="0x41196c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41196cf8"/>
        <function-ref name="set" scoped="" ref="0x41196dd8"/>
        <function-ref name="clr" scoped="" ref="0x41196eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411940b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411940b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41194288"/>
        <function-ref name="isInput" scoped="" ref="0x41194368"/>
        <function-ref name="toggle" scoped="" ref="0x41194448"/>
        <function-ref name="isOutput" scoped="" ref="0x41194528"/>
        <function-ref name="get" scoped="" ref="0x41194608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411946e8"/>
        <function-ref name="set" scoped="" ref="0x411947c8"/>
        <function-ref name="clr" scoped="" ref="0x411948a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41193a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41193a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41193c60"/>
        <function-ref name="isInput" scoped="" ref="0x41193d40"/>
        <function-ref name="toggle" scoped="" ref="0x41193e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41193f00"/>
        <function-ref name="get" scoped="" ref="0x41192010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411920f0"/>
        <function-ref name="set" scoped="" ref="0x411921d0"/>
        <function-ref name="clr" scoped="" ref="0x411922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043a6b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a888"/>
        <function-ref name="isInput" scoped="" ref="0x4043a968"/>
        <function-ref name="toggle" scoped="" ref="0x4043aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ab28"/>
        <function-ref name="get" scoped="" ref="0x4043ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ace8"/>
        <function-ref name="set" scoped="" ref="0x4043adc8"/>
        <function-ref name="clr" scoped="" ref="0x4043aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40438330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40438330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438508"/>
        <function-ref name="isInput" scoped="" ref="0x404385e8"/>
        <function-ref name="toggle" scoped="" ref="0x404386c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404387a8"/>
        <function-ref name="get" scoped="" ref="0x40438888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438968"/>
        <function-ref name="set" scoped="" ref="0x40438a48"/>
        <function-ref name="clr" scoped="" ref="0x40438b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043b3d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4043b690"/>
        <function-ref name="toggle" scoped="" ref="0x4043b770"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b850"/>
        <function-ref name="get" scoped="" ref="0x4043b930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ba10"/>
        <function-ref name="set" scoped="" ref="0x4043baf0"/>
        <function-ref name="clr" scoped="" ref="0x4043bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40439030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40439030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439208"/>
        <function-ref name="isInput" scoped="" ref="0x404392e8"/>
        <function-ref name="toggle" scoped="" ref="0x404393c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404394a8"/>
        <function-ref name="get" scoped="" ref="0x40439588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439668"/>
        <function-ref name="set" scoped="" ref="0x40439748"/>
        <function-ref name="clr" scoped="" ref="0x40439828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40438c88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40438c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438e60"/>
        <function-ref name="isInput" scoped="" ref="0x40436010"/>
        <function-ref name="toggle" scoped="" ref="0x404360f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404361d0"/>
        <function-ref name="get" scoped="" ref="0x404362b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436390"/>
        <function-ref name="set" scoped="" ref="0x40436470"/>
        <function-ref name="clr" scoped="" ref="0x40436550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043bd30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bf08"/>
        <function-ref name="isInput" scoped="" ref="0x4043a010"/>
        <function-ref name="toggle" scoped="" ref="0x4043a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a1d0"/>
        <function-ref name="get" scoped="" ref="0x4043a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a390"/>
        <function-ref name="set" scoped="" ref="0x4043a470"/>
        <function-ref name="clr" scoped="" ref="0x4043a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40439988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40439988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439b60"/>
        <function-ref name="isInput" scoped="" ref="0x40439c40"/>
        <function-ref name="toggle" scoped="" ref="0x40439d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40439e00"/>
        <function-ref name="get" scoped="" ref="0x40439ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438010"/>
        <function-ref name="set" scoped="" ref="0x404380f0"/>
        <function-ref name="clr" scoped="" ref="0x404381d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404366b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404366b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436888"/>
        <function-ref name="isInput" scoped="" ref="0x40436968"/>
        <function-ref name="toggle" scoped="" ref="0x40436a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40436b28"/>
        <function-ref name="get" scoped="" ref="0x40436c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436ce8"/>
        <function-ref name="set" scoped="" ref="0x40436dc8"/>
        <function-ref name="clr" scoped="" ref="0x40436ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411aade8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411aade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a6010"/>
        <function-ref name="isInput" scoped="" ref="0x411a60f0"/>
        <function-ref name="toggle" scoped="" ref="0x411a61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411a62b0"/>
        <function-ref name="get" scoped="" ref="0x411a6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a6470"/>
        <function-ref name="set" scoped="" ref="0x411a6550"/>
        <function-ref name="clr" scoped="" ref="0x411a6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a57f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a59d0"/>
        <function-ref name="isInput" scoped="" ref="0x411a5ab0"/>
        <function-ref name="toggle" scoped="" ref="0x411a5b90"/>
        <function-ref name="isOutput" scoped="" ref="0x411a5c70"/>
        <function-ref name="get" scoped="" ref="0x411a5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a5e30"/>
        <function-ref name="set" scoped="" ref="0x411a5f10"/>
        <function-ref name="clr" scoped="" ref="0x411a4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a3228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a3400"/>
        <function-ref name="isInput" scoped="" ref="0x411a34e0"/>
        <function-ref name="toggle" scoped="" ref="0x411a35c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411a36a0"/>
        <function-ref name="get" scoped="" ref="0x411a3780"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a3860"/>
        <function-ref name="set" scoped="" ref="0x411a3940"/>
        <function-ref name="clr" scoped="" ref="0x411a3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a2c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a2de0"/>
        <function-ref name="isInput" scoped="" ref="0x411a2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x411a0010"/>
        <function-ref name="isOutput" scoped="" ref="0x411a00f0"/>
        <function-ref name="get" scoped="" ref="0x411a01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a02b0"/>
        <function-ref name="set" scoped="" ref="0x411a0390"/>
        <function-ref name="clr" scoped="" ref="0x411a0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119f6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119f898"/>
        <function-ref name="isInput" scoped="" ref="0x4119f978"/>
        <function-ref name="toggle" scoped="" ref="0x4119fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4119fb38"/>
        <function-ref name="get" scoped="" ref="0x4119fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119fcf8"/>
        <function-ref name="set" scoped="" ref="0x4119fdd8"/>
        <function-ref name="clr" scoped="" ref="0x4119feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119d0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119d288"/>
        <function-ref name="isInput" scoped="" ref="0x4119d368"/>
        <function-ref name="toggle" scoped="" ref="0x4119d448"/>
        <function-ref name="isOutput" scoped="" ref="0x4119d528"/>
        <function-ref name="get" scoped="" ref="0x4119d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119d6e8"/>
        <function-ref name="set" scoped="" ref="0x4119d7c8"/>
        <function-ref name="clr" scoped="" ref="0x4119d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119ca88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119cc60"/>
        <function-ref name="isInput" scoped="" ref="0x4119cd40"/>
        <function-ref name="toggle" scoped="" ref="0x4119ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x4119cf00"/>
        <function-ref name="get" scoped="" ref="0x4119b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119b0f0"/>
        <function-ref name="set" scoped="" ref="0x4119b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4119b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119a538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119a710"/>
        <function-ref name="isInput" scoped="" ref="0x4119a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4119a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4119a9b0"/>
        <function-ref name="get" scoped="" ref="0x4119aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119ab70"/>
        <function-ref name="set" scoped="" ref="0x4119ac50"/>
        <function-ref name="clr" scoped="" ref="0x4119ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043e880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043ea58"/>
        <function-ref name="isInput" scoped="" ref="0x4043eb38"/>
        <function-ref name="toggle" scoped="" ref="0x4043ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ecf8"/>
        <function-ref name="get" scoped="" ref="0x4043edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043eeb8"/>
        <function-ref name="set" scoped="" ref="0x4043d010"/>
        <function-ref name="clr" scoped="" ref="0x4043d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404530b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404530b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453288"/>
        <function-ref name="isInput" scoped="" ref="0x40453368"/>
        <function-ref name="toggle" scoped="" ref="0x40453448"/>
        <function-ref name="isOutput" scoped="" ref="0x40453528"/>
        <function-ref name="get" scoped="" ref="0x40453608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404536e8"/>
        <function-ref name="set" scoped="" ref="0x404537c8"/>
        <function-ref name="clr" scoped="" ref="0x404538a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40451880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40451880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451a58"/>
        <function-ref name="isInput" scoped="" ref="0x40451b38"/>
        <function-ref name="toggle" scoped="" ref="0x40451c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40451cf8"/>
        <function-ref name="get" scoped="" ref="0x40451dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451eb8"/>
        <function-ref name="set" scoped="" ref="0x40450010"/>
        <function-ref name="clr" scoped="" ref="0x404500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404590b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404590b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459288"/>
        <function-ref name="isInput" scoped="" ref="0x40459368"/>
        <function-ref name="toggle" scoped="" ref="0x40459448"/>
        <function-ref name="isOutput" scoped="" ref="0x40459528"/>
        <function-ref name="get" scoped="" ref="0x40459608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404596e8"/>
        <function-ref name="set" scoped="" ref="0x404597c8"/>
        <function-ref name="clr" scoped="" ref="0x404598a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40457880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40457880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457a58"/>
        <function-ref name="isInput" scoped="" ref="0x40457b38"/>
        <function-ref name="toggle" scoped="" ref="0x40457c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40457cf8"/>
        <function-ref name="get" scoped="" ref="0x40457dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457eb8"/>
        <function-ref name="set" scoped="" ref="0x40456010"/>
        <function-ref name="clr" scoped="" ref="0x404560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045f0b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f288"/>
        <function-ref name="isInput" scoped="" ref="0x4045f368"/>
        <function-ref name="toggle" scoped="" ref="0x4045f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f528"/>
        <function-ref name="get" scoped="" ref="0x4045f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f6e8"/>
        <function-ref name="set" scoped="" ref="0x4045f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4045f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045d8f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045dac8"/>
        <function-ref name="isInput" scoped="" ref="0x4045dba8"/>
        <function-ref name="toggle" scoped="" ref="0x4045dc88"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dd68"/>
        <function-ref name="get" scoped="" ref="0x4045de48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045df28"/>
        <function-ref name="set" scoped="" ref="0x4045c018"/>
        <function-ref name="clr" scoped="" ref="0x4045c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045a0b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a288"/>
        <function-ref name="isInput" scoped="" ref="0x4045a368"/>
        <function-ref name="toggle" scoped="" ref="0x4045a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a528"/>
        <function-ref name="get" scoped="" ref="0x4045a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a6e8"/>
        <function-ref name="set" scoped="" ref="0x4045a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4045a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40463880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40463880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463a58"/>
        <function-ref name="isInput" scoped="" ref="0x40463b38"/>
        <function-ref name="toggle" scoped="" ref="0x40463c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40463cf8"/>
        <function-ref name="get" scoped="" ref="0x40463dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463eb8"/>
        <function-ref name="set" scoped="" ref="0x40462010"/>
        <function-ref name="clr" scoped="" ref="0x404620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404600b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404600b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460288"/>
        <function-ref name="isInput" scoped="" ref="0x40460368"/>
        <function-ref name="toggle" scoped="" ref="0x40460448"/>
        <function-ref name="isOutput" scoped="" ref="0x40460528"/>
        <function-ref name="get" scoped="" ref="0x40460608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404606e8"/>
        <function-ref name="set" scoped="" ref="0x404607c8"/>
        <function-ref name="clr" scoped="" ref="0x404608a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40469880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40469880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469a58"/>
        <function-ref name="isInput" scoped="" ref="0x40469b38"/>
        <function-ref name="toggle" scoped="" ref="0x40469c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40469cf8"/>
        <function-ref name="get" scoped="" ref="0x40469dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469eb8"/>
        <function-ref name="set" scoped="" ref="0x40468010"/>
        <function-ref name="clr" scoped="" ref="0x404680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404660b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404660b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466288"/>
        <function-ref name="isInput" scoped="" ref="0x40466368"/>
        <function-ref name="toggle" scoped="" ref="0x40466448"/>
        <function-ref name="isOutput" scoped="" ref="0x40466528"/>
        <function-ref name="get" scoped="" ref="0x40466608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404666e8"/>
        <function-ref name="set" scoped="" ref="0x404667c8"/>
        <function-ref name="clr" scoped="" ref="0x404668a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40470880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40470880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470a58"/>
        <function-ref name="isInput" scoped="" ref="0x40470b38"/>
        <function-ref name="toggle" scoped="" ref="0x40470c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40470cf8"/>
        <function-ref name="get" scoped="" ref="0x40470dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470eb8"/>
        <function-ref name="set" scoped="" ref="0x4046f010"/>
        <function-ref name="clr" scoped="" ref="0x4046f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4048a4d0" loc="50:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4048a4d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4048a880" loc="51:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4048a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4048aa58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4048ab38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4048ac18"/>
        <function-ref name="actualMicro" scoped="" ref="0x4048acf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4048add8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4049c030" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4049c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4048d2b8" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4048d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4048d490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4048dc18" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4048d650" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4048d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048d828"/>
        <function-ref name="taskLoop" scoped="" ref="0x4048d908"/>
        <function-ref name="runNextTask" scoped="" ref="0x4048d9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40302600" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403027d8"/>
        <function-ref name="runTask" scoped="" ref="0x403028b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402fced8" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402fced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f80c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f81a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f8280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40380670" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40380670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40380848"/>
        <function-ref name="runTask" scoped="" ref="0x40380928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40385310" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40385310"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403854e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40381df8" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40381df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40380010"/>
        <function-ref name="taskLoop" scoped="" ref="0x403800f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403801d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40394e88" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40394e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40397070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402f7c28" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402f7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402f7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403908f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403908f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40390ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404a8df8" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404a3010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404a30f0"/>
        <function-ref name="led1On" scoped="" ref="0x404a31d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404a32b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404a3390"/>
        <function-ref name="get" scoped="" ref="0x404a3470"/>
        <function-ref name="led1Off" scoped="" ref="0x404a3550"/>
        <function-ref name="led2Off" scoped="" ref="0x404a38d0"/>
        <function-ref name="set" scoped="" ref="0x404a3630"/>
        <function-ref name="led0On" scoped="" ref="0x404a3710"/>
        <function-ref name="led2On" scoped="" ref="0x404a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404b3240" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404b3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3418"/>
        <function-ref name="isInput" scoped="" ref="0x404b34f8"/>
        <function-ref name="toggle" scoped="" ref="0x404b35d8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b36b8"/>
        <function-ref name="get" scoped="" ref="0x404b3798"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3878"/>
        <function-ref name="set" scoped="" ref="0x404b3958"/>
        <function-ref name="clr" scoped="" ref="0x404b3a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b4168" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404b3c28" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404b3c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3e00"/>
        <function-ref name="isInput" scoped="" ref="0x404b3ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404b2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b20f0"/>
        <function-ref name="get" scoped="" ref="0x404b21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b22b0"/>
        <function-ref name="set" scoped="" ref="0x404b2390"/>
        <function-ref name="clr" scoped="" ref="0x404b2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404b44b0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404b44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b4688"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b4768"/>
        <function-ref name="led1On" scoped="" ref="0x404b4848"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b4928"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b4a08"/>
        <function-ref name="get" scoped="" ref="0x404b4ae8"/>
        <function-ref name="led1Off" scoped="" ref="0x404b4bc8"/>
        <function-ref name="led2Off" scoped="" ref="0x404b3010"/>
        <function-ref name="set" scoped="" ref="0x404b4ca8"/>
        <function-ref name="led0On" scoped="" ref="0x404b4d88"/>
        <function-ref name="led2On" scoped="" ref="0x404b4e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404b2660" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404b2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2838"/>
        <function-ref name="isInput" scoped="" ref="0x404b2918"/>
        <function-ref name="toggle" scoped="" ref="0x404b29f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2ad8"/>
        <function-ref name="get" scoped="" ref="0x404b2bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2c98"/>
        <function-ref name="set" scoped="" ref="0x404b2d78"/>
        <function-ref name="clr" scoped="" ref="0x404b2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404be978" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404be978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404beb50"/>
        <function-ref name="isInput" scoped="" ref="0x404bec30"/>
        <function-ref name="toggle" scoped="" ref="0x404bed10"/>
        <function-ref name="isOutput" scoped="" ref="0x404bedf0"/>
        <function-ref name="get" scoped="" ref="0x404beed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd010"/>
        <function-ref name="set" scoped="" ref="0x404bd0f0"/>
        <function-ref name="clr" scoped="" ref="0x404bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404bd3e0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404bd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd5b8"/>
        <function-ref name="isInput" scoped="" ref="0x404bd698"/>
        <function-ref name="toggle" scoped="" ref="0x404bd778"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd858"/>
        <function-ref name="get" scoped="" ref="0x404bd938"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bda18"/>
        <function-ref name="set" scoped="" ref="0x404bdaf8"/>
        <function-ref name="clr" scoped="" ref="0x404bdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404bc7c0" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bc998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404bdde8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404bdde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc010"/>
        <function-ref name="isInput" scoped="" ref="0x404bc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404bc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc2b0"/>
        <function-ref name="get" scoped="" ref="0x404bc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc470"/>
        <function-ref name="set" scoped="" ref="0x404bc550"/>
        <function-ref name="clr" scoped="" ref="0x404bc630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x404cc270" loc="13:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x404cc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404c5d58"/>
        <function-ref name="fired" scoped="" ref="0x404c5010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404c5718"/>
        <function-ref name="isOneShot" scoped="" ref="0x404c54c0"/>
        <function-ref name="getdt" scoped="" ref="0x404c4268"/>
        <function-ref name="gett0" scoped="" ref="0x404c4010"/>
        <function-ref name="isRunning" scoped="" ref="0x404c5268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404cc898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404c5a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ccb18"/>
        <function-ref name="stop" scoped="" ref="0x404ccd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x40524dc0" loc="18:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x40524dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40520010"/>
        <function-ref name="stopDone" scoped="" ref="0x405200f0"/>
        <function-ref name="start" scoped="" ref="0x405201d0"/>
        <function-ref name="stop" scoped="" ref="0x405202b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403a5878" loc="11:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a5878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a5a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4050fce8" loc="14:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4050fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4050fec0"/>
        <function-ref name="payloadLength" scoped="" ref="0x404ca010"/>
        <function-ref name="getPayload" scoped="" ref="0x404ca0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404ca1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4051c7d0" loc="16:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4051c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4051c9a8"/>
        <function-ref name="getPayload" scoped="" ref="0x4051ca88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4051cb68"/>
        <function-ref name="cancel" scoped="" ref="0x4051cc48"/>
        <function-ref name="sendDone" scoped="" ref="0x4051cd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x405258e8" loc="17:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405258e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40525ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403a5be0" loc="12:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403a5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403a5db8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403a5e98"/>
        <function-ref name="led1On" scoped="" ref="0x404c6010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404c60f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404c61d0"/>
        <function-ref name="get" scoped="" ref="0x404c62b0"/>
        <function-ref name="led1Off" scoped="" ref="0x404c6390"/>
        <function-ref name="led2Off" scoped="" ref="0x404c6710"/>
        <function-ref name="set" scoped="" ref="0x404c6470"/>
        <function-ref name="led0On" scoped="" ref="0x404c6550"/>
        <function-ref name="led2On" scoped="" ref="0x404c6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40521a98" loc="15:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40521a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40521c70"/>
        <function-ref name="source" scoped="" ref="0x40521d50"/>
        <function-ref name="address" scoped="" ref="0x40521e30"/>
        <function-ref name="destination" scoped="" ref="0x40521f10"/>
        <function-ref name="setSource" scoped="" ref="0x404d7010"/>
        <function-ref name="setDestination" scoped="" ref="0x404d70f0"/>
        <function-ref name="type" scoped="" ref="0x404d71d0"/>
        <function-ref name="setType" scoped="" ref="0x404d72b0"/>
        <function-ref name="isForMe" scoped="" ref="0x404d7390"/>
        <function-ref name="setGroup" scoped="" ref="0x404d7470"/>
        <function-ref name="localGroup" scoped="" ref="0x404d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404c7330" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ProximityAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404c7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40534e38"/>
        <function-ref name="fired" scoped="" ref="0x405340f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405347f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x405345a0"/>
        <function-ref name="getdt" scoped="" ref="0x40634310"/>
        <function-ref name="gett0" scoped="" ref="0x406340b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40534348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404c7958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40534b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x404c7bd8"/>
        <function-ref name="stop" scoped="" ref="0x404c7e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4053d010" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4053d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4053cb00"/>
        <function-ref name="fired" scoped="" ref="0x4053dd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4053c4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4053c268"/>
        <function-ref name="getdt" scoped="" ref="0x4053b010"/>
        <function-ref name="gett0" scoped="" ref="0x4053cd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4053c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4053d638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4053c7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4053d8b8"/>
        <function-ref name="stop" scoped="" ref="0x4053db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40547100" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40547100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40546be0"/>
        <function-ref name="fired" scoped="" ref="0x40547e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405465a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40546348"/>
        <function-ref name="getdt" scoped="" ref="0x405450b8"/>
        <function-ref name="gett0" scoped="" ref="0x40546e38"/>
        <function-ref name="isRunning" scoped="" ref="0x405460f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40547728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405468c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405479a8"/>
        <function-ref name="stop" scoped="" ref="0x40547c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405440d0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405440d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40544718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4053b890" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4053b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4053ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40556dc8" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40556dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40558530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40558a20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405587a8"/>
        <function-ref name="overflow" scoped="" ref="0x40558c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405437f8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405437f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405439d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4054e1c8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4054e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4054a690"/>
        <function-ref name="fired" scoped="" ref="0x4054ee30"/>
        <function-ref name="startAt" scoped="" ref="0x4054a350"/>
        <function-ref name="isRunning" scoped="" ref="0x4054a0d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4054a908"/>
        <function-ref name="start" scoped="" ref="0x4054e918"/>
        <function-ref name="stop" scoped="" ref="0x4054ebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x405e5850" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405e5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e4d58"/>
        <function-ref name="fired" scoped="" ref="0x405e4528"/>
        <function-ref name="startAt" scoped="" ref="0x405e4a18"/>
        <function-ref name="isRunning" scoped="" ref="0x405e47a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405e3010"/>
        <function-ref name="start" scoped="" ref="0x405e4010"/>
        <function-ref name="stop" scoped="" ref="0x405e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405e5418" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405e5418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f95d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f95d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e55f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405e3340" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405e3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e3a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405e2010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405e3d08"/>
        <function-ref name="overflow" scoped="" ref="0x405e2288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x412304e0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x412304e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x412306b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41230798"/>
        <function-ref name="getControlA" scoped="" ref="0x41230878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41230958"/>
        <function-ref name="setControlB" scoped="" ref="0x41230a38"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41230b18"/>
        <function-ref name="getControlB" scoped="" ref="0x41230bf8"/>
        <function-ref name="setControlA" scoped="" ref="0x41230cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41236638" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41236638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41235af0"/>
        <function-ref name="fired" scoped="" ref="0x412352c0"/>
        <function-ref name="startAt" scoped="" ref="0x412357b0"/>
        <function-ref name="isRunning" scoped="" ref="0x41235538"/>
        <function-ref name="getAlarm" scoped="" ref="0x41235d68"/>
        <function-ref name="start" scoped="" ref="0x41236d88"/>
        <function-ref name="stop" scoped="" ref="0x41235048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41236200" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41236200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412363d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x412330c0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x412330c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41233810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41233d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41233a88"/>
        <function-ref name="overflow" scoped="" ref="0x41232010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4122d9a8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4122d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4122db80"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4122dc60"/>
        <function-ref name="controlABusy" scoped="" ref="0x4122dd40"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4122de20"/>
        <function-ref name="countBusy" scoped="" ref="0x4122df00"/>
        <function-ref name="compareABusy" scoped="" ref="0x4122c010"/>
        <function-ref name="getAssr" scoped="" ref="0x4122c0f0"/>
        <function-ref name="setAssr" scoped="" ref="0x4122c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41230ec8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41230ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4122d500"/>
        <function-ref name="fired" scoped="" ref="0x4122ea90"/>
        <function-ref name="get" scoped="" ref="0x4122e578"/>
        <function-ref name="reset" scoped="" ref="0x4122ed08"/>
        <function-ref name="isOn" scoped="" ref="0x4122d778"/>
        <function-ref name="set" scoped="" ref="0x4122e7f0"/>
        <function-ref name="start" scoped="" ref="0x4122d010"/>
        <function-ref name="stop" scoped="" ref="0x4122d288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41232300" loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41232300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41231d68"/>
        <function-ref name="test" scoped="" ref="0x41231878"/>
        <function-ref name="get" scoped="" ref="0x41232948"/>
        <function-ref name="setScale" scoped="" ref="0x41230010"/>
        <function-ref name="getScale" scoped="" ref="0x412302b0"/>
        <function-ref name="reset" scoped="" ref="0x41231110"/>
        <function-ref name="overflow" scoped="" ref="0x41232e60"/>
        <function-ref name="isOn" scoped="" ref="0x41231af0"/>
        <function-ref name="set" scoped="" ref="0x41232bc0"/>
        <function-ref name="start" scoped="" ref="0x41231388"/>
        <function-ref name="stop" scoped="" ref="0x41231600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405a6798" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405a6798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405a6970"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405a6a50"/>
        <function-ref name="getControlA" scoped="" ref="0x405a6b30"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405a6c10"/>
        <function-ref name="setControlB" scoped="" ref="0x405a6cf0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405a6dd0"/>
        <function-ref name="getControlB" scoped="" ref="0x405a6eb0"/>
        <function-ref name="setControlA" scoped="" ref="0x405a5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405a4e68" loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405a4e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405a3050"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405a3130"/>
        <function-ref name="controlABusy" scoped="" ref="0x405a3210"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405a32f0"/>
        <function-ref name="countBusy" scoped="" ref="0x405a33d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x405a34b0"/>
        <function-ref name="getAssr" scoped="" ref="0x405a3590"/>
        <function-ref name="setAssr" scoped="" ref="0x405a3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405a5338" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405a5338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405a4898"/>
        <function-ref name="fired" scoped="" ref="0x405a5e98"/>
        <function-ref name="get" scoped="" ref="0x405a5980"/>
        <function-ref name="reset" scoped="" ref="0x405a4130"/>
        <function-ref name="isOn" scoped="" ref="0x405a4b10"/>
        <function-ref name="set" scoped="" ref="0x405a5bf8"/>
        <function-ref name="start" scoped="" ref="0x405a43a8"/>
        <function-ref name="stop" scoped="" ref="0x405a4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405a94c0" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405a94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405a8f18"/>
        <function-ref name="test" scoped="" ref="0x405a8a28"/>
        <function-ref name="get" scoped="" ref="0x405a9b08"/>
        <function-ref name="setScale" scoped="" ref="0x405a61a8"/>
        <function-ref name="getScale" scoped="" ref="0x405a6448"/>
        <function-ref name="reset" scoped="" ref="0x405a82c0"/>
        <function-ref name="overflow" scoped="" ref="0x405a8048"/>
        <function-ref name="isOn" scoped="" ref="0x405a8ca0"/>
        <function-ref name="set" scoped="" ref="0x405a9d80"/>
        <function-ref name="start" scoped="" ref="0x405a8538"/>
        <function-ref name="stop" scoped="" ref="0x405a87b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405ae678" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405ae678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405ae850"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405ae930"/>
        <function-ref name="getControlA" scoped="" ref="0x405aea10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405aeaf0"/>
        <function-ref name="setControlB" scoped="" ref="0x405aebd0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405aecb0"/>
        <function-ref name="getControlB" scoped="" ref="0x405aed90"/>
        <function-ref name="setControlA" scoped="" ref="0x405aee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405acce0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405acce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405aceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405aa1a8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405aa1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405aa380"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405aa460"/>
        <function-ref name="controlABusy" scoped="" ref="0x405aa540"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405aa620"/>
        <function-ref name="countBusy" scoped="" ref="0x405aa700"/>
        <function-ref name="compareABusy" scoped="" ref="0x405aa7e0"/>
        <function-ref name="getAssr" scoped="" ref="0x405aa8c0"/>
        <function-ref name="setAssr" scoped="" ref="0x405aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405ad248" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405ad248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405ac7b0"/>
        <function-ref name="fired" scoped="" ref="0x405adda8"/>
        <function-ref name="get" scoped="" ref="0x405ad890"/>
        <function-ref name="reset" scoped="" ref="0x405ac048"/>
        <function-ref name="isOn" scoped="" ref="0x405aca28"/>
        <function-ref name="set" scoped="" ref="0x405adb08"/>
        <function-ref name="start" scoped="" ref="0x405ac2c0"/>
        <function-ref name="stop" scoped="" ref="0x405ac538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405b1388" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405b1388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405afdf8"/>
        <function-ref name="test" scoped="" ref="0x405af908"/>
        <function-ref name="get" scoped="" ref="0x405b19d0"/>
        <function-ref name="setScale" scoped="" ref="0x405ae088"/>
        <function-ref name="getScale" scoped="" ref="0x405ae328"/>
        <function-ref name="reset" scoped="" ref="0x405af1a0"/>
        <function-ref name="overflow" scoped="" ref="0x405b1ee8"/>
        <function-ref name="isOn" scoped="" ref="0x405afb80"/>
        <function-ref name="set" scoped="" ref="0x405b1c48"/>
        <function-ref name="start" scoped="" ref="0x405af418"/>
        <function-ref name="stop" scoped="" ref="0x405af690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x405fd4d8" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x405fd4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405fd6b0"/>
        <function-ref name="runTask" scoped="" ref="0x405fd790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40600a48" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40600a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405fd010"/>
        <function-ref name="fired" scoped="" ref="0x405ff718"/>
        <function-ref name="startAt" scoped="" ref="0x405ffc08"/>
        <function-ref name="isRunning" scoped="" ref="0x405ff990"/>
        <function-ref name="getAlarm" scoped="" ref="0x405fd288"/>
        <function-ref name="start" scoped="" ref="0x405ff200"/>
        <function-ref name="stop" scoped="" ref="0x405ff4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40602720" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40602720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40600248"/>
        <function-ref name="fired" scoped="" ref="0x406014e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40601bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40601998"/>
        <function-ref name="getdt" scoped="" ref="0x406006f8"/>
        <function-ref name="gett0" scoped="" ref="0x406004a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40601740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40602d48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40601f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40601010"/>
        <function-ref name="stop" scoped="" ref="0x40601290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4062cbc8" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4062cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062cda0"/>
        <function-ref name="runTask" scoped="" ref="0x4062ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4062f968" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4062f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062c4c8"/>
        <function-ref name="fired" scoped="" ref="0x4062d768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062de70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062dc18"/>
        <function-ref name="getdt" scoped="" ref="0x4062c978"/>
        <function-ref name="gett0" scoped="" ref="0x4062c720"/>
        <function-ref name="isRunning" scoped="" ref="0x4062d9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062d010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062c1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062d290"/>
        <function-ref name="stop" scoped="" ref="0x4062d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4060c600" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4060c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062f1a8"/>
        <function-ref name="fired" scoped="" ref="0x406313d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40631b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x406318a8"/>
        <function-ref name="getdt" scoped="" ref="0x4062f678"/>
        <function-ref name="gett0" scoped="" ref="0x4062f410"/>
        <function-ref name="isRunning" scoped="" ref="0x40631640"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4060cc38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40631e40"/>
        <function-ref name="startOneShot" scoped="" ref="0x4060cec8"/>
        <function-ref name="stop" scoped="" ref="0x40631170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4062a0a0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4062a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4062aa38" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40629200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406296f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40629478"/>
        <function-ref name="overflow" scoped="" ref="0x40629968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40634e70" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40634e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40645070"/>
        <function-ref name="stopDone" scoped="" ref="0x40645150"/>
        <function-ref name="start" scoped="" ref="0x40645230"/>
        <function-ref name="stop" scoped="" ref="0x40645310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4064f748" loc="47:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4064f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40655260"/>
        <function-ref name="clear" scoped="" ref="0x40655610"/>
        <function-ref name="isValid" scoped="" ref="0x4064fe98"/>
        <function-ref name="set" scoped="" ref="0x406559c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40641f08" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40641f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406430f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40645770" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40645770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40645948"/>
        <function-ref name="getPayload" scoped="" ref="0x40645a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40645b08"/>
        <function-ref name="cancel" scoped="" ref="0x40645be8"/>
        <function-ref name="sendDone" scoped="" ref="0x40645cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406447f0" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406447f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406449c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40643270" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40643270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40643448"/>
        <function-ref name="payloadLength" scoped="" ref="0x40643528"/>
        <function-ref name="getPayload" scoped="" ref="0x40643608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406436e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4064d830" loc="41:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4064d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4064da08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4064dae8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4064dbc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4064dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40644158" loc="33:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40644158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40644330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4063cb10" loc="40:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4063cce8"/>
        <function-ref name="noAck" scoped="" ref="0x4063cdc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4063cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406461b8" loc="43:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406461b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40646390"/>
        <function-ref name="setRetries" scoped="" ref="0x40646470"/>
        <function-ref name="getRetries" scoped="" ref="0x40646550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40646630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40646710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40643960" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40643960"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40643b38"/>
        <function-ref name="source" scoped="" ref="0x40643c18"/>
        <function-ref name="address" scoped="" ref="0x40643cf8"/>
        <function-ref name="destination" scoped="" ref="0x40643dd8"/>
        <function-ref name="setSource" scoped="" ref="0x40643eb8"/>
        <function-ref name="setDestination" scoped="" ref="0x40642010"/>
        <function-ref name="type" scoped="" ref="0x406420f0"/>
        <function-ref name="setType" scoped="" ref="0x406421d0"/>
        <function-ref name="isForMe" scoped="" ref="0x406422b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40642390"/>
        <function-ref name="localGroup" scoped="" ref="0x40642470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40657d38" loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40657d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4063f848"/>
        <function-ref name="clear" scoped="" ref="0x4063fbf8"/>
        <function-ref name="isValid" scoped="" ref="0x4063f498"/>
        <function-ref name="set" scoped="" ref="0x4064f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40654470" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40654470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40654648"/>
        <function-ref name="stopDone" scoped="" ref="0x40654728"/>
        <function-ref name="start" scoped="" ref="0x40654808"/>
        <function-ref name="stop" scoped="" ref="0x406548e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4066c098" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4066c098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4066cc60"/>
        <function-ref name="get" scoped="" ref="0x4066c9a0"/>
        <function-ref name="isSet" scoped="" ref="0x4066c6e0"/>
        <function-ref name="set" scoped="" ref="0x4066cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406504b0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406504b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40650688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40650808" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40650808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406509e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40650ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x40650ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40650c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40650d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40654d48" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40654d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40654f20"/>
        <function-ref name="getPayload" scoped="" ref="0x40651018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406510f8"/>
        <function-ref name="cancel" scoped="" ref="0x406511d8"/>
        <function-ref name="sendDone" scoped="" ref="0x406512b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40651db8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40651db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40650010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4065fc50" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4065fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065e8b0"/>
        <function-ref name="get" scoped="" ref="0x4065e5f0"/>
        <function-ref name="isSet" scoped="" ref="0x4065e330"/>
        <function-ref name="set" scoped="" ref="0x4065eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40661200" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40661200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406613d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406614b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40661598"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40661678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40651720" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40651720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406518f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4066a010" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4066a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4066ab10"/>
        <function-ref name="clear" scoped="" ref="0x4066aec0"/>
        <function-ref name="isValid" scoped="" ref="0x4066a760"/>
        <function-ref name="set" scoped="" ref="0x406682a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4066b410" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4066b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4066ba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4065b890" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4065b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065f470"/>
        <function-ref name="get" scoped="" ref="0x4065f1b0"/>
        <function-ref name="isSet" scoped="" ref="0x4065bed8"/>
        <function-ref name="set" scoped="" ref="0x4065f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40662bc0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40662bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40662d98"/>
        <function-ref name="noAck" scoped="" ref="0x40662e78"/>
        <function-ref name="wasAcked" scoped="" ref="0x40661010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40661820" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40661820"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406619f8"/>
        <function-ref name="setRetries" scoped="" ref="0x40661ad8"/>
        <function-ref name="getRetries" scoped="" ref="0x40661bb8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40661c98"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40661d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40650ef8" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40650ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406620e0"/>
        <function-ref name="source" scoped="" ref="0x406621c0"/>
        <function-ref name="address" scoped="" ref="0x406622a0"/>
        <function-ref name="destination" scoped="" ref="0x40662380"/>
        <function-ref name="setSource" scoped="" ref="0x40662460"/>
        <function-ref name="setDestination" scoped="" ref="0x40662540"/>
        <function-ref name="type" scoped="" ref="0x40662620"/>
        <function-ref name="setType" scoped="" ref="0x40662700"/>
        <function-ref name="isForMe" scoped="" ref="0x406627e0"/>
        <function-ref name="setGroup" scoped="" ref="0x406628c0"/>
        <function-ref name="localGroup" scoped="" ref="0x406629a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4065d200" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4065d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4065d3d8"/>
        <function-ref name="setChannel" scoped="" ref="0x4065d4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x4065d598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406689d8" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406689d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406675b0"/>
        <function-ref name="clear" scoped="" ref="0x40667960"/>
        <function-ref name="isValid" scoped="" ref="0x40667200"/>
        <function-ref name="set" scoped="" ref="0x40667d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406666a8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406666a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40666880"/>
        <function-ref name="stopDone" scoped="" ref="0x40666960"/>
        <function-ref name="start" scoped="" ref="0x40666a40"/>
        <function-ref name="stop" scoped="" ref="0x40666b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40686580" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40686580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40685170"/>
        <function-ref name="get" scoped="" ref="0x40686e88"/>
        <function-ref name="isSet" scoped="" ref="0x40686bc8"/>
        <function-ref name="set" scoped="" ref="0x40685430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40672778" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40672778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40672950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4067deb0" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4067deb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406710c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406711a0"/>
        <function-ref name="request" scoped="" ref="0x40671280"/>
        <function-ref name="granted" scoped="" ref="0x40671360"/>
        <function-ref name="isOwner" scoped="" ref="0x40671440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40675778" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40675778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40675950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40676010" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40676010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406761e8"/>
        <function-ref name="getPayload" scoped="" ref="0x406762c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406763a8"/>
        <function-ref name="cancel" scoped="" ref="0x40676488"/>
        <function-ref name="sendDone" scoped="" ref="0x40676568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40675100" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40675100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406752d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4067f010" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4067f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4067f1e8"/>
        <function-ref name="address" scoped="" ref="0x4067f2c8"/>
        <function-ref name="destination" scoped="" ref="0x4067f3a8"/>
        <function-ref name="setSource" scoped="" ref="0x4067f488"/>
        <function-ref name="setDestination" scoped="" ref="0x4067f568"/>
        <function-ref name="pan" scoped="" ref="0x4067f648"/>
        <function-ref name="setPan" scoped="" ref="0x4067f728"/>
        <function-ref name="isForMe" scoped="" ref="0x4067f808"/>
        <function-ref name="localPan" scoped="" ref="0x4067f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x4067fb70" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4067fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4067fdc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4067fea8"/>
        <function-ref name="getPayload" scoped="" ref="0x4067c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4067c0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4067c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4067c978" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4067c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4067cb50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4067cc30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4067cd10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4067cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40688218" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40688218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40688de0"/>
        <function-ref name="get" scoped="" ref="0x40688b20"/>
        <function-ref name="isSet" scoped="" ref="0x40688860"/>
        <function-ref name="set" scoped="" ref="0x406860b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406769d0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40676ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x406748b0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40674a88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40674b68"/>
        <function-ref name="getPayload" scoped="" ref="0x40674c48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40674d28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40674e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40684560" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40684560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40682088"/>
        <function-ref name="clear" scoped="" ref="0x40682438"/>
        <function-ref name="isValid" scoped="" ref="0x40684cb0"/>
        <function-ref name="set" scoped="" ref="0x406827e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40685908" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40685908"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40684010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4068ae18" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4068ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40689a08"/>
        <function-ref name="get" scoped="" ref="0x40689748"/>
        <function-ref name="isSet" scoped="" ref="0x40689488"/>
        <function-ref name="set" scoped="" ref="0x40689cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4067c3f0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4067c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4067c5c8"/>
        <function-ref name="noAck" scoped="" ref="0x4067c6a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4067c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40680ab8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40680ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40680c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40680d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40680e50"/>
        <function-ref name="cancel" scoped="" ref="0x40672010"/>
        <function-ref name="sendDone" scoped="" ref="0x406720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4068a010" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4068a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4068a1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x4068a2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x4068a3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4068a488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4068a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40675ae8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40675ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40675cc0"/>
        <function-ref name="source" scoped="" ref="0x40675da0"/>
        <function-ref name="address" scoped="" ref="0x40675e80"/>
        <function-ref name="destination" scoped="" ref="0x40674010"/>
        <function-ref name="setSource" scoped="" ref="0x406740f0"/>
        <function-ref name="setDestination" scoped="" ref="0x406741d0"/>
        <function-ref name="type" scoped="" ref="0x406742b0"/>
        <function-ref name="setType" scoped="" ref="0x40674390"/>
        <function-ref name="isForMe" scoped="" ref="0x40674470"/>
        <function-ref name="setGroup" scoped="" ref="0x40674550"/>
        <function-ref name="localGroup" scoped="" ref="0x40674630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40672328" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40672328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40672500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4068a728" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4068a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4068a900"/>
        <function-ref name="setChannel" scoped="" ref="0x4068a9e0"/>
        <function-ref name="getChannel" scoped="" ref="0x4068aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40682f20" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40682f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40695a38"/>
        <function-ref name="clear" scoped="" ref="0x40695de8"/>
        <function-ref name="isValid" scoped="" ref="0x40695688"/>
        <function-ref name="set" scoped="" ref="0x406941b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40697bd8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40697bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40697db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x406a8dd0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x406a8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4068c630"/>
        <function-ref name="channelError" scoped="" ref="0x4068c0f0"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4068c1d0"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4068c2b0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4068c390"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4068c470"/>
        <function-ref name="getSender" scoped="" ref="0x4068c550"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4068c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x406b2c08" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x406b2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406b2de0"/>
        <function-ref name="checkFrame" scoped="" ref="0x406b2ec0"/>
        <function-ref name="source" scoped="" ref="0x40697010"/>
        <function-ref name="destination" scoped="" ref="0x406970f0"/>
        <function-ref name="setSource" scoped="" ref="0x406971d0"/>
        <function-ref name="setDestination" scoped="" ref="0x406972b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40697390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x406a00e0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x406a00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x406a02b8"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x406a0398"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x406a0478"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x406a0558"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x406a0638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x406b55c0" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x406b55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406b5798"/>
        <function-ref name="wait" scoped="" ref="0x406b5878"/>
        <function-ref name="cancel" scoped="" ref="0x406b5958"/>
        <function-ref name="isFree" scoped="" ref="0x406b5a38"/>
        <function-ref name="getNow" scoped="" ref="0x406b5b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x406c77e0" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x406c77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c79b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406c7a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c7b78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406c7c58"/>
        <function-ref name="headerLength" scoped="" ref="0x406c7d38"/>
        <function-ref name="metadataLength" scoped="" ref="0x406c7e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x406af1b8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x406af1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406afd38"/>
        <function-ref name="clear" scoped="" ref="0x406c6108"/>
        <function-ref name="isValid" scoped="" ref="0x406af988"/>
        <function-ref name="set" scoped="" ref="0x406c64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x4068ddc0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x4068ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40690010"/>
        <function-ref name="headerLength" scoped="" ref="0x406900f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x406901d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x406902b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40690390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4068f8e8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4068f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4068fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x4069b228" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4069b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4069b400"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4069b4e0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4069b5c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4069b6a0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4069b780"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4069b860"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4069b940"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4069ba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406b8458" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406b8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406b8630"/>
        <function-ref name="getFramePending" scoped="" ref="0x406b0950"/>
        <function-ref name="setFCF" scoped="" ref="0x406b87f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406b88d0"/>
        <function-ref name="getDSN" scoped="" ref="0x406b89b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406b8a90"/>
        <function-ref name="setDSN" scoped="" ref="0x406b8b70"/>
        <function-ref name="createAckReply" scoped="" ref="0x406b8c50"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406b8d30"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406b8e10"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406b8ef0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406b0010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406b00f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406b0250"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406b0330"/>
        <function-ref name="setFramePending" scoped="" ref="0x406b0410"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406b04f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x406b05d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406b06b0"/>
        <function-ref name="getFCF" scoped="" ref="0x406b0790"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406b8710"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406b0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40698928" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40698928"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40698b00"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40698be0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40698cc0"/>
        <function-ref name="getSender" scoped="" ref="0x40698da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x406a4548" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x406a4548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x406a4720"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x406a4800"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x406a48e0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x406a49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x406fd238" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x406fd238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406fd410"/>
        <function-ref name="wait" scoped="" ref="0x406fd4f0"/>
        <function-ref name="cancel" scoped="" ref="0x406fd5d0"/>
        <function-ref name="isFree" scoped="" ref="0x406fd6b0"/>
        <function-ref name="getNow" scoped="" ref="0x406fd790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406fdd88" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406fdd88"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fb258"/>
        <function-ref name="fired" scoped="" ref="0x406fca00"/>
        <function-ref name="startAt" scoped="" ref="0x406fcef0"/>
        <function-ref name="isRunning" scoped="" ref="0x406fcc78"/>
        <function-ref name="getAlarm" scoped="" ref="0x406fb4d0"/>
        <function-ref name="start" scoped="" ref="0x406fc4e8"/>
        <function-ref name="stop" scoped="" ref="0x406fc788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x406fbf18" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x406fbf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070c108"/>
        <function-ref name="wait" scoped="" ref="0x4070c1e8"/>
        <function-ref name="cancel" scoped="" ref="0x4070c2c8"/>
        <function-ref name="isFree" scoped="" ref="0x4070c3a8"/>
        <function-ref name="getNow" scoped="" ref="0x4070c488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4070c808" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4070c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4070bd58"/>
        <function-ref name="fired" scoped="" ref="0x4070b528"/>
        <function-ref name="startAt" scoped="" ref="0x4070ba18"/>
        <function-ref name="isRunning" scoped="" ref="0x4070b7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4070a010"/>
        <function-ref name="start" scoped="" ref="0x4070b010"/>
        <function-ref name="stop" scoped="" ref="0x4070b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40706b60" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40706b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40706d38"/>
        <function-ref name="suspend" scoped="" ref="0x40706e18"/>
        <function-ref name="resume" scoped="" ref="0x40706ef8"/>
        <function-ref name="run" scoped="" ref="0x40709010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40713010" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40713010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x407131e8"/>
        <function-ref name="suspend" scoped="" ref="0x407132c8"/>
        <function-ref name="resume" scoped="" ref="0x407133a8"/>
        <function-ref name="run" scoped="" ref="0x40713488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4071a980" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4071a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4071ab58"/>
        <function-ref name="cancel" scoped="" ref="0x4071ac38"/>
        <function-ref name="sendDone" scoped="" ref="0x4071ad18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4071d900" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4071d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4071dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4071f2a8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4071f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4071f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40721190" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40721190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40721368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40721448"/>
        <function-ref name="getPayload" scoped="" ref="0x40721528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40721608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407216e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40721b48" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40721b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40721d20"/>
        <function-ref name="getPayload" scoped="" ref="0x40721e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40721ee0"/>
        <function-ref name="cancel" scoped="" ref="0x40720010"/>
        <function-ref name="sendDone" scoped="" ref="0x407200f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40720bf0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40720bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40720dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4071f700" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4071f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4071f8d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4071f9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4071fa98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4071fb78"/>
        <function-ref name="headerLength" scoped="" ref="0x4071fc58"/>
        <function-ref name="metadataLength" scoped="" ref="0x4071fd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4071dd38" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4071dd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4071df10"/>
        <function-ref name="checkFrame" scoped="" ref="0x4071c010"/>
        <function-ref name="source" scoped="" ref="0x4071c0f0"/>
        <function-ref name="destination" scoped="" ref="0x4071c1d0"/>
        <function-ref name="setSource" scoped="" ref="0x4071c2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4071c390"/>
        <function-ref name="setGroup" scoped="" ref="0x4071c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40720558" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40720558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40720730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406fe500" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406fe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406fe6d8"/>
        <function-ref name="source" scoped="" ref="0x406fe7b8"/>
        <function-ref name="address" scoped="" ref="0x406fe898"/>
        <function-ref name="destination" scoped="" ref="0x406fe978"/>
        <function-ref name="setSource" scoped="" ref="0x406fea58"/>
        <function-ref name="setDestination" scoped="" ref="0x406feb38"/>
        <function-ref name="type" scoped="" ref="0x406fec18"/>
        <function-ref name="setType" scoped="" ref="0x406fecf8"/>
        <function-ref name="isForMe" scoped="" ref="0x406fedd8"/>
        <function-ref name="setGroup" scoped="" ref="0x406feeb8"/>
        <function-ref name="localGroup" scoped="" ref="0x40721010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4072ae40" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4072ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40729050"/>
        <function-ref name="cancel" scoped="" ref="0x40729130"/>
        <function-ref name="sendDone" scoped="" ref="0x40729210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40729448" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40729448"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40729620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4072a1b0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4072a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4072a388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4072c0a0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4072c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072c278"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072c358"/>
        <function-ref name="getPayload" scoped="" ref="0x4072c438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072c518"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4071cba8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4071cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4071cd80"/>
        <function-ref name="payloadLength" scoped="" ref="0x4071ce60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072d010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072d0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x4072d1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4072d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4072ca58" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4072ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072cc30"/>
        <function-ref name="getPayload" scoped="" ref="0x4072cd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072cdf0"/>
        <function-ref name="cancel" scoped="" ref="0x4072ced0"/>
        <function-ref name="sendDone" scoped="" ref="0x4072b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4072bb10" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4072bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4072bce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4072a608" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4072a608"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072a7e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072a8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072a9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072aa80"/>
        <function-ref name="headerLength" scoped="" ref="0x4072ab60"/>
        <function-ref name="metadataLength" scoped="" ref="0x4072ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4072b478" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4072b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4072b650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40729880" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40729880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40729a58"/>
        <function-ref name="checkFrame" scoped="" ref="0x40729b38"/>
        <function-ref name="source" scoped="" ref="0x40729c18"/>
        <function-ref name="destination" scoped="" ref="0x40729cf8"/>
        <function-ref name="setSource" scoped="" ref="0x40729dd8"/>
        <function-ref name="setDestination" scoped="" ref="0x40729eb8"/>
        <function-ref name="setGroup" scoped="" ref="0x40728010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40724ae8" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40724ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40724cc0"/>
        <function-ref name="changed" scoped="" ref="0x40724da0"/>
        <function-ref name="amGroup" scoped="" ref="0x40724e80"/>
        <function-ref name="setAddress" scoped="" ref="0x40727010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4072d448" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4072d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4072d620"/>
        <function-ref name="source" scoped="" ref="0x4072d700"/>
        <function-ref name="address" scoped="" ref="0x4072d7e0"/>
        <function-ref name="destination" scoped="" ref="0x4072d8c0"/>
        <function-ref name="setSource" scoped="" ref="0x4072d9a0"/>
        <function-ref name="setDestination" scoped="" ref="0x4072da80"/>
        <function-ref name="type" scoped="" ref="0x4072db60"/>
        <function-ref name="setType" scoped="" ref="0x4072dc40"/>
        <function-ref name="isForMe" scoped="" ref="0x4072dd20"/>
        <function-ref name="setGroup" scoped="" ref="0x4072de00"/>
        <function-ref name="localGroup" scoped="" ref="0x4072dee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40718b98" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40718b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40718d70"/>
        <function-ref name="changed" scoped="" ref="0x40718e50"/>
        <function-ref name="amGroup" scoped="" ref="0x40769010"/>
        <function-ref name="setAddress" scoped="" ref="0x407690f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40775e70" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40775e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40774070"/>
        <function-ref name="cancel" scoped="" ref="0x40774150"/>
        <function-ref name="sendDone" scoped="" ref="0x40774230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40774370" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40774370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40774548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40774628"/>
        <function-ref name="request" scoped="" ref="0x40774708"/>
        <function-ref name="granted" scoped="" ref="0x407747e8"/>
        <function-ref name="isOwner" scoped="" ref="0x407748c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40775948" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40775948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40775b20"/>
        <function-ref name="cancel" scoped="" ref="0x40775c00"/>
        <function-ref name="sendDone" scoped="" ref="0x40775ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407808b0" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407808b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40780a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40780b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407aa208" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407aa208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407aa3f0"/>
        <function-ref name="configure" scoped="" ref="0x407aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40780170" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40780170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40780358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40780438"/>
        <function-ref name="request" scoped="" ref="0x40780518"/>
        <function-ref name="granted" scoped="" ref="0x407805f8"/>
        <function-ref name="isOwner" scoped="" ref="0x407806d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40780cb8" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40780cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40780e90"/>
        <function-ref name="userId" scoped="" ref="0x407aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41271f00" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41271f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4126f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4126f250" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4126f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4126f428"/>
        <function-ref name="isEmpty" scoped="" ref="0x4126f508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4126f5e8"/>
        <function-ref name="dequeue" scoped="" ref="0x4126f6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4126e998" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4126e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4126eb80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4126ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4126c2f8" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4126c2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4126c4e0"/>
        <function-ref name="configure" scoped="" ref="0x4126c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4126c720" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4126c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4126c8f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4126c9d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4126cab8"/>
        <function-ref name="dequeue" scoped="" ref="0x4126cb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4126e258" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4126e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4126e440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4126e520"/>
        <function-ref name="request" scoped="" ref="0x4126e600"/>
        <function-ref name="granted" scoped="" ref="0x4126e6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4126e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4126eda0" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4126eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4126c010"/>
        <function-ref name="userId" scoped="" ref="0x4126c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4126cd18" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4126cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4126cef0"/>
        <function-ref name="runTask" scoped="" ref="0x4126b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407bd3d0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407bd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407bd5a8"/>
        <function-ref name="cancel" scoped="" ref="0x407bd688"/>
        <function-ref name="sendDone" scoped="" ref="0x407bd768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407bd9a0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407bd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407bdb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407a64f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407a64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407a66c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407a9280" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407a9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407a9458"/>
        <function-ref name="payloadLength" scoped="" ref="0x407a9538"/>
        <function-ref name="getPayload" scoped="" ref="0x407a9618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a96f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407a97d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0x407be0e8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407be0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407be2c0"/>
        <function-ref name="address" scoped="" ref="0x407be3a0"/>
        <function-ref name="destination" scoped="" ref="0x407be480"/>
        <function-ref name="setSource" scoped="" ref="0x407be560"/>
        <function-ref name="setDestination" scoped="" ref="0x407be640"/>
        <function-ref name="pan" scoped="" ref="0x407be720"/>
        <function-ref name="setPan" scoped="" ref="0x407be800"/>
        <function-ref name="isForMe" scoped="" ref="0x407be8e0"/>
        <function-ref name="localPan" scoped="" ref="0x407be9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407beb70" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407beb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407bed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x407bee28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407bef08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407bd010"/>
        <function-ref name="headerLength" scoped="" ref="0x407bd0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x407a6910" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407a6ae8"/>
        <function-ref name="getFramePending" scoped="" ref="0x407bfe90"/>
        <function-ref name="setFCF" scoped="" ref="0x407a6ca8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407a6d88"/>
        <function-ref name="getDSN" scoped="" ref="0x407a6e68"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407bf010"/>
        <function-ref name="setDSN" scoped="" ref="0x407bf0f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x407bf1d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407bf2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407bf390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407bf470"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407bf550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407bf630"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407bf790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407bf870"/>
        <function-ref name="setFramePending" scoped="" ref="0x407bf950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407bfa30"/>
        <function-ref name="setDestPan" scoped="" ref="0x407bfb10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407bfbf0"/>
        <function-ref name="getFCF" scoped="" ref="0x407bfcd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407a6bc8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407bfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x407a9988" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x407a9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a9b60"/>
        <function-ref name="getPayload" scoped="" ref="0x407a9c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a9d20"/>
        <function-ref name="cancel" scoped="" ref="0x407a9e00"/>
        <function-ref name="sendDone" scoped="" ref="0x407a9ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x407a6158" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x407a6158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407d6db8" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407d6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d5010"/>
        <function-ref name="cancel" scoped="" ref="0x407d50f0"/>
        <function-ref name="sendDone" scoped="" ref="0x407d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407d5408" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407d5408"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407d72a8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407d72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d7480"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d7560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d7640"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d7720"/>
        <function-ref name="headerLength" scoped="" ref="0x407d7800"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d78e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x407d6108" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x407d6108"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d62e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407d5810" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407d5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d59e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d5ac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d5ba8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d5c88"/>
        <function-ref name="headerLength" scoped="" ref="0x407d5d68"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d5e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x407d7b00" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x407d7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d7cd8"/>
        <function-ref name="cancel" scoped="" ref="0x407d7db8"/>
        <function-ref name="sendDone" scoped="" ref="0x407d7e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x407c0858" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x407c0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c0a30"/>
        <function-ref name="cancel" scoped="" ref="0x407c0b10"/>
        <function-ref name="sendDone" scoped="" ref="0x407c0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x407c0e50" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x407c0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d7050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x407d6530" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x407d6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d6708"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d67e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d68c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d69a8"/>
        <function-ref name="headerLength" scoped="" ref="0x407d6a88"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d6b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407ed958" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407ed958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407edb30"/>
        <function-ref name="address" scoped="" ref="0x407edc10"/>
        <function-ref name="destination" scoped="" ref="0x407edcf0"/>
        <function-ref name="setSource" scoped="" ref="0x407eddd0"/>
        <function-ref name="setDestination" scoped="" ref="0x407edeb0"/>
        <function-ref name="pan" scoped="" ref="0x407ec010"/>
        <function-ref name="setPan" scoped="" ref="0x407ec0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x407ec1d0"/>
        <function-ref name="localPan" scoped="" ref="0x407ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407ec460" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407ec460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ec638"/>
        <function-ref name="payloadLength" scoped="" ref="0x407ec718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ec7f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407ec8d8"/>
        <function-ref name="headerLength" scoped="" ref="0x407ec9b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407eca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x407ee258" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407ee258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407ee430"/>
        <function-ref name="getFramePending" scoped="" ref="0x407ed790"/>
        <function-ref name="setFCF" scoped="" ref="0x407ee5f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407ee6d0"/>
        <function-ref name="getDSN" scoped="" ref="0x407ee7b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407ee890"/>
        <function-ref name="setDSN" scoped="" ref="0x407ee970"/>
        <function-ref name="createAckReply" scoped="" ref="0x407eea50"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407eeb30"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407eec10"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407eecf0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407eedd0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407eeeb0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407ed090"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407ed170"/>
        <function-ref name="setFramePending" scoped="" ref="0x407ed250"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407ed330"/>
        <function-ref name="setDestPan" scoped="" ref="0x407ed410"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407ed4f0"/>
        <function-ref name="getFCF" scoped="" ref="0x407ed5d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407ee510"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407ed6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407ecd18" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407ecd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ecef0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407eb010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407eb0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407eb1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407eb2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407eb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408002b8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408002b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40800490"/>
        <function-ref name="address" scoped="" ref="0x40800570"/>
        <function-ref name="destination" scoped="" ref="0x40800650"/>
        <function-ref name="setSource" scoped="" ref="0x40800730"/>
        <function-ref name="setDestination" scoped="" ref="0x40800810"/>
        <function-ref name="pan" scoped="" ref="0x408008f0"/>
        <function-ref name="setPan" scoped="" ref="0x408009d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40800ab0"/>
        <function-ref name="localPan" scoped="" ref="0x40800b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40800d40" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40800d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40800f18"/>
        <function-ref name="payloadLength" scoped="" ref="0x407ff010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ff0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407ff1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407ff2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407ff390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x407ebb10" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407ebb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407ebce8"/>
        <function-ref name="getFramePending" scoped="" ref="0x408000f0"/>
        <function-ref name="setFCF" scoped="" ref="0x407ebea8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407e7010"/>
        <function-ref name="getDSN" scoped="" ref="0x407e70f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407e71d0"/>
        <function-ref name="setDSN" scoped="" ref="0x407e72b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x407e7390"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407e7470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407e7550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407e7630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407e7710"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407e77f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407e7950"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407e7a30"/>
        <function-ref name="setFramePending" scoped="" ref="0x407e7b10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407e7bf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x407e7cd0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407e7db0"/>
        <function-ref name="getFCF" scoped="" ref="0x407e7e90"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407ebdc8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40800010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x407ff5f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407ff5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407ff7c8"/>
        <function-ref name="changed" scoped="" ref="0x407ff8a8"/>
        <function-ref name="amGroup" scoped="" ref="0x407ff988"/>
        <function-ref name="setAddress" scoped="" ref="0x407ffa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407ffc98" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407ffc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ffe70"/>
        <function-ref name="payloadLength" scoped="" ref="0x407fe010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407fe0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407fe1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407fe2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407fe390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40843010" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40843010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408431e8"/>
        <function-ref name="cancel" scoped="" ref="0x408432c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408433a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408435f0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408435f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408437c8"/>
        <function-ref name="header" scoped="" ref="0x408438a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4082a3b0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4082a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082a588"/>
        <function-ref name="cancel" scoped="" ref="0x4082a668"/>
        <function-ref name="sendDone" scoped="" ref="0x4082a748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40843ac8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40843ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40843ca0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40843d80"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40843e60"/>
        <function-ref name="getSender" scoped="" ref="0x40842010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40841a90" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40841a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40841c68"/>
        <function-ref name="header" scoped="" ref="0x40841d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4083e4d0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4083e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4083e6a8"/>
        <function-ref name="cancel" scoped="" ref="0x4083e788"/>
        <function-ref name="sendDone" scoped="" ref="0x4083e868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4083eab0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4083eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083ec88"/>
        <function-ref name="header" scoped="" ref="0x4083ed68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40836bd0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40836bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40836da8"/>
        <function-ref name="clearAll" scoped="" ref="0x40836e88"/>
        <function-ref name="get" scoped="" ref="0x4083b010"/>
        <function-ref name="set" scoped="" ref="0x4083b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40842710" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40842710"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408428e8"/>
        <function-ref name="cancel" scoped="" ref="0x408429c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40842aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40839b20" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40839b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40839cf8"/>
        <function-ref name="insertNode" scoped="" ref="0x40839dd8"/>
        <function-ref name="getNode" scoped="" ref="0x40839eb8"/>
        <function-ref name="evicted" scoped="" ref="0x4083c010"/>
        <function-ref name="getIndex" scoped="" ref="0x4083c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40842c68" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40842c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40842e40"/>
        <function-ref name="header" scoped="" ref="0x40842f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4083e0a8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4083e0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4083e280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4083ef28" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4083ef28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4083d110"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4083d1f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4083d2d0"/>
        <function-ref name="getSender" scoped="" ref="0x4083d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40840430" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40840430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40840608"/>
        <function-ref name="insertNode" scoped="" ref="0x408406e8"/>
        <function-ref name="getNode" scoped="" ref="0x408407c8"/>
        <function-ref name="evicted" scoped="" ref="0x408408a8"/>
        <function-ref name="getIndex" scoped="" ref="0x40840988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40844dd0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40844dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085f010"/>
        <function-ref name="clearAll" scoped="" ref="0x4085f0f0"/>
        <function-ref name="get" scoped="" ref="0x4085f1d0"/>
        <function-ref name="set" scoped="" ref="0x4085f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408443a8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408443a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40844580"/>
        <function-ref name="insertNode" scoped="" ref="0x40844660"/>
        <function-ref name="getNode" scoped="" ref="0x40844740"/>
        <function-ref name="evicted" scoped="" ref="0x40844820"/>
        <function-ref name="getIndex" scoped="" ref="0x40844900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40844010" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40844010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408441e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40847010" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40847010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408471e8"/>
        <function-ref name="clearAll" scoped="" ref="0x408472c8"/>
        <function-ref name="get" scoped="" ref="0x408473a8"/>
        <function-ref name="set" scoped="" ref="0x40847488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40828a98" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40828a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40828c70"/>
        <function-ref name="stopDone" scoped="" ref="0x40828d50"/>
        <function-ref name="start" scoped="" ref="0x40828e30"/>
        <function-ref name="stop" scoped="" ref="0x40828f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4087b0a8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4087b0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4087b280"/>
        <function-ref name="cancel" scoped="" ref="0x4087b360"/>
        <function-ref name="sendDone" scoped="" ref="0x4087b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4087b678" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4087b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40861118" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40861118"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408612f0"/>
        <function-ref name="cancel" scoped="" ref="0x408613d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408614b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40861a50" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40861a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40861c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40861d08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40861de8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40861ec8"/>
        <function-ref name="headerLength" scoped="" ref="0x40860010"/>
        <function-ref name="metadataLength" scoped="" ref="0x408600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408602e0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408602e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408604b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40860598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40860678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40860758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408609f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408609f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40860bc8"/>
        <function-ref name="stopDone" scoped="" ref="0x40860ca8"/>
        <function-ref name="start" scoped="" ref="0x40860d88"/>
        <function-ref name="stop" scoped="" ref="0x40860e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408616c8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408616c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408618a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4087ba80" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4087ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4087bc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x4087bd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087be18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4087bef8"/>
        <function-ref name="headerLength" scoped="" ref="0x4087a010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4087a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40877010" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40877010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408771e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408772c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408773a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40877488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408718b8" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408718b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40871a90"/>
        <function-ref name="cancel" scoped="" ref="0x40871b70"/>
        <function-ref name="sendDone" scoped="" ref="0x40871c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408793c8" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408793c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408795a0"/>
        <function-ref name="cancel" scoped="" ref="0x40879680"/>
        <function-ref name="sendDone" scoped="" ref="0x40879760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40871040" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40871040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40871218"/>
        <function-ref name="payloadLength" scoped="" ref="0x408712f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408713d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408714b8"/>
        <function-ref name="headerLength" scoped="" ref="0x40871598"/>
        <function-ref name="metadataLength" scoped="" ref="0x40871678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40871e80" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40871e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40870070"/>
        <function-ref name="payloadLength" scoped="" ref="0x40870150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40870230"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40870310"/>
        <function-ref name="headerLength" scoped="" ref="0x408703f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408704d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x408706f0" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408706f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408708c8"/>
        <function-ref name="noAck" scoped="" ref="0x408709a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40870a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40879908" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40879908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40879ae0"/>
        <function-ref name="setRetries" scoped="" ref="0x40879bc0"/>
        <function-ref name="getRetries" scoped="" ref="0x40879ca0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40879d80"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40879e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40888760" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40888760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40888938"/>
        <function-ref name="cancel" scoped="" ref="0x40888a18"/>
        <function-ref name="sendDone" scoped="" ref="0x40888af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x408838c8" loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x408838c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40883aa0"/>
        <function-ref name="runTask" scoped="" ref="0x40883b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x408873c0" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x408873c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40886ec8"/>
        <function-ref name="fired" scoped="" ref="0x40886180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40886888"/>
        <function-ref name="isOneShot" scoped="" ref="0x40886630"/>
        <function-ref name="getdt" scoped="" ref="0x408843a8"/>
        <function-ref name="gett0" scoped="" ref="0x40884150"/>
        <function-ref name="isRunning" scoped="" ref="0x408863d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408879e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40886ba8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40887c68"/>
        <function-ref name="stop" scoped="" ref="0x40887ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40889280" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40889280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40889458"/>
        <function-ref name="cancel" scoped="" ref="0x40889538"/>
        <function-ref name="sendDone" scoped="" ref="0x40889618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40889ec8" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40889ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408880c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408881a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40888280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40888360"/>
        <function-ref name="headerLength" scoped="" ref="0x40888440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40888520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408846a8" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408846a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40884880"/>
        <function-ref name="payloadLength" scoped="" ref="0x40884960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40884a40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40884b20"/>
        <function-ref name="headerLength" scoped="" ref="0x40884c00"/>
        <function-ref name="metadataLength" scoped="" ref="0x40884ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40888d18" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40888d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40888ef0"/>
        <function-ref name="noAck" scoped="" ref="0x40887010"/>
        <function-ref name="wasAcked" scoped="" ref="0x408870f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408897c0" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408897c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40889998"/>
        <function-ref name="setRetries" scoped="" ref="0x40889a78"/>
        <function-ref name="getRetries" scoped="" ref="0x40889b58"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40889c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40889d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4086e010" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4086e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4089cb00"/>
        <function-ref name="fired" scoped="" ref="0x4086ed90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4089c4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4089c268"/>
        <function-ref name="getdt" scoped="" ref="0x4089b010"/>
        <function-ref name="gett0" scoped="" ref="0x4089cd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4089c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4086e638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4089c7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4086e8b8"/>
        <function-ref name="stop" scoped="" ref="0x4086eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40899348" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40899348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40899520"/>
        <function-ref name="stopDone" scoped="" ref="0x40899600"/>
        <function-ref name="start" scoped="" ref="0x408996e0"/>
        <function-ref name="stop" scoped="" ref="0x408997c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408aeb88" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408aeb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408aed60"/>
        <function-ref name="turnOn" scoped="" ref="0x408aee40"/>
        <function-ref name="setChannel" scoped="" ref="0x408aef20"/>
        <function-ref name="done" scoped="" ref="0x408b2018"/>
        <function-ref name="standby" scoped="" ref="0x408b20f8"/>
        <function-ref name="getChannel" scoped="" ref="0x408b21d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408999a8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408999a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40899b80"/>
        <function-ref name="cancel" scoped="" ref="0x40899c60"/>
        <function-ref name="sendDone" scoped="" ref="0x40899d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408acee8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408acee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b10e0"/>
        <function-ref name="header" scoped="" ref="0x408b11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b3010" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408ac990" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408ac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408acb68"/>
        <function-ref name="ready" scoped="" ref="0x408acc48"/>
        <function-ref name="sendDone" scoped="" ref="0x408acd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408b33a8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408b33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x408b3580"/>
        <function-ref name="setChannel" scoped="" ref="0x408b3660"/>
        <function-ref name="getChannel" scoped="" ref="0x408b3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408b1918" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408b1918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408b1af0"/>
        <function-ref name="stopDone" scoped="" ref="0x408b1bd0"/>
        <function-ref name="start" scoped="" ref="0x408b1cb0"/>
        <function-ref name="stop" scoped="" ref="0x408b1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x408aa010" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x408aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408aa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408a92e8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408a92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408a94c0"/>
        <function-ref name="turnOn" scoped="" ref="0x408a95a0"/>
        <function-ref name="setChannel" scoped="" ref="0x408a9680"/>
        <function-ref name="done" scoped="" ref="0x408a9760"/>
        <function-ref name="standby" scoped="" ref="0x408a9840"/>
        <function-ref name="getChannel" scoped="" ref="0x408a9920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408aa3d0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408aa3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408aa5a8"/>
        <function-ref name="cancel" scoped="" ref="0x408aa688"/>
        <function-ref name="sendDone" scoped="" ref="0x408aa768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x408bdb98" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x408bdb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408bdd70"/>
        <function-ref name="runTask" scoped="" ref="0x408bde50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408a8630" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408a8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a8808"/>
        <function-ref name="header" scoped="" ref="0x408a88e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x408b7e28" loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x408b7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408b5050"/>
        <function-ref name="runTask" scoped="" ref="0x408b5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408aa980" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408aa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408aab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x408c52c8" loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x408c52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408c54a0"/>
        <function-ref name="runTask" scoped="" ref="0x408c5580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408a80d8" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408a80d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a82b0"/>
        <function-ref name="ready" scoped="" ref="0x408a8390"/>
        <function-ref name="sendDone" scoped="" ref="0x408a8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408aad18" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408aad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x408aaef0"/>
        <function-ref name="setChannel" scoped="" ref="0x408a9010"/>
        <function-ref name="getChannel" scoped="" ref="0x408a90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408a9aa8" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408a9aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408a9c80"/>
        <function-ref name="suspend" scoped="" ref="0x408a9d60"/>
        <function-ref name="resume" scoped="" ref="0x408a9e40"/>
        <function-ref name="run" scoped="" ref="0x408a9f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408d8030" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408d8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408d8208"/>
        <function-ref name="stopDone" scoped="" ref="0x408d82e8"/>
        <function-ref name="start" scoped="" ref="0x408d83c8"/>
        <function-ref name="stop" scoped="" ref="0x408d84a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408eae80" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408eae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408e9070"/>
        <function-ref name="request" scoped="" ref="0x408e9150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408e8410" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408e8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e85e8"/>
        <function-ref name="cancel" scoped="" ref="0x408e86c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408e87a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408e8908" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408e8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x408e74f0" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x408e74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e76c8"/>
        <function-ref name="ready" scoped="" ref="0x408e77a8"/>
        <function-ref name="sendDone" scoped="" ref="0x408e7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408d8e18" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408d8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408ea010"/>
        <function-ref name="turnOn" scoped="" ref="0x408ea0f0"/>
        <function-ref name="setChannel" scoped="" ref="0x408ea1d0"/>
        <function-ref name="done" scoped="" ref="0x408ea2b0"/>
        <function-ref name="standby" scoped="" ref="0x408ea390"/>
        <function-ref name="getChannel" scoped="" ref="0x408ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408d8608" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408d8608"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d87e0"/>
        <function-ref name="cancel" scoped="" ref="0x408d88c0"/>
        <function-ref name="sendDone" scoped="" ref="0x408d89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408e9290" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408e9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e9468"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e9548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e9628"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e9708"/>
        <function-ref name="headerLength" scoped="" ref="0x408e97e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408e98c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408e9a28" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408e9a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408e9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408eaa88" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408eaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408eac60"/>
        <function-ref name="header" scoped="" ref="0x408ead40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408e8c40" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408e8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408e8e98"/>
        <function-ref name="turnOn" scoped="" ref="0x408e7010"/>
        <function-ref name="setChannel" scoped="" ref="0x408e70f0"/>
        <function-ref name="done" scoped="" ref="0x408e71d0"/>
        <function-ref name="standby" scoped="" ref="0x408e72b0"/>
        <function-ref name="getChannel" scoped="" ref="0x408e7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408e9d90" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408e9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e8010"/>
        <function-ref name="stopDone" scoped="" ref="0x408e80f0"/>
        <function-ref name="start" scoped="" ref="0x408e81d0"/>
        <function-ref name="stop" scoped="" ref="0x408e82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408e6250" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408e6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e6428"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e6508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e65e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e66c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408e67a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408e6888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408d8b00" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408d8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408d8cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408e69e8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408e69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408e6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x408e79e8" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x408e79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e7bc0"/>
        <function-ref name="header" scoped="" ref="0x408e7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408ea5b0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408ea5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ea788"/>
        <function-ref name="ready" scoped="" ref="0x408ea868"/>
        <function-ref name="sendDone" scoped="" ref="0x408ea948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408e7e00" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408e7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408e6010"/>
        <function-ref name="request" scoped="" ref="0x408e60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408fd010" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fd1e8"/>
        <function-ref name="ready" scoped="" ref="0x408fd2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408fd3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408fd5f0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408fd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fd7c8"/>
        <function-ref name="header" scoped="" ref="0x408fd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408fdb20" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408fdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408fdcf8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408fddd8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408fdeb8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408e3a28" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408e3a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e3c00"/>
        <function-ref name="header" scoped="" ref="0x408e3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408e34d0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408e34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e36a8"/>
        <function-ref name="ready" scoped="" ref="0x408e3788"/>
        <function-ref name="sendDone" scoped="" ref="0x408e3868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408f9268" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408f9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f9440"/>
        <function-ref name="ready" scoped="" ref="0x408f9520"/>
        <function-ref name="sendDone" scoped="" ref="0x408f9600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408f9848" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408f9848"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f9a20"/>
        <function-ref name="header" scoped="" ref="0x408f9b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408f9ca8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408f9ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408f9e80"/>
        <function-ref name="wait" scoped="" ref="0x408f8010"/>
        <function-ref name="cancel" scoped="" ref="0x408f80f0"/>
        <function-ref name="isFree" scoped="" ref="0x408f81d0"/>
        <function-ref name="getNow" scoped="" ref="0x408f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x408f5100" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408f5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408f52d8"/>
        <function-ref name="rand32" scoped="" ref="0x408f53b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408f5630" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408f5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408f5808"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408f58e8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408f59c8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408f5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408fccd8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408fccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fceb0"/>
        <function-ref name="header" scoped="" ref="0x408f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408fc780" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408fc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fc958"/>
        <function-ref name="ready" scoped="" ref="0x408fca38"/>
        <function-ref name="sendDone" scoped="" ref="0x408fcb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x408f4690" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x408f4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408f4868"/>
        <function-ref name="runTask" scoped="" ref="0x408f4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4091d2a8" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4091d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4091d480"/>
        <function-ref name="rand32" scoped="" ref="0x4091d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4091b938" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4091b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4091d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408fa6f8" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408fa6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408fa8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40919cf8" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40919cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40919ed0"/>
        <function-ref name="rand32" scoped="" ref="0x40918010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40919438" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40919438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40919a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4091df00" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4091df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40910e58" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40910e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090f050"/>
        <function-ref name="ready" scoped="" ref="0x4090f130"/>
        <function-ref name="sendDone" scoped="" ref="0x4090f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4090f458" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4090f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090f630"/>
        <function-ref name="header" scoped="" ref="0x4090f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4090f960" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4090f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4090fb38"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4090fc18"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4090fcf8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4090fdd8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4090feb8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4092b010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4092b0f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4092b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40910390" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40910390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40910568"/>
        <function-ref name="header" scoped="" ref="0x40910648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408ffdf0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408ffdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40910010"/>
        <function-ref name="ready" scoped="" ref="0x409100f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40910868" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40910868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40910a40"/>
        <function-ref name="noAck" scoped="" ref="0x40910b20"/>
        <function-ref name="wasAcked" scoped="" ref="0x40910c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40928940" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40928940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40928b18"/>
        <function-ref name="ready" scoped="" ref="0x40928bf8"/>
        <function-ref name="sendDone" scoped="" ref="0x40928cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40928f20" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40928f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40927110"/>
        <function-ref name="header" scoped="" ref="0x409271f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40927398" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40927398"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40927570"/>
        <function-ref name="wait" scoped="" ref="0x40927650"/>
        <function-ref name="cancel" scoped="" ref="0x40927730"/>
        <function-ref name="isFree" scoped="" ref="0x40927810"/>
        <function-ref name="getNow" scoped="" ref="0x409278f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40922190" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40922190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40922368"/>
        <function-ref name="get" scoped="" ref="0x40922448"/>
        <function-ref name="setValue" scoped="" ref="0x40922528"/>
        <function-ref name="set" scoped="" ref="0x40922608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4092be40" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4092be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40928050"/>
        <function-ref name="header" scoped="" ref="0x40928130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x40927ae0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40927ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40927cb8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40927d98"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40927e78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40926010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409260f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409261d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409262b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40926390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4092b8e8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4092b8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092bac0"/>
        <function-ref name="ready" scoped="" ref="0x4092bba0"/>
        <function-ref name="sendDone" scoped="" ref="0x4092bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40928350" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40928350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40928528"/>
        <function-ref name="noAck" scoped="" ref="0x40928608"/>
        <function-ref name="wasAcked" scoped="" ref="0x409286e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4092ee70" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4092ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40929070"/>
        <function-ref name="get" scoped="" ref="0x40929150"/>
        <function-ref name="setValue" scoped="" ref="0x40929230"/>
        <function-ref name="set" scoped="" ref="0x40929310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4094c638" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4094c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094c810"/>
        <function-ref name="payloadLength" scoped="" ref="0x4094c8f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4094c9d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4094cab0"/>
        <function-ref name="headerLength" scoped="" ref="0x4094cb90"/>
        <function-ref name="metadataLength" scoped="" ref="0x4094cc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4094cef0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4094cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094b0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4094b1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4094b2a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4094b380"/>
        <function-ref name="headerLength" scoped="" ref="0x4094b460"/>
        <function-ref name="metadataLength" scoped="" ref="0x4094b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4094c010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4094c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094c1e8"/>
        <function-ref name="get" scoped="" ref="0x4094c2c8"/>
        <function-ref name="setValue" scoped="" ref="0x4094c3a8"/>
        <function-ref name="set" scoped="" ref="0x4094c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4092db48" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4092db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4092dd20"/>
        <function-ref name="stopDone" scoped="" ref="0x4092de00"/>
        <function-ref name="start" scoped="" ref="0x4092dee0"/>
        <function-ref name="stop" scoped="" ref="0x4095a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40959a20" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40959a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40959bf8"/>
        <function-ref name="request" scoped="" ref="0x40959cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40957f10" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40957f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40956108"/>
        <function-ref name="cancel" scoped="" ref="0x409561e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409562c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40956428" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40956428"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40956600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40955010" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40955010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409551e8"/>
        <function-ref name="ready" scoped="" ref="0x409552c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409553a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4095a980" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4095a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4095ab58"/>
        <function-ref name="turnOn" scoped="" ref="0x4095ac38"/>
        <function-ref name="setChannel" scoped="" ref="0x4095ad18"/>
        <function-ref name="done" scoped="" ref="0x4095adf8"/>
        <function-ref name="standby" scoped="" ref="0x4095aed8"/>
        <function-ref name="getChannel" scoped="" ref="0x40959010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4095a170" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4095a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095a348"/>
        <function-ref name="cancel" scoped="" ref="0x4095a428"/>
        <function-ref name="sendDone" scoped="" ref="0x4095a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40959e18" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40959e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40957010"/>
        <function-ref name="payloadLength" scoped="" ref="0x409570f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409571d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409572b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40957390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40957470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409575d0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409575d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409577a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40959628" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40959628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40959800"/>
        <function-ref name="header" scoped="" ref="0x409598e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40956760" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40956760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409569b8"/>
        <function-ref name="turnOn" scoped="" ref="0x40956a98"/>
        <function-ref name="setChannel" scoped="" ref="0x40956b78"/>
        <function-ref name="done" scoped="" ref="0x40956c58"/>
        <function-ref name="standby" scoped="" ref="0x40956d38"/>
        <function-ref name="getChannel" scoped="" ref="0x40956e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40957938" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40957938"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40957b10"/>
        <function-ref name="stopDone" scoped="" ref="0x40957bf0"/>
        <function-ref name="start" scoped="" ref="0x40957cd0"/>
        <function-ref name="stop" scoped="" ref="0x40957db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40955d38" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40955d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40955f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40954010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409540f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409541d0"/>
        <function-ref name="headerLength" scoped="" ref="0x409542b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40954390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4095a668" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4095a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095a840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409544f0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409544f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409546c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40955508" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40955508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409556e0"/>
        <function-ref name="header" scoped="" ref="0x409557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40959150" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40959150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40959328"/>
        <function-ref name="ready" scoped="" ref="0x40959408"/>
        <function-ref name="sendDone" scoped="" ref="0x409594e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40955920" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40955920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40955af8"/>
        <function-ref name="request" scoped="" ref="0x40955bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4096ccd0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4096ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096cea8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4096b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4096b1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x4096b2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4096b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4096a090" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4096a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096a268"/>
        <function-ref name="payloadLength" scoped="" ref="0x4096a348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096a428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4096a508"/>
        <function-ref name="headerLength" scoped="" ref="0x4096a5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4096a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4094d5e0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4094d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4096c108"/>
        <function-ref name="clear" scoped="" ref="0x4096c4b8"/>
        <function-ref name="isValid" scoped="" ref="0x4094dd30"/>
        <function-ref name="set" scoped="" ref="0x4096c868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x4096b700" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4096b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4096bd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40952c08" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40952c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4094f730"/>
        <function-ref name="clear" scoped="" ref="0x4094fae0"/>
        <function-ref name="isValid" scoped="" ref="0x4094f380"/>
        <function-ref name="set" scoped="" ref="0x4094fe90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40962b80" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40962b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40962d58"/>
        <function-ref name="get" scoped="" ref="0x40962e38"/>
        <function-ref name="setValue" scoped="" ref="0x40962f18"/>
        <function-ref name="set" scoped="" ref="0x40961010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409622a8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409622a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40962480"/>
        <function-ref name="payloadLength" scoped="" ref="0x40962560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40962640"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40962720"/>
        <function-ref name="headerLength" scoped="" ref="0x40962800"/>
        <function-ref name="metadataLength" scoped="" ref="0x409628e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409606e0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409606e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409608b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40960998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40960a78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40960b58"/>
        <function-ref name="headerLength" scoped="" ref="0x40960c38"/>
        <function-ref name="metadataLength" scoped="" ref="0x40960d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40965af8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40965af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409646b8"/>
        <function-ref name="clear" scoped="" ref="0x40964a68"/>
        <function-ref name="isValid" scoped="" ref="0x40964308"/>
        <function-ref name="set" scoped="" ref="0x40964e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40961330" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40961330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40961978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40961d68" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40961d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409603e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40966100" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40966100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40966c00"/>
        <function-ref name="clear" scoped="" ref="0x40965010"/>
        <function-ref name="isValid" scoped="" ref="0x40966850"/>
        <function-ref name="set" scoped="" ref="0x409653c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409687f8" loc="20:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409687f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40968e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4098b0b0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4098b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098b288"/>
        <function-ref name="get" scoped="" ref="0x4098b368"/>
        <function-ref name="setValue" scoped="" ref="0x4098b448"/>
        <function-ref name="set" scoped="" ref="0x4098b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40985b58" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40985b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40985d30"/>
        <function-ref name="request" scoped="" ref="0x40985e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40983d18" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40983d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409818f0"/>
        <function-ref name="get" scoped="" ref="0x40981630"/>
        <function-ref name="isSet" scoped="" ref="0x40981370"/>
        <function-ref name="set" scoped="" ref="0x40981bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4099cb50" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4099cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4099b6b8"/>
        <function-ref name="clear" scoped="" ref="0x4099ba68"/>
        <function-ref name="isValid" scoped="" ref="0x4099b308"/>
        <function-ref name="set" scoped="" ref="0x4099be18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409889c0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409889c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40988b98"/>
        <function-ref name="turnOn" scoped="" ref="0x40988c78"/>
        <function-ref name="setChannel" scoped="" ref="0x40988d58"/>
        <function-ref name="done" scoped="" ref="0x40988e38"/>
        <function-ref name="standby" scoped="" ref="0x40988f18"/>
        <function-ref name="getChannel" scoped="" ref="0x40985010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40984010" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40984010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409841e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409842c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409843a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40984488"/>
        <function-ref name="headerLength" scoped="" ref="0x40984568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40984648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409849b0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409849b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40983590"/>
        <function-ref name="get" scoped="" ref="0x409832d0"/>
        <function-ref name="isSet" scoped="" ref="0x40983010"/>
        <function-ref name="set" scoped="" ref="0x40983850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40985708" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40985708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409858e0"/>
        <function-ref name="header" scoped="" ref="0x409859c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40980100" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40980100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40980cc8"/>
        <function-ref name="get" scoped="" ref="0x40980a08"/>
        <function-ref name="isSet" scoped="" ref="0x40980748"/>
        <function-ref name="set" scoped="" ref="0x4097f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4099c268" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4099c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4099c440"/>
        <function-ref name="headerLength" scoped="" ref="0x4099c520"/>
        <function-ref name="metadataLength" scoped="" ref="0x4099c600"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4099c6e0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4099c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4097d890" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4097ded8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409851b0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409851b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40985388"/>
        <function-ref name="ready" scoped="" ref="0x40985468"/>
        <function-ref name="sendDone" scoped="" ref="0x40985548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4097f520" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4097f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4097d0f8"/>
        <function-ref name="get" scoped="" ref="0x4097fe28"/>
        <function-ref name="isSet" scoped="" ref="0x4097fb68"/>
        <function-ref name="set" scoped="" ref="0x4097d3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409939b8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409939b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40993b90"/>
        <function-ref name="request" scoped="" ref="0x40993c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409a3208" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409a3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409a3958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40991b40" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40991b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098f780"/>
        <function-ref name="get" scoped="" ref="0x4098f4c0"/>
        <function-ref name="isSet" scoped="" ref="0x4098f200"/>
        <function-ref name="set" scoped="" ref="0x4098fa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x4099f4d0" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x4099f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4099f6a8"/>
        <function-ref name="get" scoped="" ref="0x4099f788"/>
        <function-ref name="setValue" scoped="" ref="0x4099f868"/>
        <function-ref name="set" scoped="" ref="0x4099f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40994498" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40994498"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40994670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4099e3a8" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4099e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4099eea8"/>
        <function-ref name="clear" scoped="" ref="0x4099d280"/>
        <function-ref name="isValid" scoped="" ref="0x4099eaf8"/>
        <function-ref name="set" scoped="" ref="0x4099d630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x409a8860" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409a8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409a8a38"/>
        <function-ref name="isInput" scoped="" ref="0x409a8b18"/>
        <function-ref name="toggle" scoped="" ref="0x409a8bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x409a8cd8"/>
        <function-ref name="get" scoped="" ref="0x409a8db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409a8e98"/>
        <function-ref name="set" scoped="" ref="0x409a7010"/>
        <function-ref name="clr" scoped="" ref="0x409a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409bc1b8" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409bc1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bc390"/>
        <function-ref name="wait" scoped="" ref="0x409bc470"/>
        <function-ref name="cancel" scoped="" ref="0x409bc550"/>
        <function-ref name="isFree" scoped="" ref="0x409bc630"/>
        <function-ref name="getNow" scoped="" ref="0x409bc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40994818" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40994818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409949f0"/>
        <function-ref name="turnOn" scoped="" ref="0x40994ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x40994bb0"/>
        <function-ref name="done" scoped="" ref="0x40994c90"/>
        <function-ref name="standby" scoped="" ref="0x40994d70"/>
        <function-ref name="getChannel" scoped="" ref="0x40994e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409a3cc0" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409a3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a1318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409927d8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409927d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409913b8"/>
        <function-ref name="get" scoped="" ref="0x409910f8"/>
        <function-ref name="isSet" scoped="" ref="0x40992e20"/>
        <function-ref name="set" scoped="" ref="0x40991678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40993e20" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40993e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40992010"/>
        <function-ref name="payloadLength" scoped="" ref="0x409920f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409921d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409922b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40992390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40992470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409a5e38" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409a5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409a8050"/>
        <function-ref name="isInput" scoped="" ref="0x409a8130"/>
        <function-ref name="toggle" scoped="" ref="0x409a8210"/>
        <function-ref name="isOutput" scoped="" ref="0x409a82f0"/>
        <function-ref name="get" scoped="" ref="0x409a83d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409a84b0"/>
        <function-ref name="set" scoped="" ref="0x409a8590"/>
        <function-ref name="clr" scoped="" ref="0x409a8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409a1638" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409a1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a1810"/>
        <function-ref name="headerLength" scoped="" ref="0x409a18f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409a19d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x409a1ab0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409a1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40993568" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40993568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40993740"/>
        <function-ref name="header" scoped="" ref="0x40993820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4098e010" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4098e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098ebd8"/>
        <function-ref name="get" scoped="" ref="0x4098e918"/>
        <function-ref name="isSet" scoped="" ref="0x4098e658"/>
        <function-ref name="set" scoped="" ref="0x4098ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40995e10" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40995e10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40994010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409a9148" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409a9148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409a93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409a9480"/>
        <function-ref name="request" scoped="" ref="0x409a9560"/>
        <function-ref name="granted" scoped="" ref="0x409a9640"/>
        <function-ref name="isOwner" scoped="" ref="0x409a9720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409ab6c8" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409ab6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ab8a0"/>
        <function-ref name="isInput" scoped="" ref="0x409ab980"/>
        <function-ref name="toggle" scoped="" ref="0x409aba60"/>
        <function-ref name="isOutput" scoped="" ref="0x409abb40"/>
        <function-ref name="get" scoped="" ref="0x409abc20"/>
        <function-ref name="makeOutput" scoped="" ref="0x409abd00"/>
        <function-ref name="set" scoped="" ref="0x409abde0"/>
        <function-ref name="clr" scoped="" ref="0x409abec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x409ac3d8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409ac3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ab010"/>
        <function-ref name="get" scoped="" ref="0x409acce0"/>
        <function-ref name="isSet" scoped="" ref="0x409aca20"/>
        <function-ref name="set" scoped="" ref="0x409ab2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40993010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40993010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409931e8"/>
        <function-ref name="ready" scoped="" ref="0x409932c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409933a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x409a29c0" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409a29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409a2b98"/>
        <function-ref name="disable" scoped="" ref="0x409a2c78"/>
        <function-ref name="captured" scoped="" ref="0x409a2d58"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409a2e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x409a57c0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409a57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409a5998"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409a5a78"/>
        <function-ref name="splitRead" scoped="" ref="0x409a5b58"/>
        <function-ref name="write" scoped="" ref="0x409a5c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x4099fb90" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x4099fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4099fd68"/>
        <function-ref name="get" scoped="" ref="0x4099fe48"/>
        <function-ref name="setValue" scoped="" ref="0x4099ff28"/>
        <function-ref name="set" scoped="" ref="0x4099e018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x409a1e08" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409a1e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4099f010"/>
        <function-ref name="get" scoped="" ref="0x4099f0f0"/>
        <function-ref name="setValue" scoped="" ref="0x4099f1d0"/>
        <function-ref name="set" scoped="" ref="0x4099f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4099da70" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4099da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4099dd48"/>
        <function-ref name="suspend" scoped="" ref="0x4099de28"/>
        <function-ref name="resume" scoped="" ref="0x4099df08"/>
        <function-ref name="run" scoped="" ref="0x409bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a32580" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a32580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a32758"/>
        <function-ref name="isInput" scoped="" ref="0x40a32838"/>
        <function-ref name="toggle" scoped="" ref="0x40a32918"/>
        <function-ref name="isOutput" scoped="" ref="0x40a329f8"/>
        <function-ref name="get" scoped="" ref="0x40a32ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a32bb8"/>
        <function-ref name="set" scoped="" ref="0x40a32c98"/>
        <function-ref name="clr" scoped="" ref="0x40a32d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a33ad8" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a33ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a33cb0"/>
        <function-ref name="isInput" scoped="" ref="0x40a33d90"/>
        <function-ref name="toggle" scoped="" ref="0x40a33e70"/>
        <function-ref name="isOutput" scoped="" ref="0x40a32010"/>
        <function-ref name="get" scoped="" ref="0x40a320f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a321d0"/>
        <function-ref name="set" scoped="" ref="0x40a322b0"/>
        <function-ref name="clr" scoped="" ref="0x40a32390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a31810" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a31810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a30d58"/>
        <function-ref name="fired" scoped="" ref="0x40a30528"/>
        <function-ref name="startAt" scoped="" ref="0x40a30a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40a307a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a2e010"/>
        <function-ref name="start" scoped="" ref="0x40a30010"/>
        <function-ref name="stop" scoped="" ref="0x40a302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a14ca8" loc="31:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a14ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a14e80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a33010"/>
        <function-ref name="request" scoped="" ref="0x40a330f0"/>
        <function-ref name="granted" scoped="" ref="0x40a331d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40a14288" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a14288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a14460"/>
        <function-ref name="isInput" scoped="" ref="0x40a14540"/>
        <function-ref name="toggle" scoped="" ref="0x40a14620"/>
        <function-ref name="isOutput" scoped="" ref="0x40a14700"/>
        <function-ref name="get" scoped="" ref="0x40a147e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a148c0"/>
        <function-ref name="set" scoped="" ref="0x40a149a0"/>
        <function-ref name="clr" scoped="" ref="0x40a14a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a31010" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a31010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a311e8"/>
        <function-ref name="disable" scoped="" ref="0x40a312c8"/>
        <function-ref name="captured" scoped="" ref="0x40a313a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a31488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a33460" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a33460"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a33638"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a33718"/>
        <function-ref name="splitRead" scoped="" ref="0x40a337f8"/>
        <function-ref name="write" scoped="" ref="0x40a338d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a2e400" loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2ea48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a29d00" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a29d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a29ed8"/>
        <function-ref name="isInput" scoped="" ref="0x40a46010"/>
        <function-ref name="toggle" scoped="" ref="0x40a460f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a461d0"/>
        <function-ref name="get" scoped="" ref="0x40a462b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a46390"/>
        <function-ref name="set" scoped="" ref="0x40a46470"/>
        <function-ref name="clr" scoped="" ref="0x40a46550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a25f08" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a25f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a299f0"/>
        <function-ref name="test" scoped="" ref="0x40a29500"/>
        <function-ref name="get" scoped="" ref="0x40a2a578"/>
        <function-ref name="captured" scoped="" ref="0x40a2aa90"/>
        <function-ref name="reset" scoped="" ref="0x40a2ad30"/>
        <function-ref name="isOn" scoped="" ref="0x40a29778"/>
        <function-ref name="set" scoped="" ref="0x40a2a7f0"/>
        <function-ref name="start" scoped="" ref="0x40a29010"/>
        <function-ref name="stop" scoped="" ref="0x40a29288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a46758" loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a46758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a46930"/>
        <function-ref name="isInput" scoped="" ref="0x40a46a10"/>
        <function-ref name="toggle" scoped="" ref="0x40a46af0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a46bd0"/>
        <function-ref name="get" scoped="" ref="0x40a46cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a46d90"/>
        <function-ref name="set" scoped="" ref="0x40a46e70"/>
        <function-ref name="clr" scoped="" ref="0x40a45010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a2b868" loc="29:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a2b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a2ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a2b1e0" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a2b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a2b3b8"/>
        <function-ref name="disable" scoped="" ref="0x40a2b498"/>
        <function-ref name="captured" scoped="" ref="0x40a2b578"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a2b658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a39dc8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a39dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3d010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a3b3a0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a3b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a3b578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a2c710" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a2c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a2c8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a3b748" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a3b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a3b920"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a3ba00"/>
        <function-ref name="splitRead" scoped="" ref="0x40a3bae0"/>
        <function-ref name="write" scoped="" ref="0x40a3bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a3d588" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a3d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3d760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a3d840"/>
        <function-ref name="request" scoped="" ref="0x40a3d920"/>
        <function-ref name="granted" scoped="" ref="0x40a3da00"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a7a548" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a7a548"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a7a720"/>
        <function-ref name="runTask" scoped="" ref="0x40a7a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a58450" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a58450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a58628"/>
        <function-ref name="sendDone" scoped="" ref="0x40a58708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a548c0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a548c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a54a98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a54b78"/>
        <function-ref name="request" scoped="" ref="0x40a54c58"/>
        <function-ref name="granted" scoped="" ref="0x40a54d38"/>
        <function-ref name="isOwner" scoped="" ref="0x40a54e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a3ca30" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a3ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a3cc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a3c6d0" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a3c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a3c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a47bc8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a47bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a47da0"/>
        <function-ref name="sleep" scoped="" ref="0x40a542b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a55010"/>
        <function-ref name="dataReady" scoped="" ref="0x40a54390"/>
        <function-ref name="initMaster" scoped="" ref="0x40a551d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a552b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a55390"/>
        <function-ref name="read" scoped="" ref="0x40a55470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a55550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a55630"/>
        <function-ref name="setClock" scoped="" ref="0x40a55710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a557f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a558d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a55a30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a55b10"/>
        <function-ref name="write" scoped="" ref="0x40a55bf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a55cd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a55db0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a55e90"/>
        <function-ref name="getClock" scoped="" ref="0x40a54010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a540f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a47e80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a550f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a541d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a3cdb8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a3cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a58010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a580f0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a581d0"/>
        <function-ref name="write" scoped="" ref="0x40a582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a58b80" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a58b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a58d58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a58e38"/>
        <function-ref name="request" scoped="" ref="0x40a58f18"/>
        <function-ref name="granted" scoped="" ref="0x40a57010"/>
        <function-ref name="isOwner" scoped="" ref="0x40a570f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a69010" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a691e8"/>
        <function-ref name="userId" scoped="" ref="0x40a692c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a69490" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a69490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a69668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a852e8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a852e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a854c0"/>
        <function-ref name="sleep" scoped="" ref="0x40a84950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a85680"/>
        <function-ref name="dataReady" scoped="" ref="0x40a84a30"/>
        <function-ref name="initMaster" scoped="" ref="0x40a85840"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a85920"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a85a00"/>
        <function-ref name="read" scoped="" ref="0x40a85ae0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a85bc0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a85ca0"/>
        <function-ref name="setClock" scoped="" ref="0x40a85d80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a85e60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a84010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a84170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a84250"/>
        <function-ref name="write" scoped="" ref="0x40a84330"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a84410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a844f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a845d0"/>
        <function-ref name="getClock" scoped="" ref="0x40a846b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a84790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a855a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a85760"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a84870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a9f2e0" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a9f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9f4b8"/>
        <function-ref name="isInput" scoped="" ref="0x40a9f598"/>
        <function-ref name="toggle" scoped="" ref="0x40a9f678"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9f758"/>
        <function-ref name="get" scoped="" ref="0x40a9f838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9f918"/>
        <function-ref name="set" scoped="" ref="0x40a9f9f8"/>
        <function-ref name="clr" scoped="" ref="0x40a9fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a7eea8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a7eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x40a7d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x40a7d280"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7d360"/>
        <function-ref name="get" scoped="" ref="0x40a7d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7d520"/>
        <function-ref name="set" scoped="" ref="0x40a7d600"/>
        <function-ref name="clr" scoped="" ref="0x40a7d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a7e4d0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a7e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7e6a8"/>
        <function-ref name="isInput" scoped="" ref="0x40a7e788"/>
        <function-ref name="toggle" scoped="" ref="0x40a7e868"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7e948"/>
        <function-ref name="get" scoped="" ref="0x40a7ea28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7eb08"/>
        <function-ref name="set" scoped="" ref="0x40a7ebe8"/>
        <function-ref name="clr" scoped="" ref="0x40a7ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a7e010" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a7e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a7e1e8"/>
        <function-ref name="stop" scoped="" ref="0x40a7e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a9fce0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a9fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a9feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a836c0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a836c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a83898"/>
        <function-ref name="sleep" scoped="" ref="0x40a80cd0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a83a58"/>
        <function-ref name="dataReady" scoped="" ref="0x40a80db0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a83c18"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a83cf8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a83dd8"/>
        <function-ref name="read" scoped="" ref="0x40a83eb8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a80010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a800f0"/>
        <function-ref name="setClock" scoped="" ref="0x40a801d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a802b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a80390"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a804f0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a805d0"/>
        <function-ref name="write" scoped="" ref="0x40a806b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a80790"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a80870"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a80950"/>
        <function-ref name="getClock" scoped="" ref="0x40a80a30"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a80b10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a83978"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a83b38"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a80bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a7d8d0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a7d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7daa8"/>
        <function-ref name="isInput" scoped="" ref="0x40a7db88"/>
        <function-ref name="toggle" scoped="" ref="0x40a7dc68"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7dd48"/>
        <function-ref name="get" scoped="" ref="0x40a7de28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7df08"/>
        <function-ref name="set" scoped="" ref="0x40a9f010"/>
        <function-ref name="clr" scoped="" ref="0x40a9f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ac1618" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ac1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ac1800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ac18e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ac1ed0" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac1ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ac00e0"/>
        <function-ref name="configure" scoped="" ref="0x40ac01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ac2ec0" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ac2ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac10c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac11a0"/>
        <function-ref name="request" scoped="" ref="0x40ac1280"/>
        <function-ref name="granted" scoped="" ref="0x40ac1360"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ac1a20" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ac1bf8"/>
        <function-ref name="userId" scoped="" ref="0x40ac1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412c1700" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412c1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412c18d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x412c1a38" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x412c1a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412c1c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x412c1cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412c1dd0"/>
        <function-ref name="dequeue" scoped="" ref="0x412c1eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412bf1e8" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412bf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412bf3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412bf4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412bfab0" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412bfab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412bfc98"/>
        <function-ref name="configure" scoped="" ref="0x412bfd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x412bfed8" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412bfed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412bd0c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x412bd1a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412bd280"/>
        <function-ref name="dequeue" scoped="" ref="0x412bd360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412c0a50" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412c0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412c0c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412c0d18"/>
        <function-ref name="request" scoped="" ref="0x412c0df8"/>
        <function-ref name="granted" scoped="" ref="0x412c0ed8"/>
        <function-ref name="isOwner" scoped="" ref="0x412bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412bf5f0" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412bf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412bf7c8"/>
        <function-ref name="userId" scoped="" ref="0x412bf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x412bd4e0" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x412bd4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412bd6b8"/>
        <function-ref name="runTask" scoped="" ref="0x412bd798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40ad8e10" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40ad8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40ab7010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ab70f0"/>
        <function-ref name="getControlA" scoped="" ref="0x40ab71d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ab72b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40ab7390"/>
        <function-ref name="setControlB" scoped="" ref="0x40ab7470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40ab7550"/>
        <function-ref name="getControlB" scoped="" ref="0x40ab7630"/>
        <function-ref name="setControlC" scoped="" ref="0x40ab7710"/>
        <function-ref name="setControlA" scoped="" ref="0x40ab77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40ab7b28" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ab7b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ad6640"/>
        <function-ref name="test" scoped="" ref="0x40ad6150"/>
        <function-ref name="get" scoped="" ref="0x40ab6200"/>
        <function-ref name="captured" scoped="" ref="0x40ab6718"/>
        <function-ref name="reset" scoped="" ref="0x40ab69b8"/>
        <function-ref name="isOn" scoped="" ref="0x40ad63c8"/>
        <function-ref name="set" scoped="" ref="0x40ab6478"/>
        <function-ref name="start" scoped="" ref="0x40ab6c30"/>
        <function-ref name="stop" scoped="" ref="0x40ab6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40ad6d50" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40ad6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ad4300"/>
        <function-ref name="fired" scoped="" ref="0x40ad58f8"/>
        <function-ref name="get" scoped="" ref="0x40ad53e0"/>
        <function-ref name="reset" scoped="" ref="0x40ad5b70"/>
        <function-ref name="isOn" scoped="" ref="0x40ad4578"/>
        <function-ref name="set" scoped="" ref="0x40ad5658"/>
        <function-ref name="start" scoped="" ref="0x40ad5de8"/>
        <function-ref name="stop" scoped="" ref="0x40ad4088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40abc4a8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40abc4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ab9f18"/>
        <function-ref name="test" scoped="" ref="0x40ab9a28"/>
        <function-ref name="get" scoped="" ref="0x40abcaf0"/>
        <function-ref name="setScale" scoped="" ref="0x40ab81a8"/>
        <function-ref name="getScale" scoped="" ref="0x40ab8448"/>
        <function-ref name="reset" scoped="" ref="0x40ab92c0"/>
        <function-ref name="overflow" scoped="" ref="0x40ab9048"/>
        <function-ref name="isOn" scoped="" ref="0x40ab9ca0"/>
        <function-ref name="set" scoped="" ref="0x40abcd68"/>
        <function-ref name="start" scoped="" ref="0x40ab9538"/>
        <function-ref name="stop" scoped="" ref="0x40ab97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40ace530" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40ace530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40ace708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ace7e8"/>
        <function-ref name="getControlA" scoped="" ref="0x40ace8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ace9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40acea88"/>
        <function-ref name="setControlB" scoped="" ref="0x40aceb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40acec48"/>
        <function-ref name="getControlB" scoped="" ref="0x40aced28"/>
        <function-ref name="setControlC" scoped="" ref="0x40acee08"/>
        <function-ref name="setControlA" scoped="" ref="0x40aceee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40aca128" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40aca128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ac9690"/>
        <function-ref name="fired" scoped="" ref="0x40acac88"/>
        <function-ref name="get" scoped="" ref="0x40aca770"/>
        <function-ref name="reset" scoped="" ref="0x40acaf00"/>
        <function-ref name="isOn" scoped="" ref="0x40ac9908"/>
        <function-ref name="set" scoped="" ref="0x40aca9e8"/>
        <function-ref name="start" scoped="" ref="0x40ac91a0"/>
        <function-ref name="stop" scoped="" ref="0x40ac9418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40acd258" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40acd258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40acbcc0"/>
        <function-ref name="test" scoped="" ref="0x40acb7d0"/>
        <function-ref name="get" scoped="" ref="0x40acd8a0"/>
        <function-ref name="captured" scoped="" ref="0x40acddb8"/>
        <function-ref name="reset" scoped="" ref="0x40acb068"/>
        <function-ref name="isOn" scoped="" ref="0x40acba48"/>
        <function-ref name="set" scoped="" ref="0x40acdb18"/>
        <function-ref name="start" scoped="" ref="0x40acb2e0"/>
        <function-ref name="stop" scoped="" ref="0x40acb558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40ac9d20" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40ac9d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ac62c0"/>
        <function-ref name="fired" scoped="" ref="0x40ac78a8"/>
        <function-ref name="get" scoped="" ref="0x40ac7390"/>
        <function-ref name="reset" scoped="" ref="0x40ac7b20"/>
        <function-ref name="isOn" scoped="" ref="0x40ac6538"/>
        <function-ref name="set" scoped="" ref="0x40ac7608"/>
        <function-ref name="start" scoped="" ref="0x40ac7d98"/>
        <function-ref name="stop" scoped="" ref="0x40ac6048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40ac6950" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40ac6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40aebf08"/>
        <function-ref name="fired" scoped="" ref="0x40aeb528"/>
        <function-ref name="get" scoped="" ref="0x40aeb010"/>
        <function-ref name="reset" scoped="" ref="0x40aeb7a0"/>
        <function-ref name="isOn" scoped="" ref="0x40ae91a0"/>
        <function-ref name="set" scoped="" ref="0x40aeb288"/>
        <function-ref name="start" scoped="" ref="0x40aeba18"/>
        <function-ref name="stop" scoped="" ref="0x40aebc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ad0230" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ad0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40acfca0"/>
        <function-ref name="test" scoped="" ref="0x40acf7b0"/>
        <function-ref name="get" scoped="" ref="0x40ad0878"/>
        <function-ref name="setScale" scoped="" ref="0x40acff18"/>
        <function-ref name="getScale" scoped="" ref="0x40ace1d0"/>
        <function-ref name="reset" scoped="" ref="0x40acf048"/>
        <function-ref name="overflow" scoped="" ref="0x40ad0d90"/>
        <function-ref name="isOn" scoped="" ref="0x40acfa28"/>
        <function-ref name="set" scoped="" ref="0x40ad0af0"/>
        <function-ref name="start" scoped="" ref="0x40acf2c0"/>
        <function-ref name="stop" scoped="" ref="0x40acf538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b1ac88" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b1ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b5f150"/>
        <function-ref name="fired" scoped="" ref="0x40b39908"/>
        <function-ref name="startAt" scoped="" ref="0x40b39df8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b39b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b5f3c8"/>
        <function-ref name="start" scoped="" ref="0x40b393f0"/>
        <function-ref name="stop" scoped="" ref="0x40b39690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b12480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b12480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f95d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f95d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b12658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b12868" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b12868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b2f2e0"/>
        <function-ref name="test" scoped="" ref="0x40b37dd0"/>
        <function-ref name="get" scoped="" ref="0x40b12eb0"/>
        <function-ref name="setScale" scoped="" ref="0x40b2f558"/>
        <function-ref name="getScale" scoped="" ref="0x40b2f7f8"/>
        <function-ref name="reset" scoped="" ref="0x40b37668"/>
        <function-ref name="overflow" scoped="" ref="0x40b373f0"/>
        <function-ref name="isOn" scoped="" ref="0x40b2f068"/>
        <function-ref name="set" scoped="" ref="0x40b37150"/>
        <function-ref name="start" scoped="" ref="0x40b378e0"/>
        <function-ref name="stop" scoped="" ref="0x40b37b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x412f7db0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x412f7db0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f93d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f93d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412f4278"/>
        <function-ref name="fired" scoped="" ref="0x412f5a30"/>
        <function-ref name="startAt" scoped="" ref="0x412f5f20"/>
        <function-ref name="isRunning" scoped="" ref="0x412f5ca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x412f44f0"/>
        <function-ref name="start" scoped="" ref="0x412f5518"/>
        <function-ref name="stop" scoped="" ref="0x412f57b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x412f2a60" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x412f2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x412ef010"/>
        <function-ref name="fired" scoped="" ref="0x412f05f0"/>
        <function-ref name="get" scoped="" ref="0x412f00d8"/>
        <function-ref name="reset" scoped="" ref="0x412f0868"/>
        <function-ref name="isOn" scoped="" ref="0x412ef288"/>
        <function-ref name="set" scoped="" ref="0x412f0350"/>
        <function-ref name="start" scoped="" ref="0x412f0ae0"/>
        <function-ref name="stop" scoped="" ref="0x412f0d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x412f47b0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x412f47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x412f2288"/>
        <function-ref name="test" scoped="" ref="0x412f3d08"/>
        <function-ref name="get" scoped="" ref="0x412f4df8"/>
        <function-ref name="setScale" scoped="" ref="0x412f2500"/>
        <function-ref name="getScale" scoped="" ref="0x412f27a0"/>
        <function-ref name="reset" scoped="" ref="0x412f35a0"/>
        <function-ref name="overflow" scoped="" ref="0x412f3328"/>
        <function-ref name="isOn" scoped="" ref="0x412f2010"/>
        <function-ref name="set" scoped="" ref="0x412f3088"/>
        <function-ref name="start" scoped="" ref="0x412f3818"/>
        <function-ref name="stop" scoped="" ref="0x412f3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b5e570" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b5e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b5ebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b5b688" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b5b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b5bdd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b582e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b58068"/>
        <function-ref name="overflow" scoped="" ref="0x40b58558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b56e90" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b56e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b4c600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b4caf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b4c878"/>
        <function-ref name="overflow" scoped="" ref="0x40b4cd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b73078" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b73078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b72ab8"/>
        <function-ref name="test" scoped="" ref="0x40b725c8"/>
        <function-ref name="get" scoped="" ref="0x40b736c0"/>
        <function-ref name="setScale" scoped="" ref="0x40b72d30"/>
        <function-ref name="getScale" scoped="" ref="0x40b70010"/>
        <function-ref name="reset" scoped="" ref="0x40b73e50"/>
        <function-ref name="overflow" scoped="" ref="0x40b73bd8"/>
        <function-ref name="isOn" scoped="" ref="0x40b72840"/>
        <function-ref name="set" scoped="" ref="0x40b73938"/>
        <function-ref name="start" scoped="" ref="0x40b720d8"/>
        <function-ref name="stop" scoped="" ref="0x40b72350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b870e0" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b870e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b87830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b87d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b87aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40b85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b59e60" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b59e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b6f5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b6fad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b6f858"/>
        <function-ref name="overflow" scoped="" ref="0x40b6fd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b85f18" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b85f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b84578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b848c8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b848c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b83048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b83538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b832c0"/>
        <function-ref name="overflow" scoped="" ref="0x40b837b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40b7f010" loc="31:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40b7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40b7f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b80e00" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b80e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7c010"/>
        <function-ref name="get" scoped="" ref="0x40b7c0f0"/>
        <function-ref name="setValue" scoped="" ref="0x40b7c1d0"/>
        <function-ref name="set" scoped="" ref="0x40b7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b7b3e0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b7b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7b5b8"/>
        <function-ref name="get" scoped="" ref="0x40b7b698"/>
        <function-ref name="setValue" scoped="" ref="0x40b7b778"/>
        <function-ref name="set" scoped="" ref="0x40b7b858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b7aa30" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b7aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7ac08"/>
        <function-ref name="get" scoped="" ref="0x40b7ace8"/>
        <function-ref name="setValue" scoped="" ref="0x40b7adc8"/>
        <function-ref name="set" scoped="" ref="0x40b7aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ba9280" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ba9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba9458"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba9538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba9618"/>
        <function-ref name="cancel" scoped="" ref="0x40ba96f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba97d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ba9918" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ba9918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba9af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ba9bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba9cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba9d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ba9e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c01010" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c011e8"/>
        <function-ref name="source" scoped="" ref="0x40c012c8"/>
        <function-ref name="address" scoped="" ref="0x40c013a8"/>
        <function-ref name="destination" scoped="" ref="0x40c01488"/>
        <function-ref name="setSource" scoped="" ref="0x40c01568"/>
        <function-ref name="setDestination" scoped="" ref="0x40c01648"/>
        <function-ref name="type" scoped="" ref="0x40c01728"/>
        <function-ref name="setType" scoped="" ref="0x40c01808"/>
        <function-ref name="isForMe" scoped="" ref="0x40c018e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40c019c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40c01aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c01c08" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c01c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c01de0"/>
        <function-ref name="noAck" scoped="" ref="0x40c01ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4131bb18" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4131bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4131bcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x4131bdd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4131beb0"/>
        <function-ref name="cancel" scoped="" ref="0x41318010"/>
        <function-ref name="sendDone" scoped="" ref="0x413180f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41318230" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41318230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41318408"/>
        <function-ref name="payloadLength" scoped="" ref="0x413184e8"/>
        <function-ref name="getPayload" scoped="" ref="0x413185c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413186a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41318788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413188c8" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413188c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41318aa0"/>
        <function-ref name="source" scoped="" ref="0x41318b80"/>
        <function-ref name="address" scoped="" ref="0x41318c60"/>
        <function-ref name="destination" scoped="" ref="0x41318d40"/>
        <function-ref name="setSource" scoped="" ref="0x41318e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41318f00"/>
        <function-ref name="type" scoped="" ref="0x41317010"/>
        <function-ref name="setType" scoped="" ref="0x413170f0"/>
        <function-ref name="isForMe" scoped="" ref="0x413171d0"/>
        <function-ref name="setGroup" scoped="" ref="0x413172b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41317390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x413174f0" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x413174f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x413176c8"/>
        <function-ref name="noAck" scoped="" ref="0x413177a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41317888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41311228" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41311228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41311400"/>
        <function-ref name="getPayload" scoped="" ref="0x413114e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413115c0"/>
        <function-ref name="cancel" scoped="" ref="0x413116a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41311780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413118f0" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413118f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41311ac8"/>
        <function-ref name="getPayload" scoped="" ref="0x41311ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41311c88"/>
        <function-ref name="cancel" scoped="" ref="0x41311d68"/>
        <function-ref name="sendDone" scoped="" ref="0x41311e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41310010" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41310010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413101e8"/>
        <function-ref name="source" scoped="" ref="0x413102c8"/>
        <function-ref name="address" scoped="" ref="0x413103a8"/>
        <function-ref name="destination" scoped="" ref="0x41310488"/>
        <function-ref name="setSource" scoped="" ref="0x41310568"/>
        <function-ref name="setDestination" scoped="" ref="0x41310648"/>
        <function-ref name="type" scoped="" ref="0x41310728"/>
        <function-ref name="setType" scoped="" ref="0x41310808"/>
        <function-ref name="isForMe" scoped="" ref="0x413108e8"/>
        <function-ref name="setGroup" scoped="" ref="0x413109c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41310aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bb6410" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bb6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb65e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb66c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb67a8"/>
        <function-ref name="cancel" scoped="" ref="0x40bb6888"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb6968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40be1b48" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40be1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be1d30"/>
        <function-ref name="getPayload" scoped="" ref="0x40be1e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be1ef0"/>
        <function-ref name="cancel" scoped="" ref="0x40bdf010"/>
        <function-ref name="sendDone" scoped="" ref="0x40bdf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be13d8" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be15c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be16a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be1780"/>
        <function-ref name="cancel" scoped="" ref="0x40be1860"/>
        <function-ref name="sendDone" scoped="" ref="0x40be1940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40bdfe08" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bdfe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bde010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bde0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bde1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bde2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bde390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40bde510" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40bde510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bde6e8"/>
        <function-ref name="runTask" scoped="" ref="0x40bde7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40bde948" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40bde948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bdeb20"/>
        <function-ref name="runTask" scoped="" ref="0x40bdec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40bdf230" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bdf230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bdf408"/>
        <function-ref name="source" scoped="" ref="0x40bdf4e8"/>
        <function-ref name="address" scoped="" ref="0x40bdf5c8"/>
        <function-ref name="destination" scoped="" ref="0x40bdf6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40bdf788"/>
        <function-ref name="setDestination" scoped="" ref="0x40bdf868"/>
        <function-ref name="type" scoped="" ref="0x40bdf948"/>
        <function-ref name="setType" scoped="" ref="0x40bdfa28"/>
        <function-ref name="isForMe" scoped="" ref="0x40bdfb08"/>
        <function-ref name="setGroup" scoped="" ref="0x40bdfbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40bdfcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bffa70" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ProximityAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bffa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bffc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bffd28"/>
        <function-ref name="getPayload" scoped="" ref="0x40bffe08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bffee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bfe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bff758" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ProximityAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bff758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bff930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bfe150" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ProximityAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bfe150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bfe328"/>
        <function-ref name="source" scoped="" ref="0x40bfe408"/>
        <function-ref name="address" scoped="" ref="0x40bfe4e8"/>
        <function-ref name="destination" scoped="" ref="0x40bfe5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40bfe6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40bfe788"/>
        <function-ref name="type" scoped="" ref="0x40bfe868"/>
        <function-ref name="setType" scoped="" ref="0x40bfe948"/>
        <function-ref name="isForMe" scoped="" ref="0x40bfea28"/>
        <function-ref name="setGroup" scoped="" ref="0x40bfeb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40bfebe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bf1c88" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bf1c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bf1e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c1a010"/>
        <function-ref name="led1On" scoped="" ref="0x40c1a0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c1a1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c1a2b0"/>
        <function-ref name="get" scoped="" ref="0x40c1a390"/>
        <function-ref name="led1Off" scoped="" ref="0x40c1a470"/>
        <function-ref name="led2Off" scoped="" ref="0x40c1a7f0"/>
        <function-ref name="set" scoped="" ref="0x40c1a550"/>
        <function-ref name="led0On" scoped="" ref="0x40c1a630"/>
        <function-ref name="led2On" scoped="" ref="0x40c1a710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40c29450" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40c29450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c29628"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40c29708"/>
        <function-ref name="computeCrc" scoped="" ref="0x40c297e8"/>
        <function-ref name="getSize" scoped="" ref="0x40c298c8"/>
        <function-ref name="readDone" scoped="" ref="0x40c299a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c24918" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c24918"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c24af0"/>
        <function-ref name="writeDone" scoped="" ref="0x40c24bd0"/>
        <function-ref name="erase" scoped="" ref="0x40c24cb0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c24d90"/>
        <function-ref name="write" scoped="" ref="0x40c24e70"/>
        <function-ref name="sync" scoped="" ref="0x40c0a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c0a180" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c0a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c0a358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c0a438"/>
        <function-ref name="led1On" scoped="" ref="0x40c0a518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c0a5f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c0a6d8"/>
        <function-ref name="get" scoped="" ref="0x40c0a7b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40c0a898"/>
        <function-ref name="led2Off" scoped="" ref="0x40c0ac18"/>
        <function-ref name="set" scoped="" ref="0x40c0a978"/>
        <function-ref name="led0On" scoped="" ref="0x40c0aa58"/>
        <function-ref name="led2On" scoped="" ref="0x40c0ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x40c08890" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40c08890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c08a68"/>
        <function-ref name="receiveDone" scoped="" ref="0x40c08b48"/>
        <function-ref name="publish" scoped="" ref="0x40c08c28"/>
        <function-ref name="stop" scoped="" ref="0x40c08d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c483f0" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c47ed0"/>
        <function-ref name="fired" scoped="" ref="0x40c47188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c47890"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c47638"/>
        <function-ref name="getdt" scoped="" ref="0x40c463a8"/>
        <function-ref name="gett0" scoped="" ref="0x40c46150"/>
        <function-ref name="isRunning" scoped="" ref="0x40c473e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c48a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c47bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c48c98"/>
        <function-ref name="stop" scoped="" ref="0x40c48f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x40c3ee50" loc="43:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x40c3ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c45050"/>
        <function-ref name="getPayload" scoped="" ref="0x40c45130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c45210"/>
        <function-ref name="cancel" scoped="" ref="0x40c452f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c453d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40c1fe78" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c1fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c48070"/>
        <function-ref name="rand32" scoped="" ref="0x40c48150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x40c45600" loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x40c45600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c457d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c45c90" loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c45c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c45e68"/>
        <function-ref name="writeDone" scoped="" ref="0x40c44010"/>
        <function-ref name="erase" scoped="" ref="0x40c440f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c441d0"/>
        <function-ref name="write" scoped="" ref="0x40c442b0"/>
        <function-ref name="sync" scoped="" ref="0x40c44390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x40c351e8" loc="99:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x40c351e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c353c0"/>
        <function-ref name="runTask" scoped="" ref="0x40c354a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c44500" loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c44500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c446d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c447b8"/>
        <function-ref name="led1On" scoped="" ref="0x40c44898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c44978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c44a58"/>
        <function-ref name="get" scoped="" ref="0x40c44b38"/>
        <function-ref name="led1Off" scoped="" ref="0x40c44c18"/>
        <function-ref name="led2Off" scoped="" ref="0x40c3d010"/>
        <function-ref name="set" scoped="" ref="0x40c44cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40c44dd8"/>
        <function-ref name="led2On" scoped="" ref="0x40c44eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x40c40410" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c40410"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40c40b28"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40c406c8"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40c407a8"/>
        <function-ref name="receivedPage" scoped="" ref="0x40c40888"/>
        <function-ref name="setImgNum" scoped="" ref="0x40c40968"/>
        <function-ref name="isTransferring" scoped="" ref="0x40c40a48"/>
        <function-ref name="stop" scoped="" ref="0x40c405e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x40c3e990" loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40c3e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40c3eb68"/>
        <function-ref name="crc16" scoped="" ref="0x40c3ec48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x40c1f850" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40c1f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c1fa28"/>
        <function-ref name="receiveDone" scoped="" ref="0x40c1fb08"/>
        <function-ref name="publish" scoped="" ref="0x40c1fbe8"/>
        <function-ref name="stop" scoped="" ref="0x40c1fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40c843d8" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40c843d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c845b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c84690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c84770"/>
        <function-ref name="cancel" scoped="" ref="0x40c84850"/>
        <function-ref name="sendDone" scoped="" ref="0x40c84930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40c86178" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40c86178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c86350"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40c86430"/>
        <function-ref name="computeCrc" scoped="" ref="0x40c86510"/>
        <function-ref name="getSize" scoped="" ref="0x40c865f0"/>
        <function-ref name="readDone" scoped="" ref="0x40c866d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c86b88" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c86b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c86d60"/>
        <function-ref name="writeDone" scoped="" ref="0x40c86e40"/>
        <function-ref name="erase" scoped="" ref="0x40c86f20"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c85018"/>
        <function-ref name="write" scoped="" ref="0x40c850f8"/>
        <function-ref name="sync" scoped="" ref="0x40c851d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40c85410" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c85410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c855e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40c85818" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c85818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c859f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40c85c00" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40c85c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c85dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c85eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c84010"/>
        <function-ref name="cancel" scoped="" ref="0x40c840f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40c22560" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c22560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40c22c78"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40c22818"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40c228f8"/>
        <function-ref name="receivedPage" scoped="" ref="0x40c229d8"/>
        <function-ref name="setImgNum" scoped="" ref="0x40c22ab8"/>
        <function-ref name="isTransferring" scoped="" ref="0x40c22b98"/>
        <function-ref name="stop" scoped="" ref="0x40c22738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c83850" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c83850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c83a28"/>
        <function-ref name="noAck" scoped="" ref="0x40c83b08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c83be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c83d58" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c83d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c82010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c820f0"/>
        <function-ref name="led1On" scoped="" ref="0x40c821d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c822b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c82390"/>
        <function-ref name="get" scoped="" ref="0x40c82470"/>
        <function-ref name="led1Off" scoped="" ref="0x40c82550"/>
        <function-ref name="led2Off" scoped="" ref="0x40c828d0"/>
        <function-ref name="set" scoped="" ref="0x40c82630"/>
        <function-ref name="led0On" scoped="" ref="0x40c82710"/>
        <function-ref name="led2On" scoped="" ref="0x40c827f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40c84ac8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c84ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c84ca0"/>
        <function-ref name="source" scoped="" ref="0x40c84d80"/>
        <function-ref name="address" scoped="" ref="0x40c84e60"/>
        <function-ref name="destination" scoped="" ref="0x40c83010"/>
        <function-ref name="setSource" scoped="" ref="0x40c830f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c831d0"/>
        <function-ref name="type" scoped="" ref="0x40c832b0"/>
        <function-ref name="setType" scoped="" ref="0x40c83390"/>
        <function-ref name="isForMe" scoped="" ref="0x40c83470"/>
        <function-ref name="setGroup" scoped="" ref="0x40c83550"/>
        <function-ref name="localGroup" scoped="" ref="0x40c83630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40ca0a68" loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40ca0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40ca0c40"/>
        <function-ref name="rand32" scoped="" ref="0x40ca0d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40c7dd88" loc="45:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40c7dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c77010"/>
        <function-ref name="getPayload" scoped="" ref="0x40c770f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c771d0"/>
        <function-ref name="cancel" scoped="" ref="0x40c772b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c77390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40c79ac8" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40c79ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c79ca0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40c79d80"/>
        <function-ref name="computeCrc" scoped="" ref="0x40c79e60"/>
        <function-ref name="getSize" scoped="" ref="0x40c7e010"/>
        <function-ref name="readDone" scoped="" ref="0x40c7e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x40c79280" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40c79280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40c79458"/>
        <function-ref name="printBitVec" scoped="" ref="0x40c79538"/>
        <function-ref name="countOnes" scoped="" ref="0x40c79618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c7e5a8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c7e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c7e780"/>
        <function-ref name="writeDone" scoped="" ref="0x40c7e860"/>
        <function-ref name="erase" scoped="" ref="0x40c7e940"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c7ea20"/>
        <function-ref name="write" scoped="" ref="0x40c7eb00"/>
        <function-ref name="sync" scoped="" ref="0x40c7ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40c7ee18" loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c7ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40c7d240" loc="43:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c7d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7d418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40c7d628" loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40c7d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c7d800"/>
        <function-ref name="getPayload" scoped="" ref="0x40c7d8e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c7d9c0"/>
        <function-ref name="cancel" scoped="" ref="0x40c7daa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c7db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ca0e90" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ca0e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c9f108"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c9f1e8"/>
        <function-ref name="led1On" scoped="" ref="0x40c9f2c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c9f3a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c9f488"/>
        <function-ref name="get" scoped="" ref="0x40c9f568"/>
        <function-ref name="led1Off" scoped="" ref="0x40c9f648"/>
        <function-ref name="led2Off" scoped="" ref="0x40c9f9c8"/>
        <function-ref name="set" scoped="" ref="0x40c9f728"/>
        <function-ref name="led0On" scoped="" ref="0x40c9f808"/>
        <function-ref name="led2On" scoped="" ref="0x40c9f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40c7f138" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c7f138"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40c7f850"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40c7f3f0"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40c7f4d0"/>
        <function-ref name="receivedPage" scoped="" ref="0x40c7f5b0"/>
        <function-ref name="setImgNum" scoped="" ref="0x40c7f690"/>
        <function-ref name="isTransferring" scoped="" ref="0x40c7f770"/>
        <function-ref name="stop" scoped="" ref="0x40c7f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c76230" loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c76230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c76408"/>
        <function-ref name="noAck" scoped="" ref="0x40c764e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c765c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40c77528" loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c77528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c77700"/>
        <function-ref name="source" scoped="" ref="0x40c777e0"/>
        <function-ref name="address" scoped="" ref="0x40c778c0"/>
        <function-ref name="destination" scoped="" ref="0x40c779a0"/>
        <function-ref name="setSource" scoped="" ref="0x40c77a80"/>
        <function-ref name="setDestination" scoped="" ref="0x40c77b60"/>
        <function-ref name="type" scoped="" ref="0x40c77c40"/>
        <function-ref name="setType" scoped="" ref="0x40c77d20"/>
        <function-ref name="isForMe" scoped="" ref="0x40c77e00"/>
        <function-ref name="setGroup" scoped="" ref="0x40c77ee0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c76010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c76868" loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c76868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ca0368"/>
        <function-ref name="fired" scoped="" ref="0x40c75608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c75d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c75ab8"/>
        <function-ref name="getdt" scoped="" ref="0x40ca0818"/>
        <function-ref name="gett0" scoped="" ref="0x40ca05c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c75860"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c76e90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ca0048"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c75130"/>
        <function-ref name="stop" scoped="" ref="0x40c753b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x40cd45c0" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40cd45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40cd4798"/>
        <function-ref name="printBitVec" scoped="" ref="0x40cd4878"/>
        <function-ref name="countOnes" scoped="" ref="0x40cd4958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cd3ad8" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cd3ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cf86a8"/>
        <function-ref name="fired" scoped="" ref="0x40cd2938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cf8068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd2de8"/>
        <function-ref name="getdt" scoped="" ref="0x40cf8b58"/>
        <function-ref name="gett0" scoped="" ref="0x40cf8900"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd2b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd21e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cf8388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd2460"/>
        <function-ref name="stop" scoped="" ref="0x40cd26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x40d10898" loc="38:/opt/tinyos-2.1.1/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40d10898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40d10a70"/>
        <function-ref name="crc16" scoped="" ref="0x40d10b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cf16a0" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cf16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf1878"/>
        <function-ref name="getPayload" scoped="" ref="0x40cf1958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cf1a38"/>
        <function-ref name="cancel" scoped="" ref="0x40cf1b18"/>
        <function-ref name="sendDone" scoped="" ref="0x40cf1bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cf1d38" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cf1d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cf1f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d0a010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0a1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d0a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d0a3f0" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d0a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d0a5c8"/>
        <function-ref name="source" scoped="" ref="0x40d0a6a8"/>
        <function-ref name="address" scoped="" ref="0x40d0a788"/>
        <function-ref name="destination" scoped="" ref="0x40d0a868"/>
        <function-ref name="setSource" scoped="" ref="0x40d0a948"/>
        <function-ref name="setDestination" scoped="" ref="0x40d0aa28"/>
        <function-ref name="type" scoped="" ref="0x40d0ab08"/>
        <function-ref name="setType" scoped="" ref="0x40d0abe8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d0acc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d0ada8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d0ae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d09010" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d09010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d091e8"/>
        <function-ref name="noAck" scoped="" ref="0x40d092c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d093a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413238a8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413238a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41323a80"/>
        <function-ref name="getPayload" scoped="" ref="0x41323b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41323c40"/>
        <function-ref name="cancel" scoped="" ref="0x41323d20"/>
        <function-ref name="sendDone" scoped="" ref="0x41323e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41320010" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41320010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413201e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x413202c8"/>
        <function-ref name="getPayload" scoped="" ref="0x413203a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41320488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41320568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413206a8" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413206a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41320880"/>
        <function-ref name="source" scoped="" ref="0x41320960"/>
        <function-ref name="address" scoped="" ref="0x41320a40"/>
        <function-ref name="destination" scoped="" ref="0x41320b20"/>
        <function-ref name="setSource" scoped="" ref="0x41320c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41320ce0"/>
        <function-ref name="type" scoped="" ref="0x41320dc0"/>
        <function-ref name="setType" scoped="" ref="0x41320ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x4131f010"/>
        <function-ref name="setGroup" scoped="" ref="0x4131f0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4131f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4131f330" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4131f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4131f508"/>
        <function-ref name="noAck" scoped="" ref="0x4131f5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4131f6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41364440" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41364440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41364618"/>
        <function-ref name="getPayload" scoped="" ref="0x413646f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413647d8"/>
        <function-ref name="cancel" scoped="" ref="0x413648b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41364998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41364b08" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41364b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41364ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x41364dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41364ea0"/>
        <function-ref name="cancel" scoped="" ref="0x41363010"/>
        <function-ref name="sendDone" scoped="" ref="0x413630f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41363230" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41363230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41363408"/>
        <function-ref name="source" scoped="" ref="0x413634e8"/>
        <function-ref name="address" scoped="" ref="0x413635c8"/>
        <function-ref name="destination" scoped="" ref="0x413636a8"/>
        <function-ref name="setSource" scoped="" ref="0x41363788"/>
        <function-ref name="setDestination" scoped="" ref="0x41363868"/>
        <function-ref name="type" scoped="" ref="0x41363948"/>
        <function-ref name="setType" scoped="" ref="0x41363a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41363b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41363be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41363cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d089b8" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d089b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d08b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d08c70"/>
        <function-ref name="getPayload" scoped="" ref="0x40d08d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d08e30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d08f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d086a0" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d086a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d08878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d07070" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d07070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d07248"/>
        <function-ref name="source" scoped="" ref="0x40d07328"/>
        <function-ref name="address" scoped="" ref="0x40d07408"/>
        <function-ref name="destination" scoped="" ref="0x40d074e8"/>
        <function-ref name="setSource" scoped="" ref="0x40d075c8"/>
        <function-ref name="setDestination" scoped="" ref="0x40d076a8"/>
        <function-ref name="type" scoped="" ref="0x40d07788"/>
        <function-ref name="setType" scoped="" ref="0x40d07868"/>
        <function-ref name="isForMe" scoped="" ref="0x40d07948"/>
        <function-ref name="setGroup" scoped="" ref="0x40d07a28"/>
        <function-ref name="localGroup" scoped="" ref="0x40d07b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d06b48" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d06b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d06d20"/>
        <function-ref name="getPayload" scoped="" ref="0x40d06e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d06ee0"/>
        <function-ref name="cancel" scoped="" ref="0x40d05010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d050f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d05230" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d05230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d05408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d054e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d055c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d056a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d05788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d058c8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d058c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d05aa0"/>
        <function-ref name="source" scoped="" ref="0x40d05b80"/>
        <function-ref name="address" scoped="" ref="0x40d05c60"/>
        <function-ref name="destination" scoped="" ref="0x40d05d40"/>
        <function-ref name="setSource" scoped="" ref="0x40d05e20"/>
        <function-ref name="setDestination" scoped="" ref="0x40d05f00"/>
        <function-ref name="type" scoped="" ref="0x40d04010"/>
        <function-ref name="setType" scoped="" ref="0x40d040f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d041d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40d042b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d04390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d044f0" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d044f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d046c8"/>
        <function-ref name="noAck" scoped="" ref="0x40d047a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d04888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413547a8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413547a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41354980"/>
        <function-ref name="getPayload" scoped="" ref="0x41354a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41354b40"/>
        <function-ref name="cancel" scoped="" ref="0x41354c20"/>
        <function-ref name="sendDone" scoped="" ref="0x41354d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41354e40" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41354e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41353050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41353130"/>
        <function-ref name="getPayload" scoped="" ref="0x41353210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413532f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413533d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41353510" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41353510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413536e8"/>
        <function-ref name="source" scoped="" ref="0x413537c8"/>
        <function-ref name="address" scoped="" ref="0x413538a8"/>
        <function-ref name="destination" scoped="" ref="0x41353988"/>
        <function-ref name="setSource" scoped="" ref="0x41353a68"/>
        <function-ref name="setDestination" scoped="" ref="0x41353b48"/>
        <function-ref name="type" scoped="" ref="0x41353c28"/>
        <function-ref name="setType" scoped="" ref="0x41353d08"/>
        <function-ref name="isForMe" scoped="" ref="0x41353de8"/>
        <function-ref name="setGroup" scoped="" ref="0x41353ec8"/>
        <function-ref name="localGroup" scoped="" ref="0x41352010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41352170" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41352170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41352348"/>
        <function-ref name="noAck" scoped="" ref="0x41352428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41352508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4134c2b8" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4134c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4134c490"/>
        <function-ref name="getPayload" scoped="" ref="0x4134c570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4134c650"/>
        <function-ref name="cancel" scoped="" ref="0x4134c730"/>
        <function-ref name="sendDone" scoped="" ref="0x4134c810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4134c980" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4134c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4134cb58"/>
        <function-ref name="getPayload" scoped="" ref="0x4134cc38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4134cd18"/>
        <function-ref name="cancel" scoped="" ref="0x4134cdf8"/>
        <function-ref name="sendDone" scoped="" ref="0x4134ced8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4134b030" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4134b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4134b208"/>
        <function-ref name="source" scoped="" ref="0x4134b2e8"/>
        <function-ref name="address" scoped="" ref="0x4134b3c8"/>
        <function-ref name="destination" scoped="" ref="0x4134b4a8"/>
        <function-ref name="setSource" scoped="" ref="0x4134b588"/>
        <function-ref name="setDestination" scoped="" ref="0x4134b668"/>
        <function-ref name="type" scoped="" ref="0x4134b748"/>
        <function-ref name="setType" scoped="" ref="0x4134b828"/>
        <function-ref name="isForMe" scoped="" ref="0x4134b908"/>
        <function-ref name="setGroup" scoped="" ref="0x4134b9e8"/>
        <function-ref name="localGroup" scoped="" ref="0x4134bac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d03dd0" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d03dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d02010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d020f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d021d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d022b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d02390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d03ab8" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d03ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d03c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d024d0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d026a8"/>
        <function-ref name="source" scoped="" ref="0x40d02788"/>
        <function-ref name="address" scoped="" ref="0x40d02868"/>
        <function-ref name="destination" scoped="" ref="0x40d02948"/>
        <function-ref name="setSource" scoped="" ref="0x40d02a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40d02b08"/>
        <function-ref name="type" scoped="" ref="0x40d02be8"/>
        <function-ref name="setType" scoped="" ref="0x40d02cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d02da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d02e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40d01010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d00070" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d00070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d00248"/>
        <function-ref name="getPayload" scoped="" ref="0x40d00328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d00408"/>
        <function-ref name="cancel" scoped="" ref="0x40d004e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d005c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d00708" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d00708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d008e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d009c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d00aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d00b80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d00c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d00da0" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d00da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cff010"/>
        <function-ref name="source" scoped="" ref="0x40cff0f0"/>
        <function-ref name="address" scoped="" ref="0x40cff1d0"/>
        <function-ref name="destination" scoped="" ref="0x40cff2b0"/>
        <function-ref name="setSource" scoped="" ref="0x40cff390"/>
        <function-ref name="setDestination" scoped="" ref="0x40cff470"/>
        <function-ref name="type" scoped="" ref="0x40cff550"/>
        <function-ref name="setType" scoped="" ref="0x40cff630"/>
        <function-ref name="isForMe" scoped="" ref="0x40cff710"/>
        <function-ref name="setGroup" scoped="" ref="0x40cff7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40cff8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40cffa30" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40cffa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cffc08"/>
        <function-ref name="noAck" scoped="" ref="0x40cffce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cffdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413844d8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413844d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413846b0"/>
        <function-ref name="getPayload" scoped="" ref="0x41384790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41384870"/>
        <function-ref name="cancel" scoped="" ref="0x41384950"/>
        <function-ref name="sendDone" scoped="" ref="0x41384a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41384b70" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41384b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41384d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x41384e28"/>
        <function-ref name="getPayload" scoped="" ref="0x41384f08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41383010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413830f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41383230" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41383230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41383408"/>
        <function-ref name="source" scoped="" ref="0x413834e8"/>
        <function-ref name="address" scoped="" ref="0x413835c8"/>
        <function-ref name="destination" scoped="" ref="0x413836a8"/>
        <function-ref name="setSource" scoped="" ref="0x41383788"/>
        <function-ref name="setDestination" scoped="" ref="0x41383868"/>
        <function-ref name="type" scoped="" ref="0x41383948"/>
        <function-ref name="setType" scoped="" ref="0x41383a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41383b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41383be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41383cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41383e28" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41383e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41382050"/>
        <function-ref name="noAck" scoped="" ref="0x41382130"/>
        <function-ref name="wasAcked" scoped="" ref="0x41382210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41380d00" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41380d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41380ed8"/>
        <function-ref name="getPayload" scoped="" ref="0x4137d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4137d0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4137d1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4137d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4137d420" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4137d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4137d5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4137d6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4137d7b8"/>
        <function-ref name="cancel" scoped="" ref="0x4137d898"/>
        <function-ref name="sendDone" scoped="" ref="0x4137d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4137dab8" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4137dab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4137dc90"/>
        <function-ref name="source" scoped="" ref="0x4137dd70"/>
        <function-ref name="address" scoped="" ref="0x4137de50"/>
        <function-ref name="destination" scoped="" ref="0x4137c010"/>
        <function-ref name="setSource" scoped="" ref="0x4137c0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x4137c1d0"/>
        <function-ref name="type" scoped="" ref="0x4137c2b0"/>
        <function-ref name="setType" scoped="" ref="0x4137c390"/>
        <function-ref name="isForMe" scoped="" ref="0x4137c470"/>
        <function-ref name="setGroup" scoped="" ref="0x4137c550"/>
        <function-ref name="localGroup" scoped="" ref="0x4137c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cfc348" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cfc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cfc520"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cfc600"/>
        <function-ref name="getPayload" scoped="" ref="0x40cfc6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cfc7c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cfc8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cfc030" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cfc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cfc208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cfc9e0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cfc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cfcbb8"/>
        <function-ref name="source" scoped="" ref="0x40cfcc98"/>
        <function-ref name="address" scoped="" ref="0x40cfcd78"/>
        <function-ref name="destination" scoped="" ref="0x40cfce58"/>
        <function-ref name="setSource" scoped="" ref="0x40d29010"/>
        <function-ref name="setDestination" scoped="" ref="0x40d290f0"/>
        <function-ref name="type" scoped="" ref="0x40d291d0"/>
        <function-ref name="setType" scoped="" ref="0x40d292b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d29390"/>
        <function-ref name="setGroup" scoped="" ref="0x40d29470"/>
        <function-ref name="localGroup" scoped="" ref="0x40d29550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d27e60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d27e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d25988"/>
        <function-ref name="fired" scoped="" ref="0x40d26c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d25348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d250f0"/>
        <function-ref name="getdt" scoped="" ref="0x40d25e38"/>
        <function-ref name="gett0" scoped="" ref="0x40d25be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d26e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d264b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d25668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d26738"/>
        <function-ref name="stop" scoped="" ref="0x40d269b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d207b0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d207b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d20988"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d20a68"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d20b48"/>
        <function-ref name="getSize" scoped="" ref="0x40d20c28"/>
        <function-ref name="readDone" scoped="" ref="0x40d20d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d20e48" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d20e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d1f050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d1f130"/>
        <function-ref name="request" scoped="" ref="0x40d1f210"/>
        <function-ref name="granted" scoped="" ref="0x40d1f2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d1f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4136d460" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4136d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4136d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d1cc80" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d1cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d1ce58"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d17010"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d170f0"/>
        <function-ref name="getSize" scoped="" ref="0x40d171d0"/>
        <function-ref name="readDone" scoped="" ref="0x40d172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d17760" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d17760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d17938"/>
        <function-ref name="writeDone" scoped="" ref="0x40d17a18"/>
        <function-ref name="erase" scoped="" ref="0x40d17af8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d17bd8"/>
        <function-ref name="write" scoped="" ref="0x40d17cb8"/>
        <function-ref name="sync" scoped="" ref="0x40d17d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40d153d0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d155a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40d16d08" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40d16d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40d16ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d41570" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d41570"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d41758"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d41838"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d41918"/>
        <function-ref name="getSize" scoped="" ref="0x40d419f8"/>
        <function-ref name="readDone" scoped="" ref="0x40d41ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d41cb0" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d41cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d41e98"/>
        <function-ref name="writeDone" scoped="" ref="0x40d40010"/>
        <function-ref name="erase" scoped="" ref="0x40d400f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d401d0"/>
        <function-ref name="write" scoped="" ref="0x40d402b0"/>
        <function-ref name="sync" scoped="" ref="0x40d40390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40d6b918" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40d6b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d6bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40d40568" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40d40568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40d40750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x40d40978" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x40d40978"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d40b60"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d40c40"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d40d20"/>
        <function-ref name="getSize" scoped="" ref="0x40d40e00"/>
        <function-ref name="readDone" scoped="" ref="0x40d40ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x40d6b0f8" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6b0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d6b2e0"/>
        <function-ref name="writeDone" scoped="" ref="0x40d6b3c0"/>
        <function-ref name="erase" scoped="" ref="0x40d6b4a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d6b580"/>
        <function-ref name="write" scoped="" ref="0x40d6b660"/>
        <function-ref name="sync" scoped="" ref="0x40d6b740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40d6bcd8" loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40d6bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40d6bec0"/>
        <function-ref name="remap" scoped="" ref="0x40d6a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d67e88" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d67e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40eca070"/>
        <function-ref name="writeDone" scoped="" ref="0x40eca150"/>
        <function-ref name="erase" scoped="" ref="0x40eca230"/>
        <function-ref name="eraseDone" scoped="" ref="0x40eca310"/>
        <function-ref name="write" scoped="" ref="0x40eca3f0"/>
        <function-ref name="sync" scoped="" ref="0x40eca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40eca610" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40eca610"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40eca7e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40eca8c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40eca9a8"/>
        <function-ref name="getSize" scoped="" ref="0x40ecaa88"/>
        <function-ref name="readDone" scoped="" ref="0x40ecab68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x40d83620" loc="48:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40d83620"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40d5f5d0"/>
        <function-ref name="syncDone" scoped="" ref="0x40d838d8"/>
        <function-ref name="flushDone" scoped="" ref="0x40d839b8"/>
        <function-ref name="read" scoped="" ref="0x40d83a98"/>
        <function-ref name="writeDone" scoped="" ref="0x40d83b78"/>
        <function-ref name="copyPage" scoped="" ref="0x40d83c58"/>
        <function-ref name="erase" scoped="" ref="0x40d83d38"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d83e18"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d83ef8"/>
        <function-ref name="flush" scoped="" ref="0x40d5f010"/>
        <function-ref name="syncAll" scoped="" ref="0x40d5f0f0"/>
        <function-ref name="flushAll" scoped="" ref="0x40d5f1d0"/>
        <function-ref name="write" scoped="" ref="0x40d5f2b0"/>
        <function-ref name="sync" scoped="" ref="0x40d5f410"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d5f4f0"/>
        <function-ref name="readDone" scoped="" ref="0x40d837f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d627f8" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d627f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d629d0"/>
        <function-ref name="writeDone" scoped="" ref="0x40d62ab0"/>
        <function-ref name="erase" scoped="" ref="0x40d62b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d62c70"/>
        <function-ref name="write" scoped="" ref="0x40d62d50"/>
        <function-ref name="sync" scoped="" ref="0x40d62e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d602f8" loc="45:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d602f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d604d0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d605b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d60690"/>
        <function-ref name="getSize" scoped="" ref="0x40d60770"/>
        <function-ref name="readDone" scoped="" ref="0x40d60850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x40d821c0" loc="51:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x40d821c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x40d82398"/>
        <function-ref name="flipped" scoped="" ref="0x40d82478"/>
        <function-ref name="isConfig" scoped="" ref="0x40d82558"/>
        <function-ref name="writeHook" scoped="" ref="0x40d82638"/>
        <function-ref name="remap" scoped="" ref="0x40d82718"/>
        <function-ref name="writeContinue" scoped="" ref="0x40d827f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40d5faa0" loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40d5faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40d5fc78"/>
        <function-ref name="remap" scoped="" ref="0x40d5fd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d5e228" loc="50:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d5e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d5e400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d5e4e0"/>
        <function-ref name="request" scoped="" ref="0x40d5e5c0"/>
        <function-ref name="granted" scoped="" ref="0x40d5e6a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d5e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40dc6680" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40dc6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40dc36b0"/>
        <function-ref name="syncDone" scoped="" ref="0x40dc6938"/>
        <function-ref name="flushDone" scoped="" ref="0x40dc6a18"/>
        <function-ref name="read" scoped="" ref="0x40dc6af8"/>
        <function-ref name="writeDone" scoped="" ref="0x40dc6bd8"/>
        <function-ref name="copyPage" scoped="" ref="0x40dc6cb8"/>
        <function-ref name="erase" scoped="" ref="0x40dc6d98"/>
        <function-ref name="eraseDone" scoped="" ref="0x40dc6e78"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40dc3010"/>
        <function-ref name="flush" scoped="" ref="0x40dc30f0"/>
        <function-ref name="syncAll" scoped="" ref="0x40dc31d0"/>
        <function-ref name="flushAll" scoped="" ref="0x40dc32b0"/>
        <function-ref name="write" scoped="" ref="0x40dc3390"/>
        <function-ref name="sync" scoped="" ref="0x40dc34f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40dc35d0"/>
        <function-ref name="readDone" scoped="" ref="0x40dc6858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40dbe250" loc="27:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dbe250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dbe428"/>
        <function-ref name="requested" scoped="" ref="0x40dbe508"/>
        <function-ref name="granted" scoped="" ref="0x40dbe5e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40dbe6c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40dbe7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40dc3b50" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40dc3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dc3d28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dc3e08"/>
        <function-ref name="request" scoped="" ref="0x40dc3ee8"/>
        <function-ref name="granted" scoped="" ref="0x40dc2010"/>
        <function-ref name="isOwner" scoped="" ref="0x40dc20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40dbe958" loc="28:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40dbe958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40dbeb30"/>
        <function-ref name="userId" scoped="" ref="0x40dbec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x40de0c30" loc="48:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40de0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x40dbbe90"/>
        <function-ref name="waitCompare" scoped="" ref="0x40de0ee8"/>
        <function-ref name="crcDone" scoped="" ref="0x40dbb010"/>
        <function-ref name="flushDone" scoped="" ref="0x40dbb0f0"/>
        <function-ref name="read" scoped="" ref="0x40dbb1d0"/>
        <function-ref name="erase" scoped="" ref="0x40dbb2b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40dbb390"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40dbb470"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40dbb550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40dbb630"/>
        <function-ref name="waitIdle" scoped="" ref="0x40dbb710"/>
        <function-ref name="flush" scoped="" ref="0x40dbb7f0"/>
        <function-ref name="write" scoped="" ref="0x40dbb8d0"/>
        <function-ref name="compareDone" scoped="" ref="0x40dbba30"/>
        <function-ref name="compare" scoped="" ref="0x40dbbb10"/>
        <function-ref name="crc" scoped="" ref="0x40dbbbf0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40dbbcd0"/>
        <function-ref name="fillDone" scoped="" ref="0x40dbbdb0"/>
        <function-ref name="readDone" scoped="" ref="0x40de0e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40dc18b0" loc="45:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40dc18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40dbc870"/>
        <function-ref name="syncDone" scoped="" ref="0x40dc1b68"/>
        <function-ref name="flushDone" scoped="" ref="0x40dc1c48"/>
        <function-ref name="read" scoped="" ref="0x40dc1d28"/>
        <function-ref name="writeDone" scoped="" ref="0x40dc1e08"/>
        <function-ref name="copyPage" scoped="" ref="0x40dc1ee8"/>
        <function-ref name="erase" scoped="" ref="0x40dbc010"/>
        <function-ref name="eraseDone" scoped="" ref="0x40dbc0f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40dbc1d0"/>
        <function-ref name="flush" scoped="" ref="0x40dbc2b0"/>
        <function-ref name="syncAll" scoped="" ref="0x40dbc390"/>
        <function-ref name="flushAll" scoped="" ref="0x40dbc470"/>
        <function-ref name="write" scoped="" ref="0x40dbc550"/>
        <function-ref name="sync" scoped="" ref="0x40dbc6b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40dbc790"/>
        <function-ref name="readDone" scoped="" ref="0x40dc1a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40dba1f8" loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40dba1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40dba948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x40dd3dc8" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x40dd3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e04010"/>
        <function-ref name="runTask" scoped="" ref="0x40e040f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x40e04e10" loc="137:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x40e04e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e03010"/>
        <function-ref name="runTask" scoped="" ref="0x40e030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dc1558" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dc1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dc1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x40dbdde8" loc="20:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40dbdde8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f93d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f93d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x40e250f0"/>
        <function-ref name="waitCompare" scoped="" ref="0x40e260f0"/>
        <function-ref name="crcDone" scoped="" ref="0x40e261d0"/>
        <function-ref name="flushDone" scoped="" ref="0x40e262b0"/>
        <function-ref name="read" scoped="" ref="0x40e26390"/>
        <function-ref name="erase" scoped="" ref="0x40e26470"/>
        <function-ref name="writeDone" scoped="" ref="0x40e26550"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40e26630"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40e26710"/>
        <function-ref name="eraseDone" scoped="" ref="0x40e267f0"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e268d0"/>
        <function-ref name="flush" scoped="" ref="0x40e269b0"/>
        <function-ref name="write" scoped="" ref="0x40e26a90"/>
        <function-ref name="compareDone" scoped="" ref="0x40e26bf0"/>
        <function-ref name="compare" scoped="" ref="0x40e26cd0"/>
        <function-ref name="crc" scoped="" ref="0x40e26db0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40e26e90"/>
        <function-ref name="fillDone" scoped="" ref="0x40e25010"/>
        <function-ref name="readDone" scoped="" ref="0x40e26010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x40e24ca0" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40e24ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x40e5e010"/>
        <function-ref name="waitCompare" scoped="" ref="0x40e23010"/>
        <function-ref name="crcDone" scoped="" ref="0x40e230f0"/>
        <function-ref name="flushDone" scoped="" ref="0x40e231d0"/>
        <function-ref name="read" scoped="" ref="0x40e232b0"/>
        <function-ref name="erase" scoped="" ref="0x40e23390"/>
        <function-ref name="writeDone" scoped="" ref="0x40e23470"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40e23550"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40e23630"/>
        <function-ref name="eraseDone" scoped="" ref="0x40e23710"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e237f0"/>
        <function-ref name="flush" scoped="" ref="0x40e238d0"/>
        <function-ref name="write" scoped="" ref="0x40e239b0"/>
        <function-ref name="compareDone" scoped="" ref="0x40e23b10"/>
        <function-ref name="compare" scoped="" ref="0x40e23bf0"/>
        <function-ref name="crc" scoped="" ref="0x40e23cd0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40e23db0"/>
        <function-ref name="fillDone" scoped="" ref="0x40e23e90"/>
        <function-ref name="fill" scoped="" ref="0x40e24e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x40e5eb50" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x40e5ed28"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e5ee08"/>
        <function-ref name="idle" scoped="" ref="0x40e5eee8"/>
        <function-ref name="select" scoped="" ref="0x40e5d010"/>
        <function-ref name="deselect" scoped="" ref="0x40e5d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40e5e180" loc="28:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e5e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e5e358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e5e438"/>
        <function-ref name="request" scoped="" ref="0x40e5e518"/>
        <function-ref name="granted" scoped="" ref="0x40e5e5f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e5e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x40e5e838" loc="29:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x40e5e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40e5ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x40e5ac68" loc="45:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5ac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x40e5ae40"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e5af20"/>
        <function-ref name="idle" scoped="" ref="0x40e59018"/>
        <function-ref name="select" scoped="" ref="0x40e590f8"/>
        <function-ref name="deselect" scoped="" ref="0x40e591d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e5a170" loc="43:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e5a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e5a348"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e5a428"/>
        <function-ref name="request" scoped="" ref="0x40e5a508"/>
        <function-ref name="granted" scoped="" ref="0x40e5a5e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e5a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x40e5a8c8" loc="44:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x40e5a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40e5aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x40e54808" loc="78:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x40e54808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e549e0"/>
        <function-ref name="isInput" scoped="" ref="0x40e54ac0"/>
        <function-ref name="toggle" scoped="" ref="0x40e54ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e54c80"/>
        <function-ref name="get" scoped="" ref="0x40e54d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e54e40"/>
        <function-ref name="set" scoped="" ref="0x40e54f20"/>
        <function-ref name="clr" scoped="" ref="0x40e53018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40e53368" loc="79:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40e53368"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40e53ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x40e55d88" loc="77:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x40e55d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e54010"/>
        <function-ref name="isInput" scoped="" ref="0x40e540f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e541d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e542b0"/>
        <function-ref name="get" scoped="" ref="0x40e54390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e54470"/>
        <function-ref name="set" scoped="" ref="0x40e54550"/>
        <function-ref name="clr" scoped="" ref="0x40e54630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x40e56970" loc="75:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x40e56970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e56b48"/>
        <function-ref name="isInput" scoped="" ref="0x40e56c28"/>
        <function-ref name="toggle" scoped="" ref="0x40e56d08"/>
        <function-ref name="isOutput" scoped="" ref="0x40e56de8"/>
        <function-ref name="get" scoped="" ref="0x40e56ec8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e55010"/>
        <function-ref name="set" scoped="" ref="0x40e550f0"/>
        <function-ref name="clr" scoped="" ref="0x40e551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x40e561d8" loc="72:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e561d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x40e563b0"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e56490"/>
        <function-ref name="idle" scoped="" ref="0x40e56570"/>
        <function-ref name="select" scoped="" ref="0x40e56650"/>
        <function-ref name="deselect" scoped="" ref="0x40e56730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x40e553b0" loc="76:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x40e553b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e55588"/>
        <function-ref name="isInput" scoped="" ref="0x40e55668"/>
        <function-ref name="toggle" scoped="" ref="0x40e55748"/>
        <function-ref name="isOutput" scoped="" ref="0x40e55828"/>
        <function-ref name="get" scoped="" ref="0x40e55908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e559e8"/>
        <function-ref name="set" scoped="" ref="0x40e55ac8"/>
        <function-ref name="clr" scoped="" ref="0x40e55ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x40e76d78" loc="141:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x40e76d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e75010"/>
        <function-ref name="runTask" scoped="" ref="0x40e750f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e59a38" loc="70:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e59a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e59c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x40e59e10" loc="71:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x40e59e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40e56010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e6f410" loc="22:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e6f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e6f5e8"/>
        <function-ref name="configure" scoped="" ref="0x40e6f6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e70cc0" loc="21:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e70cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e70e98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e6f010"/>
        <function-ref name="request" scoped="" ref="0x40e6f0f0"/>
        <function-ref name="granted" scoped="" ref="0x40e6f1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e6f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x40e6f848" loc="25:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x40e6f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e6fa20"/>
        <function-ref name="runTask" scoped="" ref="0x40e6fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ecf7e8" loc="82:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ecf7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ecf9d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ecfab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ece7c0" loc="86:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ece7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ece9a8"/>
        <function-ref name="configure" scoped="" ref="0x40ecea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ecfbf0" loc="83:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ecfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ecfdc8"/>
        <function-ref name="requested" scoped="" ref="0x40ecfea8"/>
        <function-ref name="granted" scoped="" ref="0x40ece010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ece0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ece1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ecf0a8" loc="81:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ecf0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ecf290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ecf370"/>
        <function-ref name="request" scoped="" ref="0x40ecf450"/>
        <function-ref name="granted" scoped="" ref="0x40ecf530"/>
        <function-ref name="isOwner" scoped="" ref="0x40ecf610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ece310" loc="84:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ece310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ece4e8"/>
        <function-ref name="userId" scoped="" ref="0x40ece5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413bf430" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413bf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413bf608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x413bf768" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x413bf768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413bf940"/>
        <function-ref name="isEmpty" scoped="" ref="0x413bfa20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413bfb00"/>
        <function-ref name="dequeue" scoped="" ref="0x413bfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x413bd030" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x413bd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x413bd218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413bd2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413bc010" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413bc1f8"/>
        <function-ref name="configure" scoped="" ref="0x413bc2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x413bc438" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x413bc438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413bc610"/>
        <function-ref name="isEmpty" scoped="" ref="0x413bc6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413bc7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x413bc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x413bd438" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413bd438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413bd610"/>
        <function-ref name="requested" scoped="" ref="0x413bd6f0"/>
        <function-ref name="granted" scoped="" ref="0x413bd7d0"/>
        <function-ref name="isOwner" scoped="" ref="0x413bd8b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413bd990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413bc9f0" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413bc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413bcbc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413bcca8"/>
        <function-ref name="led1On" scoped="" ref="0x413bcd88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413bce68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413bb010"/>
        <function-ref name="get" scoped="" ref="0x413bb0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x413bb1d0"/>
        <function-ref name="led0On" scoped="" ref="0x413bb550"/>
        <function-ref name="set" scoped="" ref="0x413bb390"/>
        <function-ref name="led2On" scoped="" ref="0x413bb2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x413bb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413be8d0" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413be8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413beab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413beb98"/>
        <function-ref name="request" scoped="" ref="0x413bec78"/>
        <function-ref name="granted" scoped="" ref="0x413bed58"/>
        <function-ref name="isOwner" scoped="" ref="0x413bee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413bdad0" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413bdca8"/>
        <function-ref name="userId" scoped="" ref="0x413bdd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413bb6d0" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413bb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413bb8a8"/>
        <function-ref name="runTask" scoped="" ref="0x413bb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x40ec9240" loc="18:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40ec9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40ec9418"/>
        <function-ref name="remap" scoped="" ref="0x40ec94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ec4af8" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ec4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec4cd0"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec4db0"/>
        <function-ref name="erase" scoped="" ref="0x40ec4e90"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec3010"/>
        <function-ref name="write" scoped="" ref="0x40ec30f0"/>
        <function-ref name="sync" scoped="" ref="0x40ec31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec3310" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec34e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ec35c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ec36a8"/>
        <function-ref name="getSize" scoped="" ref="0x40ec3788"/>
        <function-ref name="readDone" scoped="" ref="0x40ec3868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ec2870" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ec2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec2a48"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec2b28"/>
        <function-ref name="erase" scoped="" ref="0x40ec2c08"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec2ce8"/>
        <function-ref name="write" scoped="" ref="0x40ec2dc8"/>
        <function-ref name="sync" scoped="" ref="0x40ec2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec1010" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec11e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ec12c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ec13a8"/>
        <function-ref name="getSize" scoped="" ref="0x40ec1488"/>
        <function-ref name="readDone" scoped="" ref="0x40ec1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ec0528" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ec0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec0700"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec07e0"/>
        <function-ref name="erase" scoped="" ref="0x40ec08c0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec09a0"/>
        <function-ref name="write" scoped="" ref="0x40ec0a80"/>
        <function-ref name="sync" scoped="" ref="0x40ec0b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec0ca0" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec0e78"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ebf010"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ebf0f0"/>
        <function-ref name="getSize" scoped="" ref="0x40ebf1d0"/>
        <function-ref name="readDone" scoped="" ref="0x40ebf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4136c010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4136c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4136c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4136c2c8"/>
        <function-ref name="request" scoped="" ref="0x4136c3a8"/>
        <function-ref name="granted" scoped="" ref="0x4136c488"/>
        <function-ref name="isOwner" scoped="" ref="0x4136c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40eea348" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40eea348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eea520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40eea600"/>
        <function-ref name="request" scoped="" ref="0x40eea6e0"/>
        <function-ref name="granted" scoped="" ref="0x40eea7c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40eea8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40eeaa50" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40eeaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40eeac28"/>
        <function-ref name="userId" scoped="" ref="0x40eead08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ee82c8" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ee82c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ee84b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ee8590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ee8b80" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ee8d68"/>
        <function-ref name="configure" scoped="" ref="0x40ee8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ee9b38" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee9d20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee9e00"/>
        <function-ref name="request" scoped="" ref="0x40ee9ee0"/>
        <function-ref name="granted" scoped="" ref="0x40ee8010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ee86d0" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ee86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ee88a8"/>
        <function-ref name="userId" scoped="" ref="0x40ee8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413dc238" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413dc238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413dc410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x413dc570" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x413dc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413dc748"/>
        <function-ref name="isEmpty" scoped="" ref="0x413dc828"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413dc908"/>
        <function-ref name="dequeue" scoped="" ref="0x413dc9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x413dbcb8" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x413dbcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x413dbea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413da010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413da610" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413da610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413da7f8"/>
        <function-ref name="configure" scoped="" ref="0x413da8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x413daa38" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x413daa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413dac10"/>
        <function-ref name="isEmpty" scoped="" ref="0x413dacf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413dadd0"/>
        <function-ref name="dequeue" scoped="" ref="0x413daeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413db578" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413db578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413db760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413db840"/>
        <function-ref name="request" scoped="" ref="0x413db920"/>
        <function-ref name="granted" scoped="" ref="0x413dba00"/>
        <function-ref name="isOwner" scoped="" ref="0x413dbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413da150" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413da150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413da328"/>
        <function-ref name="userId" scoped="" ref="0x413da408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413d9050" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413d9050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413d9228"/>
        <function-ref name="runTask" scoped="" ref="0x413d9308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40eeb330" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40eeb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40eeb508"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40eeb5e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40eeb6c8"/>
        <function-ref name="getSize" scoped="" ref="0x40eeb7a8"/>
        <function-ref name="readDone" scoped="" ref="0x40eeb888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40eeb9c8" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40eeb9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eebba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40eebc80"/>
        <function-ref name="request" scoped="" ref="0x40eebd60"/>
        <function-ref name="granted" scoped="" ref="0x40eebe40"/>
        <function-ref name="isOwner" scoped="" ref="0x40eebf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4140e5f0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4140e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4140e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4140d148" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4140d148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4140d320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4140d400"/>
        <function-ref name="request" scoped="" ref="0x4140d4e0"/>
        <function-ref name="granted" scoped="" ref="0x4140d5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x4140d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ee5e80" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ee5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ee4070"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ee4150"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ee4230"/>
        <function-ref name="getSize" scoped="" ref="0x40ee4310"/>
        <function-ref name="readDone" scoped="" ref="0x40ee43f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ee4530" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee4708"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee47e8"/>
        <function-ref name="request" scoped="" ref="0x40ee48c8"/>
        <function-ref name="granted" scoped="" ref="0x40ee49a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee4a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41409a48" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41409a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41409c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41408568" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41408568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41408740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41408820"/>
        <function-ref name="request" scoped="" ref="0x41408900"/>
        <function-ref name="granted" scoped="" ref="0x414089e0"/>
        <function-ref name="isOwner" scoped="" ref="0x41408ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ee2e28" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ee2e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ee1050"/>
        <function-ref name="writeDone" scoped="" ref="0x40ee1130"/>
        <function-ref name="erase" scoped="" ref="0x40ee1210"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ee12f0"/>
        <function-ref name="write" scoped="" ref="0x40ee13d0"/>
        <function-ref name="sync" scoped="" ref="0x40ee14b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ee15f0" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee17c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee18a8"/>
        <function-ref name="request" scoped="" ref="0x40ee1988"/>
        <function-ref name="granted" scoped="" ref="0x40ee1a68"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee1b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41404e18" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41404e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41402010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41402948" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41402948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41402b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41402c00"/>
        <function-ref name="request" scoped="" ref="0x41402ce0"/>
        <function-ref name="granted" scoped="" ref="0x41402dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41402ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40edbaf0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40edbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40edbcc8"/>
        <function-ref name="writeDone" scoped="" ref="0x40edbda8"/>
        <function-ref name="erase" scoped="" ref="0x40edbe88"/>
        <function-ref name="eraseDone" scoped="" ref="0x40eda010"/>
        <function-ref name="write" scoped="" ref="0x40eda0f0"/>
        <function-ref name="sync" scoped="" ref="0x40eda1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40eda310" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40eda310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eda4e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40eda5c8"/>
        <function-ref name="request" scoped="" ref="0x40eda6a8"/>
        <function-ref name="granted" scoped="" ref="0x40eda788"/>
        <function-ref name="isOwner" scoped="" ref="0x40eda868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x413fd350" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x413fd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413fd528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413fde60" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413fde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413fc050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413fc130"/>
        <function-ref name="request" scoped="" ref="0x413fc210"/>
        <function-ref name="granted" scoped="" ref="0x413fc2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x413fc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ed97f8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ed97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ed99d0"/>
        <function-ref name="writeDone" scoped="" ref="0x40ed9ab0"/>
        <function-ref name="erase" scoped="" ref="0x40ed9b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ed9c70"/>
        <function-ref name="write" scoped="" ref="0x40ed9d50"/>
        <function-ref name="sync" scoped="" ref="0x40ed9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ed8010" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ed8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ed81e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ed82c8"/>
        <function-ref name="request" scoped="" ref="0x40ed83a8"/>
        <function-ref name="granted" scoped="" ref="0x40ed8488"/>
        <function-ref name="isOwner" scoped="" ref="0x40ed8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41442860" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41442860"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41442a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414413a8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414413a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41441580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41441660"/>
        <function-ref name="request" scoped="" ref="0x41441740"/>
        <function-ref name="granted" scoped="" ref="0x41441820"/>
        <function-ref name="isOwner" scoped="" ref="0x41441900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40fba2d0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40fba2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf4ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf3748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40fba8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40f6a3d8" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40f6a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf4ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf3748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40fba010"/>
        <function-ref name="get" scoped="" ref="0x40f6aa20"/>
        <function-ref name="set" scoped="" ref="0x40f6ac98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x41439d88" loc="62:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x41439d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41438010"/>
        <function-ref name="runTask" scoped="" ref="0x414380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x4143a9b0" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4143a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x4143ac68"/>
        <function-ref name="storeData" scoped="" ref="0x41439010"/>
        <function-ref name="newData" scoped="" ref="0x4143ad48"/>
        <function-ref name="start" scoped="" ref="0x4143ae28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4143af08"/>
        <function-ref name="stop" scoped="" ref="0x4143ab88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x4143a030" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x4143a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf4ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf3748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4143a658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41439170" loc="52:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41439170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41439348"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41439428"/>
        <function-ref name="led1On" scoped="" ref="0x41439508"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414395e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414396c8"/>
        <function-ref name="get" scoped="" ref="0x414397a8"/>
        <function-ref name="led1Off" scoped="" ref="0x41439888"/>
        <function-ref name="led0On" scoped="" ref="0x41439c08"/>
        <function-ref name="set" scoped="" ref="0x41439a48"/>
        <function-ref name="led2On" scoped="" ref="0x41439968"/>
        <function-ref name="led2Off" scoped="" ref="0x41439b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4143b200" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4143b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf4ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf3748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x4143bd60"/>
        <function-ref name="get" scoped="" ref="0x4143b848"/>
        <function-ref name="set" scoped="" ref="0x4143bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4143dcb0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4143dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4143de88"/>
        <function-ref name="stop" scoped="" ref="0x4143b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40f115c0" loc="52:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f115c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f11798"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f11878"/>
        <function-ref name="reset" scoped="" ref="0x40f11958"/>
        <function-ref name="start" scoped="" ref="0x40f11a38"/>
        <function-ref name="stop" scoped="" ref="0x40f11b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40f16210" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40f16210"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40f164c8"/>
        <function-ref name="stop" scoped="" ref="0x40f16848"/>
        <function-ref name="newData" scoped="" ref="0x40f165a8"/>
        <function-ref name="start" scoped="" ref="0x40f16688"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40f16768"/>
        <function-ref name="requestData" scoped="" ref="0x40f163e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f199d8" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f199d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f19bb0"/>
        <function-ref name="stop" scoped="" ref="0x40f19c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40f14100" loc="53:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40f14100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f142d8"/>
        <function-ref name="stop" scoped="" ref="0x40f143b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x40f0b238" loc="57:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x40f0b238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f0b410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x40f0c9f8" loc="56:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x40f0c9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0cbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0ccb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0cd90"/>
        <function-ref name="cancel" scoped="" ref="0x40f0ce70"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f0df18" loc="53:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f0df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0c108"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0c1e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0c2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40f0c3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0c488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40f0d010" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f0d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f0d1e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f0d2c8"/>
        <function-ref name="reset" scoped="" ref="0x40f0d3a8"/>
        <function-ref name="start" scoped="" ref="0x40f0d488"/>
        <function-ref name="stop" scoped="" ref="0x40f0d568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40f0f450" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40f0f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40f0f708"/>
        <function-ref name="stop" scoped="" ref="0x40f0fa88"/>
        <function-ref name="newData" scoped="" ref="0x40f0f7e8"/>
        <function-ref name="start" scoped="" ref="0x40f0f8c8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40f0f9a8"/>
        <function-ref name="requestData" scoped="" ref="0x40f0f628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40f0c610" loc="54:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f0c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f0c7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f0b580" loc="59:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f0b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f0b758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f0b838"/>
        <function-ref name="led1On" scoped="" ref="0x40f0b918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f0b9f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f0bad8"/>
        <function-ref name="get" scoped="" ref="0x40f0bbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f0bc98"/>
        <function-ref name="led2Off" scoped="" ref="0x40f0a0f0"/>
        <function-ref name="set" scoped="" ref="0x40f0bd78"/>
        <function-ref name="led0On" scoped="" ref="0x40f0be58"/>
        <function-ref name="led2On" scoped="" ref="0x40f0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f14c48" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f14c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f14e20"/>
        <function-ref name="stop" scoped="" ref="0x40f14f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40f0dae0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40f0dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f0dcb8"/>
        <function-ref name="stop" scoped="" ref="0x40f0dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f10af8" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f10af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f10cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f10db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f10e90"/>
        <function-ref name="cancel" scoped="" ref="0x40f4c010"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f4c230" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f4c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4c408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4c4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4c5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4c6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f4c8c8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f4c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4caa0"/>
        <function-ref name="source" scoped="" ref="0x40f4cb80"/>
        <function-ref name="address" scoped="" ref="0x40f4cc60"/>
        <function-ref name="destination" scoped="" ref="0x40f4cd40"/>
        <function-ref name="setSource" scoped="" ref="0x40f4ce20"/>
        <function-ref name="setDestination" scoped="" ref="0x40f4cf00"/>
        <function-ref name="type" scoped="" ref="0x40f4b010"/>
        <function-ref name="setType" scoped="" ref="0x40f4b0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f4b1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f4b2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f4b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f4b4f0" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f4b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f4b6c8"/>
        <function-ref name="noAck" scoped="" ref="0x40f4b7a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f4b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41426010" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41426010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414261e8"/>
        <function-ref name="getPayload" scoped="" ref="0x414262c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414263a8"/>
        <function-ref name="cancel" scoped="" ref="0x41426488"/>
        <function-ref name="sendDone" scoped="" ref="0x41426568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x414266a8" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x414266a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41426880"/>
        <function-ref name="payloadLength" scoped="" ref="0x41426960"/>
        <function-ref name="getPayload" scoped="" ref="0x41426a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41426b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41426c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41426d40" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41426d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41426f18"/>
        <function-ref name="source" scoped="" ref="0x41425010"/>
        <function-ref name="address" scoped="" ref="0x414250f0"/>
        <function-ref name="destination" scoped="" ref="0x414251d0"/>
        <function-ref name="setSource" scoped="" ref="0x414252b0"/>
        <function-ref name="setDestination" scoped="" ref="0x41425390"/>
        <function-ref name="type" scoped="" ref="0x41425470"/>
        <function-ref name="setType" scoped="" ref="0x41425550"/>
        <function-ref name="isForMe" scoped="" ref="0x41425630"/>
        <function-ref name="setGroup" scoped="" ref="0x41425710"/>
        <function-ref name="localGroup" scoped="" ref="0x414257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41425950" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41425950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41425b28"/>
        <function-ref name="noAck" scoped="" ref="0x41425c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x41425ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41422b28" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41422b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41422d00"/>
        <function-ref name="getPayload" scoped="" ref="0x41422de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41422ec0"/>
        <function-ref name="cancel" scoped="" ref="0x4141e010"/>
        <function-ref name="sendDone" scoped="" ref="0x4141e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4141e260" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4141e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4141e438"/>
        <function-ref name="getPayload" scoped="" ref="0x4141e518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4141e5f8"/>
        <function-ref name="cancel" scoped="" ref="0x4141e6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4141e7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4141e8f8" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4141e8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4141ead0"/>
        <function-ref name="source" scoped="" ref="0x4141ebb0"/>
        <function-ref name="address" scoped="" ref="0x4141ec90"/>
        <function-ref name="destination" scoped="" ref="0x4141ed70"/>
        <function-ref name="setSource" scoped="" ref="0x4141ee50"/>
        <function-ref name="setDestination" scoped="" ref="0x41468010"/>
        <function-ref name="type" scoped="" ref="0x414680f0"/>
        <function-ref name="setType" scoped="" ref="0x414681d0"/>
        <function-ref name="isForMe" scoped="" ref="0x414682b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41468390"/>
        <function-ref name="localGroup" scoped="" ref="0x41468470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f49328" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f49328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f49500"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f495e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f496c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f497a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f49880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f49010" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f491e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f499c0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f499c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f49b98"/>
        <function-ref name="source" scoped="" ref="0x40f49c78"/>
        <function-ref name="address" scoped="" ref="0x40f49d58"/>
        <function-ref name="destination" scoped="" ref="0x40f49e38"/>
        <function-ref name="setSource" scoped="" ref="0x40f49f18"/>
        <function-ref name="setDestination" scoped="" ref="0x40f47010"/>
        <function-ref name="type" scoped="" ref="0x40f470f0"/>
        <function-ref name="setType" scoped="" ref="0x40f471d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f472b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f47390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f47470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f46a28" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f46a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f46c00"/>
        <function-ref name="getPayload" scoped="" ref="0x40f46ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f46dc0"/>
        <function-ref name="cancel" scoped="" ref="0x40f46ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f45010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f45150" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f45150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f45328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f45408"/>
        <function-ref name="getPayload" scoped="" ref="0x40f454e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f455c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f456a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f457e8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f457e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f459c0"/>
        <function-ref name="source" scoped="" ref="0x40f45aa0"/>
        <function-ref name="address" scoped="" ref="0x40f45b80"/>
        <function-ref name="destination" scoped="" ref="0x40f45c60"/>
        <function-ref name="setSource" scoped="" ref="0x40f45d40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f45e20"/>
        <function-ref name="type" scoped="" ref="0x40f45f00"/>
        <function-ref name="setType" scoped="" ref="0x40f44010"/>
        <function-ref name="isForMe" scoped="" ref="0x40f440f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f441d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f44410" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f44410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f445e8"/>
        <function-ref name="noAck" scoped="" ref="0x40f446c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f447a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4145ded0" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4145ded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4145a0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4145a1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4145a280"/>
        <function-ref name="cancel" scoped="" ref="0x4145a360"/>
        <function-ref name="sendDone" scoped="" ref="0x4145a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4145a580" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4145a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4145a758"/>
        <function-ref name="payloadLength" scoped="" ref="0x4145a838"/>
        <function-ref name="getPayload" scoped="" ref="0x4145a918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4145a9f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4145aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4145ac18" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4145ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4145adf0"/>
        <function-ref name="source" scoped="" ref="0x4145aed0"/>
        <function-ref name="address" scoped="" ref="0x41458010"/>
        <function-ref name="destination" scoped="" ref="0x414580f0"/>
        <function-ref name="setSource" scoped="" ref="0x414581d0"/>
        <function-ref name="setDestination" scoped="" ref="0x414582b0"/>
        <function-ref name="type" scoped="" ref="0x41458390"/>
        <function-ref name="setType" scoped="" ref="0x41458470"/>
        <function-ref name="isForMe" scoped="" ref="0x41458550"/>
        <function-ref name="setGroup" scoped="" ref="0x41458630"/>
        <function-ref name="localGroup" scoped="" ref="0x41458710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41458870" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41458870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41458a48"/>
        <function-ref name="noAck" scoped="" ref="0x41458b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41458c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41455998" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41455998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41455b70"/>
        <function-ref name="getPayload" scoped="" ref="0x41455c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41455d30"/>
        <function-ref name="cancel" scoped="" ref="0x41455e10"/>
        <function-ref name="sendDone" scoped="" ref="0x41455ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41452080" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41452080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41452258"/>
        <function-ref name="getPayload" scoped="" ref="0x41452338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41452418"/>
        <function-ref name="cancel" scoped="" ref="0x414524f8"/>
        <function-ref name="sendDone" scoped="" ref="0x414525d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41452718" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41452718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x414528f0"/>
        <function-ref name="source" scoped="" ref="0x414529d0"/>
        <function-ref name="address" scoped="" ref="0x41452ab0"/>
        <function-ref name="destination" scoped="" ref="0x41452b90"/>
        <function-ref name="setSource" scoped="" ref="0x41452c70"/>
        <function-ref name="setDestination" scoped="" ref="0x41452d50"/>
        <function-ref name="type" scoped="" ref="0x41452e30"/>
        <function-ref name="setType" scoped="" ref="0x41452f10"/>
        <function-ref name="isForMe" scoped="" ref="0x41451010"/>
        <function-ref name="setGroup" scoped="" ref="0x414510f0"/>
        <function-ref name="localGroup" scoped="" ref="0x414511d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f42328" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f42328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f42500"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f425e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f426c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f427a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f42880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f42010" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f42010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f421e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f429c0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f429c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f42b98"/>
        <function-ref name="source" scoped="" ref="0x40f42c78"/>
        <function-ref name="address" scoped="" ref="0x40f42d58"/>
        <function-ref name="destination" scoped="" ref="0x40f42e38"/>
        <function-ref name="setSource" scoped="" ref="0x40f42f18"/>
        <function-ref name="setDestination" scoped="" ref="0x40f41010"/>
        <function-ref name="type" scoped="" ref="0x40f410f0"/>
        <function-ref name="setType" scoped="" ref="0x40f411d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f412b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f41390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f41470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f40560" loc="35:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f40560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f40738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40f408c8" loc="36:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f408c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f40aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f40b80"/>
        <function-ref name="led1On" scoped="" ref="0x40f40c60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f40d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f40e20"/>
        <function-ref name="get" scoped="" ref="0x40f40f00"/>
        <function-ref name="led1Off" scoped="" ref="0x40f75010"/>
        <function-ref name="led2Off" scoped="" ref="0x40f75390"/>
        <function-ref name="set" scoped="" ref="0x40f750f0"/>
        <function-ref name="led0On" scoped="" ref="0x40f751d0"/>
        <function-ref name="led2On" scoped="" ref="0x40f752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40f69100" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f69100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f692d8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f693b8"/>
        <function-ref name="reset" scoped="" ref="0x40f69498"/>
        <function-ref name="start" scoped="" ref="0x40f69578"/>
        <function-ref name="stop" scoped="" ref="0x40f69658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40fbc118" loc="47:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40fbc118"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40fbc300"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40fbc3e0"/>
        <function-ref name="reset" scoped="" ref="0x40fbc4c0"/>
        <function-ref name="start" scoped="" ref="0x40fbc5a0"/>
        <function-ref name="stop" scoped="" ref="0x40fbc680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x4148c128" loc="54:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x4148c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4148c300"/>
        <function-ref name="clear" scoped="" ref="0x4148c3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4148c4c0"/>
        <function-ref name="get" scoped="" ref="0x4148c5a0"/>
        <function-ref name="assign" scoped="" ref="0x4148c680"/>
        <function-ref name="setAll" scoped="" ref="0x4148c760"/>
        <function-ref name="set" scoped="" ref="0x4148c840"/>
        <function-ref name="size" scoped="" ref="0x4148c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x4148ca80" loc="55:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x4148ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4148cc58"/>
        <function-ref name="clear" scoped="" ref="0x4148cd38"/>
        <function-ref name="toggle" scoped="" ref="0x4148ce18"/>
        <function-ref name="get" scoped="" ref="0x4148cef8"/>
        <function-ref name="assign" scoped="" ref="0x4148b010"/>
        <function-ref name="setAll" scoped="" ref="0x4148b0f0"/>
        <function-ref name="set" scoped="" ref="0x4148b1d0"/>
        <function-ref name="size" scoped="" ref="0x4148b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4148b3f0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4148b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4148b5c8"/>
        <function-ref name="rand32" scoped="" ref="0x4148b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41444780" loc="50:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41444780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41444968"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41444a48"/>
        <function-ref name="reset" scoped="" ref="0x41444b28"/>
        <function-ref name="start" scoped="" ref="0x41444c08"/>
        <function-ref name="stop" scoped="" ref="0x41444ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414443d0" loc="49:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414443d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414445a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x4148a430" loc="146:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x4148a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4148a608"/>
        <function-ref name="runTask" scoped="" ref="0x4148a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4148b7e8" loc="57:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4148b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4148b9c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4148baa0"/>
        <function-ref name="led1On" scoped="" ref="0x4148bb80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4148bc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4148bd40"/>
        <function-ref name="get" scoped="" ref="0x4148be20"/>
        <function-ref name="led1Off" scoped="" ref="0x4148bf00"/>
        <function-ref name="led0On" scoped="" ref="0x4148a2b0"/>
        <function-ref name="set" scoped="" ref="0x4148a0f0"/>
        <function-ref name="led2On" scoped="" ref="0x4148a010"/>
        <function-ref name="led2Off" scoped="" ref="0x4148a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41444ee8" loc="53:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41444ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4148ea18"/>
        <function-ref name="fired" scoped="" ref="0x41443cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4148e3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4148e180"/>
        <function-ref name="getdt" scoped="" ref="0x4148eec8"/>
        <function-ref name="gett0" scoped="" ref="0x4148ec70"/>
        <function-ref name="isRunning" scoped="" ref="0x41443f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41443558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4148e6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x414437d8"/>
        <function-ref name="stop" scoped="" ref="0x41443a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41489e18" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41489e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41487920"/>
        <function-ref name="fired" scoped="" ref="0x41488bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414872e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41487088"/>
        <function-ref name="getdt" scoped="" ref="0x41487dd0"/>
        <function-ref name="gett0" scoped="" ref="0x41487b78"/>
        <function-ref name="isRunning" scoped="" ref="0x41488e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41488468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41487600"/>
        <function-ref name="startOneShot" scoped="" ref="0x414886e8"/>
        <function-ref name="stop" scoped="" ref="0x41488968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41485b08" loc="35:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41485b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41485ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41485e40" loc="36:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41485e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41484050"/>
        <function-ref name="clear" scoped="" ref="0x41484130"/>
        <function-ref name="toggle" scoped="" ref="0x41484210"/>
        <function-ref name="get" scoped="" ref="0x414842f0"/>
        <function-ref name="assign" scoped="" ref="0x414843d0"/>
        <function-ref name="setAll" scoped="" ref="0x414844b0"/>
        <function-ref name="set" scoped="" ref="0x41484590"/>
        <function-ref name="size" scoped="" ref="0x41484670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414832e0" loc="35:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414832e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41483618" loc="36:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41483618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x414837f0"/>
        <function-ref name="clear" scoped="" ref="0x414838d0"/>
        <function-ref name="toggle" scoped="" ref="0x414839b0"/>
        <function-ref name="get" scoped="" ref="0x41483a90"/>
        <function-ref name="assign" scoped="" ref="0x41483b70"/>
        <function-ref name="setAll" scoped="" ref="0x41483c50"/>
        <function-ref name="set" scoped="" ref="0x41483d30"/>
        <function-ref name="size" scoped="" ref="0x41483e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fb95a0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fb95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fb9778"/>
        <function-ref name="stop" scoped="" ref="0x40fb9858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x40fe8228" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x40fe8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x40fe8400"/>
        <function-ref name="reboot" scoped="" ref="0x40fe84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x40fd9e78" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x40fd9e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fdc070"/>
        <function-ref name="write" scoped="" ref="0x40fdc150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x40fd3ed0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x40fd3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x40fd20c0"/>
        <function-ref name="reboot" scoped="" ref="0x40fd21a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x40fd2750" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x40fd2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd2928"/>
        <function-ref name="write" scoped="" ref="0x40fd2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fd2310" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fd2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fd24e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fd1010" loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fd1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fd11e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fd12c8"/>
        <function-ref name="led1On" scoped="" ref="0x40fd13a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fd1488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fd1568"/>
        <function-ref name="get" scoped="" ref="0x40fd1648"/>
        <function-ref name="led1Off" scoped="" ref="0x40fd1728"/>
        <function-ref name="led2Off" scoped="" ref="0x40fd1aa8"/>
        <function-ref name="set" scoped="" ref="0x40fd1808"/>
        <function-ref name="led0On" scoped="" ref="0x40fd18e8"/>
        <function-ref name="led2On" scoped="" ref="0x40fd19c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x40fd2b68" loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40fd2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40fd2d40"/>
        <function-ref name="crc16" scoped="" ref="0x40fd2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x40ff34e8" loc="87:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x40ff34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff36c0"/>
        <function-ref name="runTask" scoped="" ref="0x40ff37a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x40ffe610" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x40ffe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x40ffe7e8"/>
        <function-ref name="reboot" scoped="" ref="0x40ffe8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x40ffe010" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x40ffe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ffe1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ffe2c8"/>
        <function-ref name="start" scoped="" ref="0x40ffe3a8"/>
        <function-ref name="stop" scoped="" ref="0x40ffe488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40fb6350" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40fb6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40fb6528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x40fff3c8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x40fff3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fff5a0"/>
        <function-ref name="stop" scoped="" ref="0x40fff680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x40ffed90" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40ffed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40ffd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x40ff94d8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x40ff94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff96b0"/>
        <function-ref name="readDone" scoped="" ref="0x40ff9790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fb6698" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fb6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fb6870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fb6950"/>
        <function-ref name="led1On" scoped="" ref="0x40fb6a30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fb6b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fb6bf0"/>
        <function-ref name="get" scoped="" ref="0x40fb6cd0"/>
        <function-ref name="led1Off" scoped="" ref="0x40fb6db0"/>
        <function-ref name="led2Off" scoped="" ref="0x410001d0"/>
        <function-ref name="set" scoped="" ref="0x40fb6e90"/>
        <function-ref name="led0On" scoped="" ref="0x41000010"/>
        <function-ref name="led2On" scoped="" ref="0x410000f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40ff8c60" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ff8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ff8e38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ff8f18"/>
        <function-ref name="request" scoped="" ref="0x40ffc010"/>
        <function-ref name="granted" scoped="" ref="0x40ffc0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x410004b8" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x410004b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf4ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf3748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40fff048"/>
        <function-ref name="get" scoped="" ref="0x41000b00"/>
        <function-ref name="set" scoped="" ref="0x41000d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x40ff8810" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x40ff8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x40ff89e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ff8ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x40fff850" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40fff850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fffa28"/>
        <function-ref name="receiveDone" scoped="" ref="0x40fffb08"/>
        <function-ref name="publish" scoped="" ref="0x40fffbe8"/>
        <function-ref name="stop" scoped="" ref="0x40fffcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4101b848" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4101b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41019368"/>
        <function-ref name="fired" scoped="" ref="0x4101a5e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4101acf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4101aa98"/>
        <function-ref name="getdt" scoped="" ref="0x41019818"/>
        <function-ref name="gett0" scoped="" ref="0x410195c0"/>
        <function-ref name="isRunning" scoped="" ref="0x4101a840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4101be70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41019048"/>
        <function-ref name="startOneShot" scoped="" ref="0x4101a110"/>
        <function-ref name="stop" scoped="" ref="0x4101a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41018928" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41018928"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41018b00"/>
        <function-ref name="readDone" scoped="" ref="0x41018be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41010c48" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41010c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41010e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x4100f308" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4100f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4100f4e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4100f5c0"/>
        <function-ref name="computeCrc" scoped="" ref="0x4100f6a0"/>
        <function-ref name="getSize" scoped="" ref="0x4100f780"/>
        <function-ref name="readDone" scoped="" ref="0x4100f860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x4100fd28" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4100fd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4100ff00"/>
        <function-ref name="writeDone" scoped="" ref="0x4100e010"/>
        <function-ref name="erase" scoped="" ref="0x4100e0f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4100e1d0"/>
        <function-ref name="write" scoped="" ref="0x4100e2b0"/>
        <function-ref name="sync" scoped="" ref="0x4100e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x410107f0" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x410107f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410109c8"/>
        <function-ref name="readDone" scoped="" ref="0x41010aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x4100e858" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x4100e858"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x4100ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41014ef8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41014ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410130e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410131c0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410132a0"/>
        <function-ref name="getSize" scoped="" ref="0x41013380"/>
        <function-ref name="readDone" scoped="" ref="0x41013460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410135a0" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410135a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41013778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41013858"/>
        <function-ref name="request" scoped="" ref="0x41013938"/>
        <function-ref name="granted" scoped="" ref="0x41013a18"/>
        <function-ref name="isOwner" scoped="" ref="0x41013af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414991e8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414991e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414993c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41499cf8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41499cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41499ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41498010"/>
        <function-ref name="request" scoped="" ref="0x414980f0"/>
        <function-ref name="granted" scoped="" ref="0x414981d0"/>
        <function-ref name="isOwner" scoped="" ref="0x414982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41026a60" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41026a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41026c38"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41026d18"/>
        <function-ref name="computeCrc" scoped="" ref="0x41026df8"/>
        <function-ref name="getSize" scoped="" ref="0x41026ed8"/>
        <function-ref name="readDone" scoped="" ref="0x41024010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41024150" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41024150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41024328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41024408"/>
        <function-ref name="request" scoped="" ref="0x410244e8"/>
        <function-ref name="granted" scoped="" ref="0x410245c8"/>
        <function-ref name="isOwner" scoped="" ref="0x410246a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41494690" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41494690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41494868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414931b8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414931b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41493390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41493470"/>
        <function-ref name="request" scoped="" ref="0x41493550"/>
        <function-ref name="granted" scoped="" ref="0x41493630"/>
        <function-ref name="isOwner" scoped="" ref="0x41493710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4105e6a0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4105e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4105e878"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4105e958"/>
        <function-ref name="computeCrc" scoped="" ref="0x4105ea38"/>
        <function-ref name="getSize" scoped="" ref="0x4105eb18"/>
        <function-ref name="readDone" scoped="" ref="0x4105ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4105ed38" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4105ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4105ef10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105d010"/>
        <function-ref name="request" scoped="" ref="0x4105d0f0"/>
        <function-ref name="granted" scoped="" ref="0x4105d1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4105d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4148fab8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4148fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4148fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414da6d8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414da6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414da8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414da990"/>
        <function-ref name="request" scoped="" ref="0x414daa70"/>
        <function-ref name="granted" scoped="" ref="0x414dab50"/>
        <function-ref name="isOwner" scoped="" ref="0x414dac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4105c230" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4105c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4105c408"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4105c4e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x4105c5c8"/>
        <function-ref name="getSize" scoped="" ref="0x4105c6a8"/>
        <function-ref name="readDone" scoped="" ref="0x4105c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4105c8c8" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4105c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4105caa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105cb80"/>
        <function-ref name="request" scoped="" ref="0x4105cc60"/>
        <function-ref name="granted" scoped="" ref="0x4105cd40"/>
        <function-ref name="isOwner" scoped="" ref="0x4105ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414d5010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414d5b20" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414d5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414d5cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414d5dd8"/>
        <function-ref name="request" scoped="" ref="0x414d5eb8"/>
        <function-ref name="granted" scoped="" ref="0x414d4010"/>
        <function-ref name="isOwner" scoped="" ref="0x414d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4105ae80" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4105ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41059070"/>
        <function-ref name="writeDone" scoped="" ref="0x41059150"/>
        <function-ref name="erase" scoped="" ref="0x41059230"/>
        <function-ref name="eraseDone" scoped="" ref="0x41059310"/>
        <function-ref name="write" scoped="" ref="0x410593f0"/>
        <function-ref name="sync" scoped="" ref="0x410594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41059610" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41059610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410597e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410598c8"/>
        <function-ref name="request" scoped="" ref="0x410599a8"/>
        <function-ref name="granted" scoped="" ref="0x41059a88"/>
        <function-ref name="isOwner" scoped="" ref="0x41059b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414d04a0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414d04a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d0678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414ce010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414ce1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414ce2c8"/>
        <function-ref name="request" scoped="" ref="0x414ce3a8"/>
        <function-ref name="granted" scoped="" ref="0x414ce488"/>
        <function-ref name="isOwner" scoped="" ref="0x414ce568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41058b08" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41058b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41058ce0"/>
        <function-ref name="writeDone" scoped="" ref="0x41058dc0"/>
        <function-ref name="erase" scoped="" ref="0x41058ea0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41057010"/>
        <function-ref name="write" scoped="" ref="0x410570f0"/>
        <function-ref name="sync" scoped="" ref="0x410571d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41057310" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41057310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410574e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410575c8"/>
        <function-ref name="request" scoped="" ref="0x410576a8"/>
        <function-ref name="granted" scoped="" ref="0x41057788"/>
        <function-ref name="isOwner" scoped="" ref="0x41057868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414caa08" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414caa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414cabe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414c9538" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414c9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414c9710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414c97f0"/>
        <function-ref name="request" scoped="" ref="0x414c98d0"/>
        <function-ref name="granted" scoped="" ref="0x414c99b0"/>
        <function-ref name="isOwner" scoped="" ref="0x414c9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410567f8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410567f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410569d0"/>
        <function-ref name="writeDone" scoped="" ref="0x41056ab0"/>
        <function-ref name="erase" scoped="" ref="0x41056b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x41056c70"/>
        <function-ref name="write" scoped="" ref="0x41056d50"/>
        <function-ref name="sync" scoped="" ref="0x41056e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41055010" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41055010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410551e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410552c8"/>
        <function-ref name="request" scoped="" ref="0x410553a8"/>
        <function-ref name="granted" scoped="" ref="0x41055488"/>
        <function-ref name="isOwner" scoped="" ref="0x41055568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414c4010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414c41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414c4b20" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414c4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414c4cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414c4dd8"/>
        <function-ref name="request" scoped="" ref="0x414c4eb8"/>
        <function-ref name="granted" scoped="" ref="0x414c3010"/>
        <function-ref name="isOwner" scoped="" ref="0x414c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41054520" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41054520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410546f8"/>
        <function-ref name="writeDone" scoped="" ref="0x410547d8"/>
        <function-ref name="erase" scoped="" ref="0x410548b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41054998"/>
        <function-ref name="write" scoped="" ref="0x41054a78"/>
        <function-ref name="sync" scoped="" ref="0x41054b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41054c98" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41054c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41054e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41053010"/>
        <function-ref name="request" scoped="" ref="0x410530f0"/>
        <function-ref name="granted" scoped="" ref="0x410531d0"/>
        <function-ref name="isOwner" scoped="" ref="0x410532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414be5f0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414be5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414bd148" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414bd148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414bd320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414bd400"/>
        <function-ref name="request" scoped="" ref="0x414bd4e0"/>
        <function-ref name="granted" scoped="" ref="0x414bd5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x414bd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x410509d8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x410509d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41050bb0"/>
        <function-ref name="readDone" scoped="" ref="0x41050c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4106ba48" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4106ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4106bc20"/>
        <function-ref name="eraseDone" scoped="" ref="0x4106bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4104acc0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4104acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4104ae98"/>
        <function-ref name="eraseDone" scoped="" ref="0x41047010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x410442e8" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410442e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410444c0"/>
        <function-ref name="writeDone" scoped="" ref="0x410445a0"/>
        <function-ref name="erase" scoped="" ref="0x41044680"/>
        <function-ref name="eraseDone" scoped="" ref="0x41044760"/>
        <function-ref name="write" scoped="" ref="0x41044840"/>
        <function-ref name="sync" scoped="" ref="0x41044920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41044dd8" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41044dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41043010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410430f0"/>
        <function-ref name="request" scoped="" ref="0x410431d0"/>
        <function-ref name="granted" scoped="" ref="0x410432b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41043390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41047b00" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41047b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41047cd8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41047db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410465c0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410465c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41046798"/>
        <function-ref name="writeDone" scoped="" ref="0x41046878"/>
        <function-ref name="erase" scoped="" ref="0x41046958"/>
        <function-ref name="eraseDone" scoped="" ref="0x41046a38"/>
        <function-ref name="write" scoped="" ref="0x41046b18"/>
        <function-ref name="sync" scoped="" ref="0x41046bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41046d38" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41046d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41046f10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41045010"/>
        <function-ref name="request" scoped="" ref="0x410450f0"/>
        <function-ref name="granted" scoped="" ref="0x410451d0"/>
        <function-ref name="isOwner" scoped="" ref="0x410452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414b6bf8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414b6bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414b6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41502720" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41502720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x415028f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x415029d8"/>
        <function-ref name="request" scoped="" ref="0x41502ab8"/>
        <function-ref name="granted" scoped="" ref="0x41502b98"/>
        <function-ref name="isOwner" scoped="" ref="0x41502c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41071250" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41071250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41071428"/>
        <function-ref name="writeDone" scoped="" ref="0x41071508"/>
        <function-ref name="erase" scoped="" ref="0x410715e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x410716c8"/>
        <function-ref name="write" scoped="" ref="0x410717a8"/>
        <function-ref name="sync" scoped="" ref="0x41071888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410719c8" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410719c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41071ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41071c80"/>
        <function-ref name="request" scoped="" ref="0x41071d60"/>
        <function-ref name="granted" scoped="" ref="0x41071e40"/>
        <function-ref name="isOwner" scoped="" ref="0x41071f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414fd010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414fd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414fdb20" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414fdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414fdcf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414fddd8"/>
        <function-ref name="request" scoped="" ref="0x414fdeb8"/>
        <function-ref name="granted" scoped="" ref="0x414fc010"/>
        <function-ref name="isOwner" scoped="" ref="0x414fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4106feb8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4106feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4106e0c0"/>
        <function-ref name="writeDone" scoped="" ref="0x4106e1a0"/>
        <function-ref name="erase" scoped="" ref="0x4106e280"/>
        <function-ref name="eraseDone" scoped="" ref="0x4106e360"/>
        <function-ref name="write" scoped="" ref="0x4106e440"/>
        <function-ref name="sync" scoped="" ref="0x4106e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4106e660" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4106e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4106e838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4106e918"/>
        <function-ref name="request" scoped="" ref="0x4106e9f8"/>
        <function-ref name="granted" scoped="" ref="0x4106ead8"/>
        <function-ref name="isOwner" scoped="" ref="0x4106ebb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414f7438" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414f7438"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414f7610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414f6010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414f61e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414f62c8"/>
        <function-ref name="request" scoped="" ref="0x414f63a8"/>
        <function-ref name="granted" scoped="" ref="0x414f6488"/>
        <function-ref name="isOwner" scoped="" ref="0x414f6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4104c818" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4104c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4104c9f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4104cad0"/>
        <function-ref name="request" scoped="" ref="0x4104cbb0"/>
        <function-ref name="granted" scoped="" ref="0x4104cc90"/>
        <function-ref name="isOwner" scoped="" ref="0x4104cd70"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403aaa68" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403a4e10" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403ad508" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403ad3b0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403a8b48" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403ae1c0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403ae068" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403ae888" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403ae730" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403aede0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403be308" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403be6f0" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403b7b68" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403beec0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403b7f28" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403beac8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b7428" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403b77b8" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402fc390" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402fcc98" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402fc7d0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fdb68" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40302090" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40385138" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40394b28" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4033bd78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40390680" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404ab010" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404ab458" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404ab8d8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404aa158" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404aae48" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404a8318" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404abd00" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404a8a58" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404a8900" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404adba0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404aa5d8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404aaa00" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404c6e08" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404c6e08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404cd550" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404d03d8" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404cf530" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404cf1e8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404cf3d0" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404d0d28" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404cdec8" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404cd998" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404d0868" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404c3480" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404c3328" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404cff18" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404cfbd0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404cfdb8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404c3b18" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404c39c0" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404d0010" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40526d58" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40526c00" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40524ae0" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40524988" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40526518" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405242a8" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x40513688" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40513530" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40512088" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40513f00" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4050f208" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40511e88" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4050f088" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405118a0" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40512ce8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405129a8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40512b88" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4051f230" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404d7cb8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404d7ed0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4051f0c8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40529dd0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40529a70" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40529c50" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40529510" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4051fed0" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051fd78" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4051dbf8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051d8a0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4051da98" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4050ea40" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
              <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050e4f8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4050e6d8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4050e8b8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40522310" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405221b8" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4051bcb0" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051bb58" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404cabf0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4051b2b0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051b158" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4051a5a0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051a238" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4051a440" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405198a8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40519540" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40519748" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40517ca0" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40517b48" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40515808" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405154d8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x405156a8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40517168" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40517010" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40521010" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40522c30" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40522e30" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40521888" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405458d8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405458d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40545db8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405573c8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405573c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40557530" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40557530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40557a18" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40557530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40556510" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40556010" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40556938" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4054d3b8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054d3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054d520" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4054b810" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4054c4d0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4054b1c8" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4054ce48" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          </variable>
          <variable name="dt" ref="0x4054b068" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4054c940" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4054bca0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4054db50" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4054d9f8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054d520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4054c070" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4056aa40" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4056a010" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4056fba8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4056a5d0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4056a478" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4056bb00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4056b9a8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40579020" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4056aeb0" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4056b010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4056b588" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4056b430" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x405806b8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x405813d8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x40581800" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x40581ce0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40580b78" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x405801d8" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405748e0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40366d68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40365010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40574ed8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40366d68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40365010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40574d80" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40366d68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40365010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40578010" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40576f20" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40578ed0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40578508" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405762f8" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40575398" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40578a90" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40578938" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40578010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40576700" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40576af8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40567c70" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40567c70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405714f0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40563c38" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405641a8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40567c70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40571a80" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40571928" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40571f10" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40563010" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40564b50" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405710c8" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40564720" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40567c70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405645c8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40567c70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40563418" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40563810" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40646bd0" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40646bd0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40646d38" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40646d38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40659010" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40646d38"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40647df8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40659aa8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40659950" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40647400" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406472a8" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40657588" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40646d38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40657218" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40657428" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40646d38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40641698" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40641320" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40641538" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4064e880" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064e4e8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4064e720" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4064d350" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064d1f8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4064e010" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x406408f0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40640798" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40642f28" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40642dd0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4063da30" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063d8d8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4063c4e0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063c388" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40649380" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40649228" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4064b780" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064b3e8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4064b620" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4064aa20" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064a8c8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4064a3a8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064a010" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4064a248" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40649ca0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40649b48" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4065d9e8" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4065d9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4065ccc8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065cb70" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4065c6a8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4065d9e8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065c550" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4065c088" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065df08" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4065b4c0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4065d9e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065b148" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4065b360" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4065d9e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40660b08" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40660628" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406604d0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4065d038" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4067d1a8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4067e878" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4067e278" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4067ed28" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4067d8a0" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x4067a790" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067a638" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40671b80" loc="26:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4067a1c0" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067a068" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406797b0" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40679410" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40679650" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40679010" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067abc0" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4067ae00" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x406782e0" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40673320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40678188" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40678a50" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40673320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406786c0" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406788f0" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40673320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40679d20" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40679bc8" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40678e90" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40673320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x4066f490" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40673ee0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40673640"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4066f148" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4066f328" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406807f0" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40680490" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40680670" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4066eee0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4066fe20" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4066fcc8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4066e8e8" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4066e590" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4066e788" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40697a28" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x406a8678" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x406a9598" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x40696320" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x406969e8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40696890" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x406a8be8" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x406a9ba8" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x406a9088" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40696f08" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x406a8138" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x406b3b28" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b39d0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x406b2948" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b27f0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406b4da8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b4c50" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406b4010" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a0e40" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406b3560" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b31f8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406b3400" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406b47d8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b4470" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406b4678" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406b2370" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b2010" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406b2210" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x406a3210" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x406a3818" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x406a2eb0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a2d58" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x406a2010" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a3e08" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x406a2708" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a25b0" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x406b6f10" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x406b66b0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x406b6558" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406b6af8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x406b6038" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x406b53d8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x406c7548" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c73f0" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x406cab30" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ca9d8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406c8888" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x406c83c8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c8068" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406c8268" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x406ca438" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ca2e0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x406c8f08" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c8db0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4068e7e0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4068e2e0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068e188" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4068eec0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068ed68" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x4068d418" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x4068db48" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068d9f0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4068f690" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068f538" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x4069b010" loc="75:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x4069cac0" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4069c748" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4069c960" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4069fab0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069f958" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x4069d188" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069d030" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x4069dac0" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4069d748" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4069d960" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40690b58" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4069f3f0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069f0c8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4069f290" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4069c200" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069c0a8" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x406bc058" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bded0" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x406b8200" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b80a8" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x406ae190" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a6e20" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x406ae030" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x406ad580" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ad428" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x406bd220" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bd0c8" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x406aee98" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aed40" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x406bda18" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bd6d8" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x406bd8b8" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x406ab510" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406ab198" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406ab3b0" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x406b94a8" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b9148" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406b9348" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x406bbc98" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bbb40" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x406ae7f8" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ae6a0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x406abe18" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406abaa0" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406abcb8" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x406aa4e8" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aa390" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x406b9ad0" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b9978" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x406adc30" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406adad8" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x406bfbf0" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bf8a0" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x406bfa90" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x406bb670" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bb310" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406bb510" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x406bc840" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bc4f0" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x406bc6e0" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x406aacf0" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aa9c8" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406aab90" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x406a6968" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a6810" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x406bce70" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bcd18" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x406bf3b8" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bf260" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40698228" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069ae88" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x406980c8" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x406986c0" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4069a370" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069a218" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x4069a9b8" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069a860" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x406a5700" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a55a8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x406a5020" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068ceb8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x406a5bf8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x406a42e0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a4188" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4070ace8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x407062d8" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40706918" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4070a8c0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x4071e570" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071e418" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4071a620" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071a4c8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4071eee0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071eb88" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4071ed80" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4071d5d8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
              <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071d460" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40724090" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40724900" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40724500" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40728b80" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40728818" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40728a20" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4077fc50" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4077c2c8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4077ef20" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4077ea60" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4077b5a8" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4077baa8" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4078b820" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4078b6c8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4078c4a8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4078cb68" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4078ca10" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4078b138" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40777200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40841800" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
              <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40841688" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40841010" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4082ae88" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408365c0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40836468" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40836a40" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4083cac0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083c968" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40836058" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083cec8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x4083a440" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083a2e8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40839168" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40839010" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x4083ab28" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083a9d0" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40839838" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408396e0" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x4083dd60" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4083dc08" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408b3e70" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408af908" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408ae010" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408afdf8" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408ae480" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408af410" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408ae9c0" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408b2a38" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b28e0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408ac6f8" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408ac1e0" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408ac088" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408f07e0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408f0688" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408f01a8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x408f8e98" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408f89f0" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x408fae40" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408fae40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4091b4c8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408fae40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4091b370" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408fae40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40923ef8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923da0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40926bc8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40926a70" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x409233a8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923068" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40923248" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40923968" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923810" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409a4670" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409a4670"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409a47d8" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a47d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x409a4df0" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a47d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409a4c98" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a47d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409a7e00" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409a27c8" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409a2380" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409a2228" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x409a78f8" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x409a6278" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409a6120" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x409a6e60" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409a6d08" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x409a6788" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409a5518" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409a53c0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40a28098" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a28098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40a25bc0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40a25a68" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40a251d8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a28590" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a28098"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a27168" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a28098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a27010" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a28098"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40a275a8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40a25638" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a28b08" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a28098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a289b0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a28098"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40a279b0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a27da8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a3aba8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a3a638" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a3a850" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a3aa40" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a39298" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a38ac0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a38cd8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a38ec8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a39128" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40a3b168" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40a3b010" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40a50c40" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a49308" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a4c4b0" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a498f0" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a49798" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a507f0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a4b420" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a4b2c8" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a4d6d0" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a4d578" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a4e4f8" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a47a10" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a478b8" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a4db28" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a482c0" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a48168" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a48b48" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a4beb0" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a4bd58" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a47480" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a4ca40" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a4c8e8" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a4ea90" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a4e938" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a4c090" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a4df20" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a4b8d0" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a49d18" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a486d0" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a47010" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a4ce78" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a4e090" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a4d088" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a4ef00" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a7f7c0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a7fca8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40ab4710" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40ab3c10" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40ab8e40" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40ad8650" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40ad81e0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40ad8088" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40ab3228" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ab30d0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40ad8c18" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40ad8ac0" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40ab42e8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40ab37a0" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ab3648" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40ab4c88" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ab4b30" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40bc5770" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc5430" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40bc5610" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40bc1370" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc1010" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40bc11f0" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40bc2a90" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40bc33f8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc32a0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40bc2170" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc3d38" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40bc2010" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x40c2ebb8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2e678" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c2e830" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c2ea50" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40c2d930" loc="95:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2d1a8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40c2d3c8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40c2d5c8" loc="96:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c2d7c0" loc="96:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40c2bb78" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2b5f0" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40c2b810" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40c2ba10" loc="84:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x40c2de88" loc="103:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40c2cca8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2c558" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c2c710" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c2c930" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c2cb38" loc="68:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008/06/04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x40c24398" loc="112:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c24240" loc="112:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40c278b8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c27168" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c27320" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c27540" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c27748" loc="72:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40c261c8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40c26818" loc="91:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c266c0" loc="91:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40c28758" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c28218" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c283d0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c285f0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0b810"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40c26ca0" loc="103:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x40c09e00" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c16010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c09838" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40c09a90" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c16010"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40c09c98" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40c08360" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c08208" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x40c093d8" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c16010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c0dde8" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40c09068" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c16010"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40c09270" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c08728" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40c402a8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x40c43758" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x40c43600" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x40c41168" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c41010" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x40c41958" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c16528"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c415b8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x40c417f8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c16528"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x40c41ec8" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x40c41d70" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x40c43b68" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x40c43170" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c16528"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c46d48" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c17a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x40c43010" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c16528"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="33:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x40c3e378" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x40c3fe60" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c3e030" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c3e210" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x40c3f540" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40c3f200" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c3f3e0" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="28:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x40c7c868" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40c7c088" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x40c7c2b8" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x40c7c4e8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c7c6f8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x40c79010" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40c7a998" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40c7abb8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c7adc8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x40c7a470" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40c7ce90" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40c7a0e8" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c7a308" loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x40d1a518" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0b1f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008/01/25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x40d167c0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40d16668" loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0b588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x40d38010" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x40d3ba40" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x40d3b8e8" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="52:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40d86cb0" loc="162:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d86b58" loc="162:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40d88520" loc="125:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d883c8" loc="125:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40d87628" loc="143:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="139:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d874d0" loc="143:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40d86520" loc="155:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d87ab8" loc="155:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40d87d18" loc="155:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d86180" loc="156:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40d863b0" loc="156:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40d5c3f8" loc="69:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d5c2a0" loc="69:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x40d5cc20" loc="80:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x40d5c8c8" loc="80:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x40d5cac0" loc="80:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40d5bb50" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d5b7d0" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x40d5b9f0" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40d89398" loc="105:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d89240" loc="105:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40d833d8" loc="183:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d83088" loc="183:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40d83278" loc="183:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40d88b08" loc="133:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d889b0" loc="133:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x40d89e98" loc="120:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x40d87038" loc="138:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40d5dcd8" loc="62:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d5d290" loc="62:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40d5d4f0" loc="62:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d5d938" loc="63:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40d5db68" loc="63:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40d89968" loc="114:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="107:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d89810" loc="114:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40d849c8" loc="176:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="164:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d841a0" loc="176:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40d84400" loc="176:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40d84640" loc="177:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40d84858" loc="177:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x40d5b350" loc="85:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d5b1f8" loc="85:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x40d7e528" loc="50:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x40d80450" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x40d80010" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x40d808d0" loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x40d7eb78" loc="58:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d7ea20" loc="58:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x40d7e010" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d80de8" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40dc2eb0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40dbf8f0" loc="73:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40dc2980" loc="46:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40dbf418" loc="65:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40dbfec8" loc="81:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40de3b68" loc="141:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x40deba08" loc="41:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x40de12c8" loc="163:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x40de1170" loc="163:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40de8a70" loc="79:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40de3578" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de4880" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de4a90" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de4cf0" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40de31d0" loc="135:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40de3400" loc="135:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40de7eb8" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de7b48" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de7d58" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40de0a38" loc="185:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x40deb5e8" loc="35:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x40de9058" loc="47:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x40debee0" loc="47:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40de6390" loc="106:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x40deb0c8" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40de84c0" loc="73:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de8150" loc="73:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de8360" loc="73:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40de03d8" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de16e8" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de18f8" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de1b58" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40de0030" loc="179:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40de0260" loc="179:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x40de7710" loc="93:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x40de7218" loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de8e90" loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de70b8" loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x40de2a50" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de2010" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de2220" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de2480" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40de26c0" loc="158:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40de28d8" loc="158:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x40de4280" loc="119:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de67d0" loc="119:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de6a30" loc="119:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c06b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40de6ee8" loc="120:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40de4110" loc="120:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x40de9cf8" loc="61:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x40de9830" loc="55:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de94c0" loc="55:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de96d0" loc="55:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c068d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x40e50f18" loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x40e505e8" loc="31:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x40e50a88" loc="35:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x40e4f3d0" loc="47:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
          <long>&#10; Assert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x40e4f7d8" loc="52:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f06960" loc="40:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f06960"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x40f01168" loc="52:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f06960"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f01010" loc="52:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f06960"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f073d0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f073d0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x40f033c8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40f07878" loc="47:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f073d0"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40f07eb8" loc="56:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f073d0"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40f07d60" loc="56:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f073d0"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x40ef9e80" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40ef9d08" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x40ef7a60" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ef7500" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40ef76f0" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x40ef78f8" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x40ef6258" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x40ef9538" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x40ef7e88" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x40ef9900" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40efe6f0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40efebb8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x40f110f8" loc="82:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x40f12cd8" loc="77:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40f12830" loc="72:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40f16f20" loc="60:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40f12428" loc="66:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x40f5ded8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40f91428" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f912d0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40f919e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f91890" loc="64:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40f928a0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f92748" loc="46:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x40f8f1c8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f91e50" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40f8f068" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40f922f0" loc="39:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40f92e50" loc="52:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f92cf8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f8f648" loc="77:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x40fe9ef8" loc="53:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x40fe9da0" loc="53:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x40fe9870" loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="35:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40fda8d0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fda3b0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40fda568" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40fda768" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40fd9788" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fd9268" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40fd9420" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40fd9620" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40ffd9b8" loc="12:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ffd860" loc="12:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40ff9370" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x40bf9728"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x40bf6e58"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ffdd98" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x40ff9010" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x40bf9728"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x40bf6e58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ff9208" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x40ff8168" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ff8010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40ff86a8" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ff8550" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
