<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="21:ProximityAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403a5878"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403aa188"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403aa188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4048d2b8"/></to>
    </wire>
    <wire loc="22:ProximityAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403a5be0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b44b0"/></to>
    </wire>
    <wire loc="23:ProximityAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x404cc270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404c7b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x404c7b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:ProximityAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4050fce8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40baa918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40baa918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41319230"/></to>
    </wire>
    <wire loc="25:ProximityAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40521a98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c02010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c02010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413198c8"/></to>
    </wire>
    <wire loc="26:ProximityAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x40524dc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406356e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406356e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40656e90"/></to>
    </wire>
    <wire loc="27:ProximityAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4051c7d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40baa280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40baa280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4131cb18"/></to>
    </wire>
    <wire loc="28:ProximityAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405258e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bff758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40bff758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406329d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fd3310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414453d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413dd238"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413c1430"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dc2558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412c2700"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40996c38"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4091d540"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x408ac4c0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40848298"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40840438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41273f00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4053c668"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4048d650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402fced8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402fced8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40381df8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a2c0b0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409965d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403acee8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403acee8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403b5168"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049c030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e5aa38"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b13480"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ad760"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4048a880"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403b5950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4048a4d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403b5548"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bc7c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403b5548"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403bbc10"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403bbc10"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403bab98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403ba010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403c00e0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403c24b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403c24b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040d988"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403c0ad0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403ba010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403e1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40463880"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403d2d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40428a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40428a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41156010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403d52f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404357d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404357d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115a228"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403da4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40439030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40439030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a3c08"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403c18e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040cc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41081010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403db0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043bd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a67f8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40412dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40412dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410d3de8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403cc4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041c9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041c9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41110d70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403d0c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40426790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40426790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41151010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403dd210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404334f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404334f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411950b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403c4590"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40410cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40410cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4108a9e8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403c8c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cbc08"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403d42f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40424790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40424790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110bc08"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403d8a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4114c010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403e22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40438c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40438c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119ea88"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403df830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404660b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403d7ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115ede0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040d988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410859e8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403c6b18"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404177d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404177d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c6a88"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403e03d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404600b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403cd010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4041d6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4041d6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41113938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403d1750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40427410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40427410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411559e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403d5ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40434170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40434170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41199c08"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403daea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40439988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40439988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a16c0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403ca2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404156b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404156b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410809e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403c9750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40411790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40411790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410ce7f8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403ccea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4041b410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4041b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110e7f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403d9670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40425170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40425170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411509e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403ddc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40433e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40433e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41194a88"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403c3010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040e6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040e6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41088538"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403c7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404194f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404194f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c96c0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403d4ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40423170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40423170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411096c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403e2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404366b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404366b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119b538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403d2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40428128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40428128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41158538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403d68e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4042be48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4042be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115c7f8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403dba98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a4228"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403e82f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40470880"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403c2ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41083538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403ce590"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40416170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40416170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c4538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403dc670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043b3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043b3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411abde8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403cda08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4041c090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4041c090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411113b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403d0210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40427d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40427d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41153538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403de750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40434ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40434ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411976c0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403e38e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40438330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40438330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4119f0b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403b9af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404103a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404103a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4108c010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403c8210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410cc228"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403cb8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041bd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4110c228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403d80a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40425ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40425ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4114e538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403e0dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40469880"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403d74b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042cb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042cb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115f418"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403d3750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40423ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40423ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411070b0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403c3a08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040d030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040d030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41086010"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403c6120"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40419e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40419e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410c70b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40380670"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40385310"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402f7c28"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40394e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405ad7b8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404bc7c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b4168"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404b3240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404be978"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404be978"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403c3010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404b3c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404bd3e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404bd3e0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403c4590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404b2660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404bdde8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404bdde8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403b9af0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4053ce18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4053ce18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405fdea8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4053c668"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405434d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40546e30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4062b940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405434d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40555bb8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40630220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40551f08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40601248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4054ccb8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4054ccb8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405e6010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4062a360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40557658"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40557658"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405e5a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x405e5a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x412350c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40555bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41237200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x405e6010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41237638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41233300"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4059a010"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4059a010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a4ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x412314e0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405a7360"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405a7360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405af1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41231ec8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405a7e80"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405a7e80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405afcc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4122e9a8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405a59b8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405a59b8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405adc18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40600bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4062d4b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40656e90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406651b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4064a1a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40669578"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40669578"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40683840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40642880"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40652e68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40652e68"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406761b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40632010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40653780"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40653780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40665a88"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40645100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406527f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406527f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40664b10"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406511d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406511d0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40675290"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4064c1b8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40650b38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40650b38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4067d2e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406329d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40652158"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40652158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40664478"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406505b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406505b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40680d30"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40649b68"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406621b8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406621b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4067d900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406518c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406518c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40676520"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406467c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4066cba8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4066cba8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40686e40"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406651b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4082bc68"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4065bbd8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40689f08"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40689f08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x409844d8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406761b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40721b88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40675290"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4070da50"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40665a88"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40722470"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40664b10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40721510"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4065e7f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4068aae8"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4068aae8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409850f0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4067d2e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408634a0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40664478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40722e30"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40686e40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40950af8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4066c010"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x406862a8"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406862a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097e030"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4065c3e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4068b730"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4068b730"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40981c70"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40680d30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e3de8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4067d900"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4087bc28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40676520"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406f9dc8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4065fbb8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4068b040"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4068b040"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408987e0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40683840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40951100"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4082bc68"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40863bb0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409844d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40991390"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x406740c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x407a8960"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4067e820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4076a570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4076a570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4126f258"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40721b88"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4072cb88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40722470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4072d470"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40721510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4072c510"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x406799c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407f0db8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407f0db8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407e8718"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40680538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407ac6b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408634a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40879238"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409850f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40993010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40722e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4072de30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4070da50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40718a50"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40950af8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40966100"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097e030"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a31c30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40981c70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4098fba8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e3de8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4092b8a8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40681458"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x407acdc0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4087bc28"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40871b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406f9dc8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4071fdb0"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40681be8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x407a85c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x408987e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408ab210"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40951100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4096b690"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406bac68"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407c06a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407c06a0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407e9010"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x406b7e20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40692c00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x406b89d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40950af8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x406b8010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409866f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409866f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40994610"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4071a770"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x406b2428"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4071b370"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4075e1c8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4071a338"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x407d8600"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40720010"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x407d8a28"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4075ebc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4076a570"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4075e6f0"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x407d8010"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a8d80"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407c06a0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x407a6558"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407f0db8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407bf848"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x407c2ce8"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407bfe18"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x407d9350"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407bf010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x407d9780"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407d7340"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4082d7c8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4082d7c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40829a60"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407d7910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40864890"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40864890"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408628c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407d7d18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407ef8c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x407ef8c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x407e71c0"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407ed1a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40864c18"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40864c18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40862cc8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4082aea8"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40699198"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4082a3f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408642e0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408642e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408622f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40863bb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4089b818"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4089b818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408b3de0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408622f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4087b6e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4087b6e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40871620"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408628c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40898448"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40898448"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408ace30"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40862cc8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40873380"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40873380"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4086e2a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40872a98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e3de8"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40873bf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4089be78"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4089be78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408ac880"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40872240"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4094d2a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4094d2a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40965828"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408aee28"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408eddc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408eddc0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x408e9cc8"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408b33d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40828e98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40828e98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40840010"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408b0ed8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408ed648"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x408ed648"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408e94b0"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4082a9d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408eb310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408eb310"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x408e8250"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408e7250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x406b13a0"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x408e9cc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408e5ca8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408e5ca8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408fc010"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0x408e8250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408e22b0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408e22b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408fc568"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x408e94b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40987040"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40987040"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40995010"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408ff368"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x406a6e28"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408e27c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408e33b8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408e33b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40910e40"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408e2da0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408e3910"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408e3910"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4092b3d0"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40911f10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4069dab0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40911428"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4095b5f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x4095b5f0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x409574f0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40911a08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40987d70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40987d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40995d40"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409569e8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x406b13a0"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x409574f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40987818"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40987818"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409957e8"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40957e00"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40986288"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40986288"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409941a8"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4094dc50"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097e030"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4096c5e8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4092ea18"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4092d370"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409866f0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097e9e8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x4068e738"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4097d3a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40950af8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40692c00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x406fc970"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406fe7c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a320e0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406f7260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406fe7c8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40707518"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x406fb898"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40725480"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40719670"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4072b010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40720010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4072b848"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4071b370"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4072be18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4071a338"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4072a270"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4071a770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4076acb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4126f998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407ad150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4126fda0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4126e2f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407ad600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4126e720"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41270250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4126ed18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407e7a58"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40719670"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40800150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407ed1a0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4083bed0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408426a8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408426a8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40848630"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40838f10"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408491b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408491b0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40845100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40840860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4082a3f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40840e40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4082a9d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4083f2f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4082aea8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4086eb18"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40873bf8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40889140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40872a98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40886ae0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40872240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x408897a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4089f428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4089f428"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x40885d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408ab7a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408b0ed8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408aa010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x406fb898"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408aa628"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408aee28"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408aab80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408b33d0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x408be108"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x408b83c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x408c7938"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408da798"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408ea698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408eb708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408e8668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408dad70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408eac70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408ebb00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408e8a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408ea330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408e7250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408ed330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408e9178"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408fca78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408e27c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408f7d80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408ff368"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408fa098"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408e2da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408fa4f8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40692c00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x408f7850"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409008d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409008d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4091a350"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x408f6de8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40900010"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4091da60"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408fed30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4091d540"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4092be98"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40911428"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409294c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40911a08"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40928110"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40911f10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40929928"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40692c00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40924720"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092c3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x4092c3b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092e3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4095c040"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4095ade0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4095bec0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40957e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x4095ce28"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40958c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4095c618"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40958410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4095a2e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40956250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x4095aa78"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409569e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4095bac8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x409579e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4095cb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40958908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40962d48"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4096c5e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40963908"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4094dc50"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40962400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4096ad70"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4096ad70"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40546e30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40963170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4096d6b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x4096d6b8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092e3f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409828a8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40990800"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a31c30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b5f570"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409a6d78"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4097e9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409a1608"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b81e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b81e00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092e3f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x409a1ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b7c3e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b7c3e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092e3f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x409a0418"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b7ba30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b7ba30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4092e3f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409a0c20"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x4097d3a0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409a6410"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a31c30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4099ea08"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40692c00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a320e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b1bc88"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x4098de48"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40a16bc0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a16bc0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409ac898"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a13698"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a13698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a37da0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409a7ef8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a13da0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a13da0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a3e040"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409aa580"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a344b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a344b0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403ce590"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409a9010"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a34e98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a34e98"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403c18e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409a3108"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a338d0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a338d0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a2fa10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4099e2e8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x406fb898"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409a2930"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b80010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b1bc88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x412f8db0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a3e040"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a366f8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b5f570"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b86f18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a2a598"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403d80a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a25010"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403d0c08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a266f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40ab8968"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ab8968"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40ace0f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a37650"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a36d10"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a3fc78"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a36370"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a3f010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a36010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a37da0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a35488"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a57158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac3b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ac3b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412c1a50"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a57860"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac26d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac26d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412c05f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a484d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a38e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a38e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a821c8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a57ce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403908f8"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a7b1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40aa0898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403908f8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a80010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a809e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403c9750"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a7f4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403c8210"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a7fe88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403c8c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ac22c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x412c01e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x412c0ab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac2b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x412c0ed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x412c2a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x412be4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40ab3c40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40acf3c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40abb1a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ad10e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad7c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40acb010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad7c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40acac08"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40ad7c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40ac7830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x412f57b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abb1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x412f3a60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40ad7c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b13868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abb1a0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b858c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5ae60"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b600e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5c688"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b5c688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b57e90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b4c078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abb1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4131cb18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41312228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41319230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413198c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40c02c08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x413184f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x413184f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x413128f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb7410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41311010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bb7410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be23d8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40be2b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40632010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40be1230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40be1e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40be0510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40be0948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40bffa70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bfb150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c2b450"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d227b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40d227b0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c2b450"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ee7330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ee7330"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c2b450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ee6e80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ee6e80"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c26918"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ee3e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ee3e28"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c26918"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40edcaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40edcaf0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c26918"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40eda7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40eda7f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c08180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bf3c88"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40fb7350"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403aa188"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fb7698"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bf3c88"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x410014b8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40f6b3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x40f6b3d8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x4143c200"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x410003c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fba5a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fba5a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f1a9d8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x41000850"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40c09890"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x40c09890"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x40c20850"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x40fff610"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x40fe9228"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x40fe9228"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x40fd5ed0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x40fff010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406356e0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40fffd90"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40d17d08"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40d17d08"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40d41568"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x40ffa4d8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x410519d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x410519d8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41019928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41016010"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x40ffd5c0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x40ff9810"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4106ca48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4106ca48"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4104bcc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ff9c60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4104d818"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4104d818"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c87178"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40c2b450"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c87b88"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40c26918"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c41410"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c23560"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c23560"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c80138"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x40c3f990"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40d11898"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x40c3fe50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cf26a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40cf26a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413248a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x40c46600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d096a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d096a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406329d0"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40c853d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d07b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d07b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413557a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c86818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d04ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d04ab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406329d0"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40c86c00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d01070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d01070"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413854d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c86410"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cfe030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40cfe030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406329d0"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c85ac8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d01da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d01da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41384230"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c84d58"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c08180"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c46c90"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40c26918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c20e78"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409008d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c1f3f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d28e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d28e60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x40c361e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40c7aac8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40c87178"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40c7f5a8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40c87b88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c7fe18"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c86410"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c7e240"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c86818"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x40c7e628"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x40c86c00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40c7ed88"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x40c853d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c79528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c85ac8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c78230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c84850"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40c75a68"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409008d0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c78868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40cd4ad8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40cd4ad8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x40c7a280"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x40cd55c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c75e90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40c84d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413248a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41365440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40cf2d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41321010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41321010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d0c3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413216a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413216a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d0b010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41320330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41320330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41365b08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb7410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41364230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d099b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d08070"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413557a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4134d2b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d06230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41355e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41355e40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d068c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41354510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41354510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d054f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41353170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41353170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4134d980"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb7410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4134c030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d04dd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d034d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413854d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41381d00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d01708"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41385b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41385b70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41384230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d00a30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41384e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41384e28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4137e420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb7410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4137eab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40cfe348"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cfe9e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d22e48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4136d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4136d010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4136e460"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d13570"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d13cb0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d6c918"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d41978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec6610"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec6610"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d612f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d41978"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec4310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec4310"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d612f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d41978"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec2010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec2010"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d612f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40d41978"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40ec1ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40ec1ca0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d612f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6c0f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d68e88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40d68e88"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d637f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6c0f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ec5af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ec5af8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d637f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6c0f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ec3870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ec3870"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d637f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6c0f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40ec1528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40ec1528"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d637f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d6ccd8"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ecb240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d60aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ecb240"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5f228"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc5b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.1/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40d84620"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40dc8680"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40dc8680"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40dc28b0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dbf250"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ed0bf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ed0bf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413be438"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40dc5b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ed00a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ed00a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413bf8d0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40dbf958"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ecf310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ecf310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413bead0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x40de1c30"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x40dbede8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x40dbede8"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x40e25ca0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40dbb1f8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b80010"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x40dd5dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x40dd3e10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e5f180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e5b170"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e5b170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e71cc0"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x40e5f838"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x40e5b8c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x40e5b8c8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x40e5ae10"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5fb50"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5bc68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5bc68"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e571d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x40e57970"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x403c3a08"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x40e563b0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x403d9670"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x40e55808"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x403d1750"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x40e56d88"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x403d0210"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40e54368"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b80010"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x40e77d78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x40e9c848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ed07e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x413be030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413bd010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ecf7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x413bd438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x413c1768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x413bc6d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d60aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ecb240"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5f228"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc5b50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d60aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ecb240"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5f228"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc5b50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40d60aa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40ecb240"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d5f228"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc5b50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40eeb348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeab38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40eeab38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413dc578"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40eeba50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ee96d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ee96d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x413db150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ee92c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x413dccb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x413db610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee9b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x413dba38"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x413dd570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x413da050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ee79c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4140e148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4140e148"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4140f5f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ee5530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41409568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41409568"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4140aa48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40edd5f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41404948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41404948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41405e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40edb310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x413fee60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x413fee60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x413fe350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ed9010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414423a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414423a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x413f9860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x40fbc2d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x4143b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40f17210"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x4143b9b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40f15100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4143ecb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f125c0"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40f6a100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x4143a170"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x4143ad88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f1a9d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f15c48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40f10450"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40f17210"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f0f010"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40f125c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40f0fae0"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x40f15100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f0ff18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f11af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f11af8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41427010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f0d610"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f4a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f4a010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406329d0"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x40f0d9f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f48a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f48a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4145eed0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x40f0c238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f43010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f43010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406329d0"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f0c580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f418c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41427010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41423b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f4d230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x414276a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x414276a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f4d8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41427d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41427d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f4c4f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41426950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41426950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41420260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb7410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x414208f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f4a328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f4a9c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4145eed0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41457998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f47150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4145b580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4145b580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f477e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4145bc18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4145bc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f45410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4145a870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4145a870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41453080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb7410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41453718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f43328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f439c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40f6a100"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40fbd118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40fbd118"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41445780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41445ee8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4148ae18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4148ae18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x4148c3f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409008d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x4148da80"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41484618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x4148d128"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41486e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x4148c7e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x4148b430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x40fd3750"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x40fdae78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x40fd3b68"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x40d11898"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fd2010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x40fd1010"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40752478"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x40ff44e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41002848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41019928"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x410117f0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x4100fde0"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x41016010"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41011c48"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403aa188"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41010308"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41015ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41015ef8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41010308"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41027a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41027a60"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41010308"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410256a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410256a0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41010308"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4105d230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4105d230"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41010d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4105be80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4105be80"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41010d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41059b08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41059b08"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41010d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410577f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410577f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41010d28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41055520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41055520"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410145a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4149acf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4149acf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x4149a1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41026150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414941b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414941b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41495690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41025d38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414db6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414db6d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41490ab8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4105d8c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414d6b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414d6b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414d6010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4105a610"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414d0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414d0010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414d14a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41058310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414ca538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414ca538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414cba08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41056010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414c5b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414c5b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414c5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41055c98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414be148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414be148"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414bf5f0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4104bcc0"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41048b00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410452e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410475c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410475c0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410452e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41072250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41072250"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410452e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41071eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41071eb8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41045dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41047d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41047d38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414b5720"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41045dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x410729c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410729c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414feb20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41045dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41070660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41070660"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414f7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414b5720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414b7bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414feb20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414fe010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x414f7010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eeb348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x414f8438"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ProximityC" loc="10:ProximityC.nc">
      <documentation loc="1:ProximityC.nc">
        <short>&#10; Rudimentary Proximity Detection, adapted from BlinkToRadio&#10;&#10; </short>
        <long>&#10; Rudimentary Proximity Detection, adapted from BlinkToRadio&#10;&#10; @author Mat Kelly &#60;mkelly@cs.odu.edu>&#10; @date   Nov 3, 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ProximityAppC.Timer0" loc="36(ProximityAppC.Timer0):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40554330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ProximityAppC.AMSenderC" loc="39(ProximityAppC.AMSenderC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ProximityAppC.AMSenderC.SenderC" loc="39(ProximityAppC.AMSenderC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP" loc="35(ProximityAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ProximityAppC.AMReceiverC" loc="35(ProximityAppC.AMReceiverC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="36(DelugePageTransferC.Timer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CrcC" loc="37:/opt/tinyos-2.1.1/tos/system/CrcC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="39(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="39(ObjectTransferC.SendAdvMsg.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP" loc="35(ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="35(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="39(ObjectTransferC.SendReqMsg):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="39(ObjectTransferC.SendReqMsg.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP" loc="35(ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="35(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="39(ObjectTransferC.SendDataMsg):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="39(ObjectTransferC.SendDataMsg.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP" loc="35(ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="35(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="36(ObjectTransferC.Timer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="30(DelugeC.BlockReaderDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="27(DelugeC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="27(BlockStorageManagerC.BlockStorageManagerP):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="41:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="68:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="79(At45dbC.Arbiter):/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="32(At45dbC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="27(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="73(BlockStorageLockC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="32(BlockStorageLockC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="30(DelugeC.BlockReaderDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="27(DelugeC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="27(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="30(DelugeC.BlockReaderDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="27(DelugeC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="27(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="30(DelugeC.BlockWriterDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="27(DelugeC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="27(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="30(DelugeC.BlockWriterDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="27(DelugeC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="27(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="30(DelugeC.BlockWriterDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="27(DelugeC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="27(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf5ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf4748"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f09b00"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="39(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="39(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="35(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="39(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="39(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="35(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="35(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="36(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="33(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="519:/usr/lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C.&#9;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="36(DelugeC.Timer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="30(DelugeMetadataC.BlockReaderGoldenImage):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="30(DelugeMetadataC.BlockReaderDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="30(DelugeMetadataC.BlockReaderDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="30(DelugeMetadataC.BlockReaderDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="27(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="30(DelugeMetadataC.BlockWriterGoldenImage):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="30(DelugeMetadataC.BlockWriterDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="30(DelugeMetadataC.BlockWriterDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="30(DelugeMetadataC.BlockWriterDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="27(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="27(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="27(DelugeC.DelugeMetadataClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="27(DelugeC.DelugeVolumeManagerClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="30(DelugeVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="30(DelugeVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="30(DelugeVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="27(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="27(DelugeC.BlockStorageLockClientC):/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403ed0e8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403ed300" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403ed518" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f14e8" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f1710" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f1938" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403f1b28" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4043fa30" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4043fc58" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4043fe80" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4043c088" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40554330" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40554330"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405544f0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4055f5c8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4055f5c8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4055f788" loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405429c8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405429c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405fb010" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405fb010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x405fb1f0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4062c840" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4062c840"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40781088" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4077fd80" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b14c30" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b14c30"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40b14e50" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b17938" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b17938"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b17d80" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b17d80"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b2d010" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b58470" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b58470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b588b8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b588b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40b6f5d0" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40b6f5d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40b6fa30" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40b6fa30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40b6fc98" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40b6fc98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40b6e148" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40b6e148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40b6e3b0" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40b6e838" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40b6e838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40bacc18" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ba77c8" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ba02c8" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40bb68e8" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40bfe010" loc="35:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40d20010" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40d1fce8" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x40d144f8" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x40d6ab68" loc="23:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x40e26a40" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e28a48" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40e91780" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40ee47b8" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f09b00" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f09b00"/></type-var>
        </typedef>
        <constant name="key" ref="0x40f09cf0" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f06c68" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f06c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40f682b8" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40f684c8" loc="44:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40f686a8" loc="45:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40f688b0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40f65db0" loc="43:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40f62010" loc="44:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40f621f0" loc="45:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40f623f8" loc="46:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x40f62600" loc="47:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="33:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40f9bbf8" loc="33:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403aadb0" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403aadb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403aa188" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403aa188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403aa360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403adec0" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403adec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403acee8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403acee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a80e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403ad760" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ad760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403ad938"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403ada18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403adaf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x403adbd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403adcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403b5548" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403b5548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403b5168" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403b5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403b5950" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403b5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403ba010" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ba1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403bbc10" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bbde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403c0ad0" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403c00e0" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403c00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c02b8"/>
        <function-ref name="isInput" scoped="" ref="0x403c0398"/>
        <function-ref name="toggle" scoped="" ref="0x403c0478"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0558"/>
        <function-ref name="get" scoped="" ref="0x403c0638"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0718"/>
        <function-ref name="set" scoped="" ref="0x403c07f8"/>
        <function-ref name="clr" scoped="" ref="0x403c08d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403bab98" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403bab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403e1750" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403e1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1b28"/>
        <function-ref name="isInput" scoped="" ref="0x403e1c08"/>
        <function-ref name="toggle" scoped="" ref="0x403e1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1dc8"/>
        <function-ref name="get" scoped="" ref="0x403e1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0010"/>
        <function-ref name="set" scoped="" ref="0x403e00f0"/>
        <function-ref name="clr" scoped="" ref="0x403e01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403d2d08" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403d2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x403d1010"/>
        <function-ref name="toggle" scoped="" ref="0x403d10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d11d0"/>
        <function-ref name="get" scoped="" ref="0x403d12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1390"/>
        <function-ref name="set" scoped="" ref="0x403d1470"/>
        <function-ref name="clr" scoped="" ref="0x403d1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403d52f0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d54c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d55a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d5688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5768"/>
        <function-ref name="get" scoped="" ref="0x403d5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5928"/>
        <function-ref name="set" scoped="" ref="0x403d5a08"/>
        <function-ref name="clr" scoped="" ref="0x403d5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403da4b0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da688"/>
        <function-ref name="isInput" scoped="" ref="0x403da768"/>
        <function-ref name="toggle" scoped="" ref="0x403da848"/>
        <function-ref name="isOutput" scoped="" ref="0x403da928"/>
        <function-ref name="get" scoped="" ref="0x403daa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daae8"/>
        <function-ref name="set" scoped="" ref="0x403dabc8"/>
        <function-ref name="clr" scoped="" ref="0x403daca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403c18e0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403c18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403c1b98"/>
        <function-ref name="toggle" scoped="" ref="0x403c1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1d58"/>
        <function-ref name="get" scoped="" ref="0x403c1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1f18"/>
        <function-ref name="set" scoped="" ref="0x403ca010"/>
        <function-ref name="clr" scoped="" ref="0x403ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403db0a0" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db278"/>
        <function-ref name="isInput" scoped="" ref="0x403db358"/>
        <function-ref name="toggle" scoped="" ref="0x403db438"/>
        <function-ref name="isOutput" scoped="" ref="0x403db518"/>
        <function-ref name="get" scoped="" ref="0x403db5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db6d8"/>
        <function-ref name="set" scoped="" ref="0x403db7b8"/>
        <function-ref name="clr" scoped="" ref="0x403db898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403cace8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403cace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403caec0"/>
        <function-ref name="isInput" scoped="" ref="0x403c9010"/>
        <function-ref name="toggle" scoped="" ref="0x403c90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c91d0"/>
        <function-ref name="get" scoped="" ref="0x403c92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9390"/>
        <function-ref name="set" scoped="" ref="0x403c9470"/>
        <function-ref name="clr" scoped="" ref="0x403c9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403cc4b0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403cc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc688"/>
        <function-ref name="isInput" scoped="" ref="0x403cc768"/>
        <function-ref name="toggle" scoped="" ref="0x403cc848"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc928"/>
        <function-ref name="get" scoped="" ref="0x403cca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ccae8"/>
        <function-ref name="set" scoped="" ref="0x403ccbc8"/>
        <function-ref name="clr" scoped="" ref="0x403ccca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403d0c08" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403d0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d90f0"/>
        <function-ref name="get" scoped="" ref="0x403d91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d92b0"/>
        <function-ref name="set" scoped="" ref="0x403d9390"/>
        <function-ref name="clr" scoped="" ref="0x403d9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403dd210" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403dd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403dd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd688"/>
        <function-ref name="get" scoped="" ref="0x403dd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd848"/>
        <function-ref name="set" scoped="" ref="0x403dd928"/>
        <function-ref name="clr" scoped="" ref="0x403dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403c4590" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403c4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4768"/>
        <function-ref name="isInput" scoped="" ref="0x403c4848"/>
        <function-ref name="toggle" scoped="" ref="0x403c4928"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4a08"/>
        <function-ref name="get" scoped="" ref="0x403c4ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c4bc8"/>
        <function-ref name="set" scoped="" ref="0x403c4ca8"/>
        <function-ref name="clr" scoped="" ref="0x403c4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403c8c08" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403c8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8de0"/>
        <function-ref name="isInput" scoped="" ref="0x403c8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403c7010"/>
        <function-ref name="isOutput" scoped="" ref="0x403c70f0"/>
        <function-ref name="get" scoped="" ref="0x403c71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c72b0"/>
        <function-ref name="set" scoped="" ref="0x403c7390"/>
        <function-ref name="clr" scoped="" ref="0x403c7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403d42f0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d44c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d45a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d4688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4768"/>
        <function-ref name="get" scoped="" ref="0x403d4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4928"/>
        <function-ref name="set" scoped="" ref="0x403d4a08"/>
        <function-ref name="clr" scoped="" ref="0x403d4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403d8a98" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403d8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d8d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8f10"/>
        <function-ref name="get" scoped="" ref="0x403d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d70f0"/>
        <function-ref name="set" scoped="" ref="0x403d71d0"/>
        <function-ref name="clr" scoped="" ref="0x403d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403e22f0" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2768"/>
        <function-ref name="get" scoped="" ref="0x403e2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2928"/>
        <function-ref name="set" scoped="" ref="0x403e2a08"/>
        <function-ref name="clr" scoped="" ref="0x403e2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403df830" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403df830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfa08"/>
        <function-ref name="isInput" scoped="" ref="0x403dfae8"/>
        <function-ref name="toggle" scoped="" ref="0x403dfbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dfca8"/>
        <function-ref name="get" scoped="" ref="0x403dfd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dfe68"/>
        <function-ref name="set" scoped="" ref="0x403e8010"/>
        <function-ref name="clr" scoped="" ref="0x403e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403d7ea8" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403d7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d60c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d61a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d6280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6360"/>
        <function-ref name="get" scoped="" ref="0x403d6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6520"/>
        <function-ref name="set" scoped="" ref="0x403d6600"/>
        <function-ref name="clr" scoped="" ref="0x403d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403c24b0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2688"/>
        <function-ref name="isInput" scoped="" ref="0x403c2768"/>
        <function-ref name="toggle" scoped="" ref="0x403c2848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2928"/>
        <function-ref name="get" scoped="" ref="0x403c2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2ae8"/>
        <function-ref name="set" scoped="" ref="0x403c2bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403c6b18" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403c6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c6cf0"/>
        <function-ref name="isInput" scoped="" ref="0x403c6dd0"/>
        <function-ref name="toggle" scoped="" ref="0x403c6eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ce010"/>
        <function-ref name="get" scoped="" ref="0x403ce0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ce1d0"/>
        <function-ref name="set" scoped="" ref="0x403ce2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ce390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403e03d0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403e03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e05a8"/>
        <function-ref name="isInput" scoped="" ref="0x403e0688"/>
        <function-ref name="toggle" scoped="" ref="0x403e0768"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0848"/>
        <function-ref name="get" scoped="" ref="0x403e0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0a08"/>
        <function-ref name="set" scoped="" ref="0x403e0ae8"/>
        <function-ref name="clr" scoped="" ref="0x403e0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403cd010" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403cd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403cd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd488"/>
        <function-ref name="get" scoped="" ref="0x403cd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd648"/>
        <function-ref name="set" scoped="" ref="0x403cd728"/>
        <function-ref name="clr" scoped="" ref="0x403cd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403d1750" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403d1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1928"/>
        <function-ref name="isInput" scoped="" ref="0x403d1a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1bc8"/>
        <function-ref name="get" scoped="" ref="0x403d1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1d88"/>
        <function-ref name="set" scoped="" ref="0x403d1e68"/>
        <function-ref name="clr" scoped="" ref="0x403d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403d5ce8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403d5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403de010"/>
        <function-ref name="toggle" scoped="" ref="0x403de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403de1d0"/>
        <function-ref name="get" scoped="" ref="0x403de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de390"/>
        <function-ref name="set" scoped="" ref="0x403de470"/>
        <function-ref name="clr" scoped="" ref="0x403de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403daea8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3360"/>
        <function-ref name="get" scoped="" ref="0x403e3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3520"/>
        <function-ref name="set" scoped="" ref="0x403e3600"/>
        <function-ref name="clr" scoped="" ref="0x403e36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403ca2f0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ca5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ca688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca768"/>
        <function-ref name="get" scoped="" ref="0x403ca848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca928"/>
        <function-ref name="set" scoped="" ref="0x403caa08"/>
        <function-ref name="clr" scoped="" ref="0x403caae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403c9750" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403c9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9928"/>
        <function-ref name="isInput" scoped="" ref="0x403c9a08"/>
        <function-ref name="toggle" scoped="" ref="0x403c9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9bc8"/>
        <function-ref name="get" scoped="" ref="0x403c9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9d88"/>
        <function-ref name="set" scoped="" ref="0x403c9e68"/>
        <function-ref name="clr" scoped="" ref="0x403c8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403ccea8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403ccea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403cb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403cb280"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb360"/>
        <function-ref name="get" scoped="" ref="0x403cb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb520"/>
        <function-ref name="set" scoped="" ref="0x403cb600"/>
        <function-ref name="clr" scoped="" ref="0x403cb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403d9670" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9848"/>
        <function-ref name="isInput" scoped="" ref="0x403d9928"/>
        <function-ref name="toggle" scoped="" ref="0x403d9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9ae8"/>
        <function-ref name="get" scoped="" ref="0x403d9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9ca8"/>
        <function-ref name="set" scoped="" ref="0x403d9d88"/>
        <function-ref name="clr" scoped="" ref="0x403d9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403ddc08" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x403ddec0"/>
        <function-ref name="toggle" scoped="" ref="0x403dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc0f0"/>
        <function-ref name="get" scoped="" ref="0x403dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc2b0"/>
        <function-ref name="set" scoped="" ref="0x403dc390"/>
        <function-ref name="clr" scoped="" ref="0x403dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403c3010" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c31e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c32c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3488"/>
        <function-ref name="get" scoped="" ref="0x403c3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3648"/>
        <function-ref name="set" scoped="" ref="0x403c3728"/>
        <function-ref name="clr" scoped="" ref="0x403c3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403c7670" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c78c8"/>
        <function-ref name="isInput" scoped="" ref="0x403c79a8"/>
        <function-ref name="toggle" scoped="" ref="0x403c7a88"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7b68"/>
        <function-ref name="get" scoped="" ref="0x403c7c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7d28"/>
        <function-ref name="set" scoped="" ref="0x403c7e08"/>
        <function-ref name="clr" scoped="" ref="0x403c7ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403d4ce8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403d4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d3010"/>
        <function-ref name="toggle" scoped="" ref="0x403d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d31d0"/>
        <function-ref name="get" scoped="" ref="0x403d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3390"/>
        <function-ref name="set" scoped="" ref="0x403d3470"/>
        <function-ref name="clr" scoped="" ref="0x403d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403e2ce8" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403e2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e1010"/>
        <function-ref name="toggle" scoped="" ref="0x403e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e11d0"/>
        <function-ref name="get" scoped="" ref="0x403e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1390"/>
        <function-ref name="set" scoped="" ref="0x403e1470"/>
        <function-ref name="clr" scoped="" ref="0x403e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403d2210" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403d2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d24e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d25c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d26a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2788"/>
        <function-ref name="get" scoped="" ref="0x403d2868"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2948"/>
        <function-ref name="set" scoped="" ref="0x403d2a28"/>
        <function-ref name="clr" scoped="" ref="0x403d2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403d68e0" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403d68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d6b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6d58"/>
        <function-ref name="get" scoped="" ref="0x403d6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6f18"/>
        <function-ref name="set" scoped="" ref="0x403d5010"/>
        <function-ref name="clr" scoped="" ref="0x403d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403dba98" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403dba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dbc70"/>
        <function-ref name="isInput" scoped="" ref="0x403dbd50"/>
        <function-ref name="toggle" scoped="" ref="0x403dbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403dbf10"/>
        <function-ref name="get" scoped="" ref="0x403da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da0f0"/>
        <function-ref name="set" scoped="" ref="0x403da1d0"/>
        <function-ref name="clr" scoped="" ref="0x403da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403e82f0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8768"/>
        <function-ref name="get" scoped="" ref="0x403e8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e8928"/>
        <function-ref name="set" scoped="" ref="0x403e8a08"/>
        <function-ref name="clr" scoped="" ref="0x403e8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403c2ea8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403c2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c10c0"/>
        <function-ref name="isInput" scoped="" ref="0x403c11a0"/>
        <function-ref name="toggle" scoped="" ref="0x403c1280"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1360"/>
        <function-ref name="get" scoped="" ref="0x403c1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1520"/>
        <function-ref name="set" scoped="" ref="0x403c1600"/>
        <function-ref name="clr" scoped="" ref="0x403c16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403ce590" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403ce590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ce768"/>
        <function-ref name="isInput" scoped="" ref="0x403ce848"/>
        <function-ref name="toggle" scoped="" ref="0x403ce928"/>
        <function-ref name="isOutput" scoped="" ref="0x403cea08"/>
        <function-ref name="get" scoped="" ref="0x403ceae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cebc8"/>
        <function-ref name="set" scoped="" ref="0x403ceca8"/>
        <function-ref name="clr" scoped="" ref="0x403ced88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403dc670" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc848"/>
        <function-ref name="isInput" scoped="" ref="0x403dc928"/>
        <function-ref name="toggle" scoped="" ref="0x403dca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcae8"/>
        <function-ref name="get" scoped="" ref="0x403dcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dcca8"/>
        <function-ref name="set" scoped="" ref="0x403dcd88"/>
        <function-ref name="clr" scoped="" ref="0x403dce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403cda08" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403cda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cdbe0"/>
        <function-ref name="isInput" scoped="" ref="0x403cdcc0"/>
        <function-ref name="toggle" scoped="" ref="0x403cdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cde80"/>
        <function-ref name="get" scoped="" ref="0x403cc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc0f0"/>
        <function-ref name="set" scoped="" ref="0x403cc1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403d0210" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d03e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d04c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0688"/>
        <function-ref name="get" scoped="" ref="0x403d0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0848"/>
        <function-ref name="set" scoped="" ref="0x403d0928"/>
        <function-ref name="clr" scoped="" ref="0x403d0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403de750" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de928"/>
        <function-ref name="isInput" scoped="" ref="0x403dea08"/>
        <function-ref name="toggle" scoped="" ref="0x403deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403debc8"/>
        <function-ref name="get" scoped="" ref="0x403deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ded88"/>
        <function-ref name="set" scoped="" ref="0x403dee68"/>
        <function-ref name="clr" scoped="" ref="0x403dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403e38e0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403e38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3d58"/>
        <function-ref name="get" scoped="" ref="0x403e3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3f18"/>
        <function-ref name="set" scoped="" ref="0x403e2010"/>
        <function-ref name="clr" scoped="" ref="0x403e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403b9af0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403b9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9cc8"/>
        <function-ref name="isInput" scoped="" ref="0x403b9da8"/>
        <function-ref name="toggle" scoped="" ref="0x403b9e88"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4010"/>
        <function-ref name="get" scoped="" ref="0x403c40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c41d0"/>
        <function-ref name="set" scoped="" ref="0x403c42b0"/>
        <function-ref name="clr" scoped="" ref="0x403c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403c8210" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403c8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c83e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c84c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8688"/>
        <function-ref name="get" scoped="" ref="0x403c8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8848"/>
        <function-ref name="set" scoped="" ref="0x403c8928"/>
        <function-ref name="clr" scoped="" ref="0x403c8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403cb8e0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403cb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cbab8"/>
        <function-ref name="isInput" scoped="" ref="0x403cbb98"/>
        <function-ref name="toggle" scoped="" ref="0x403cbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403cbd58"/>
        <function-ref name="get" scoped="" ref="0x403cbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cbf18"/>
        <function-ref name="set" scoped="" ref="0x403d4010"/>
        <function-ref name="clr" scoped="" ref="0x403d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403d80a0" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8278"/>
        <function-ref name="isInput" scoped="" ref="0x403d8358"/>
        <function-ref name="toggle" scoped="" ref="0x403d8438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8518"/>
        <function-ref name="get" scoped="" ref="0x403d85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d86d8"/>
        <function-ref name="set" scoped="" ref="0x403d87b8"/>
        <function-ref name="clr" scoped="" ref="0x403d8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403e0dc8" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403e0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df010"/>
        <function-ref name="isInput" scoped="" ref="0x403df0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403df1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403df2b0"/>
        <function-ref name="get" scoped="" ref="0x403df390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df470"/>
        <function-ref name="set" scoped="" ref="0x403df550"/>
        <function-ref name="clr" scoped="" ref="0x403df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403d74b0" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403d74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7688"/>
        <function-ref name="isInput" scoped="" ref="0x403d7768"/>
        <function-ref name="toggle" scoped="" ref="0x403d7848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7928"/>
        <function-ref name="get" scoped="" ref="0x403d7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7ae8"/>
        <function-ref name="set" scoped="" ref="0x403d7bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403d3750" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403d3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3928"/>
        <function-ref name="isInput" scoped="" ref="0x403d3a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3bc8"/>
        <function-ref name="get" scoped="" ref="0x403d3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3d88"/>
        <function-ref name="set" scoped="" ref="0x403d3e68"/>
        <function-ref name="clr" scoped="" ref="0x403d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403c3a08" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403c3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c3be0"/>
        <function-ref name="isInput" scoped="" ref="0x403c3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403c3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3e80"/>
        <function-ref name="get" scoped="" ref="0x403c2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c20f0"/>
        <function-ref name="set" scoped="" ref="0x403c21d0"/>
        <function-ref name="clr" scoped="" ref="0x403c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403c6120" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c62f8"/>
        <function-ref name="isInput" scoped="" ref="0x403c63d8"/>
        <function-ref name="toggle" scoped="" ref="0x403c64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6598"/>
        <function-ref name="get" scoped="" ref="0x403c6678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c6758"/>
        <function-ref name="set" scoped="" ref="0x403c6838"/>
        <function-ref name="clr" scoped="" ref="0x403c6918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040e6b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e888"/>
        <function-ref name="isInput" scoped="" ref="0x4040e968"/>
        <function-ref name="toggle" scoped="" ref="0x4040ea48"/>
        <function-ref name="isOutput" scoped="" ref="0x4040eb28"/>
        <function-ref name="get" scoped="" ref="0x4040ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ece8"/>
        <function-ref name="set" scoped="" ref="0x4040edc8"/>
        <function-ref name="clr" scoped="" ref="0x4040eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040c330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c508"/>
        <function-ref name="isInput" scoped="" ref="0x4040c5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4040c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c7a8"/>
        <function-ref name="get" scoped="" ref="0x4040c888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c968"/>
        <function-ref name="set" scoped="" ref="0x4040ca48"/>
        <function-ref name="clr" scoped="" ref="0x4040cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404103a0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404103a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410578"/>
        <function-ref name="isInput" scoped="" ref="0x40410658"/>
        <function-ref name="toggle" scoped="" ref="0x40410738"/>
        <function-ref name="isOutput" scoped="" ref="0x40410818"/>
        <function-ref name="get" scoped="" ref="0x404108f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404109d8"/>
        <function-ref name="set" scoped="" ref="0x40410ab8"/>
        <function-ref name="clr" scoped="" ref="0x40410b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040d030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d208"/>
        <function-ref name="isInput" scoped="" ref="0x4040d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d4a8"/>
        <function-ref name="get" scoped="" ref="0x4040d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d668"/>
        <function-ref name="set" scoped="" ref="0x4040d748"/>
        <function-ref name="clr" scoped="" ref="0x4040d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040cc88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040ce60"/>
        <function-ref name="isInput" scoped="" ref="0x40415010"/>
        <function-ref name="toggle" scoped="" ref="0x404150f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404151d0"/>
        <function-ref name="get" scoped="" ref="0x404152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415390"/>
        <function-ref name="set" scoped="" ref="0x40415470"/>
        <function-ref name="clr" scoped="" ref="0x40415550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40410cf8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40410cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410ed0"/>
        <function-ref name="isInput" scoped="" ref="0x4040e010"/>
        <function-ref name="toggle" scoped="" ref="0x4040e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e1d0"/>
        <function-ref name="get" scoped="" ref="0x4040e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e390"/>
        <function-ref name="set" scoped="" ref="0x4040e470"/>
        <function-ref name="clr" scoped="" ref="0x4040e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040d988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040db60"/>
        <function-ref name="isInput" scoped="" ref="0x4040dc40"/>
        <function-ref name="toggle" scoped="" ref="0x4040dd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4040de00"/>
        <function-ref name="get" scoped="" ref="0x4040dee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c010"/>
        <function-ref name="set" scoped="" ref="0x4040c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4040c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404156b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404156b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415888"/>
        <function-ref name="isInput" scoped="" ref="0x40415968"/>
        <function-ref name="toggle" scoped="" ref="0x40415a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40415b28"/>
        <function-ref name="get" scoped="" ref="0x40415c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415ce8"/>
        <function-ref name="set" scoped="" ref="0x40415dc8"/>
        <function-ref name="clr" scoped="" ref="0x40415ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4108c010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4108c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4108c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4108c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4108c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4108c488"/>
        <function-ref name="get" scoped="" ref="0x4108c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4108c648"/>
        <function-ref name="set" scoped="" ref="0x4108c728"/>
        <function-ref name="clr" scoped="" ref="0x4108c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4108a9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4108a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4108abc0"/>
        <function-ref name="isInput" scoped="" ref="0x4108aca0"/>
        <function-ref name="toggle" scoped="" ref="0x4108ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x4108ae60"/>
        <function-ref name="get" scoped="" ref="0x41089010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410890f0"/>
        <function-ref name="set" scoped="" ref="0x410891d0"/>
        <function-ref name="clr" scoped="" ref="0x410892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41088538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41088538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41088710"/>
        <function-ref name="isInput" scoped="" ref="0x410887f0"/>
        <function-ref name="toggle" scoped="" ref="0x410888d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410889b0"/>
        <function-ref name="get" scoped="" ref="0x41088a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41088b70"/>
        <function-ref name="set" scoped="" ref="0x41088c50"/>
        <function-ref name="clr" scoped="" ref="0x41088d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41086010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41086010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410861e8"/>
        <function-ref name="isInput" scoped="" ref="0x410862c8"/>
        <function-ref name="toggle" scoped="" ref="0x410863a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41086488"/>
        <function-ref name="get" scoped="" ref="0x41086568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41086648"/>
        <function-ref name="set" scoped="" ref="0x41086728"/>
        <function-ref name="clr" scoped="" ref="0x41086808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410859e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410859e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41085bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41085ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41085d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41085e60"/>
        <function-ref name="get" scoped="" ref="0x41084010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410840f0"/>
        <function-ref name="set" scoped="" ref="0x410841d0"/>
        <function-ref name="clr" scoped="" ref="0x410842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41083538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41083538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41083710"/>
        <function-ref name="isInput" scoped="" ref="0x410837f0"/>
        <function-ref name="toggle" scoped="" ref="0x410838d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410839b0"/>
        <function-ref name="get" scoped="" ref="0x41083a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41083b70"/>
        <function-ref name="set" scoped="" ref="0x41083c50"/>
        <function-ref name="clr" scoped="" ref="0x41083d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41081010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41081010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410811e8"/>
        <function-ref name="isInput" scoped="" ref="0x410812c8"/>
        <function-ref name="toggle" scoped="" ref="0x410813a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41081488"/>
        <function-ref name="get" scoped="" ref="0x41081568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41081648"/>
        <function-ref name="set" scoped="" ref="0x41081728"/>
        <function-ref name="clr" scoped="" ref="0x41081808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410809e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410809e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41080bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41080ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41080d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41080e60"/>
        <function-ref name="get" scoped="" ref="0x4107f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4107f0f0"/>
        <function-ref name="set" scoped="" ref="0x4107f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4107f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041a170" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a348"/>
        <function-ref name="isInput" scoped="" ref="0x4041a428"/>
        <function-ref name="toggle" scoped="" ref="0x4041a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a5e8"/>
        <function-ref name="get" scoped="" ref="0x4041a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a7a8"/>
        <function-ref name="set" scoped="" ref="0x4041a888"/>
        <function-ref name="clr" scoped="" ref="0x4041a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40419e48" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40419e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417050"/>
        <function-ref name="isInput" scoped="" ref="0x40417130"/>
        <function-ref name="toggle" scoped="" ref="0x40417210"/>
        <function-ref name="isOutput" scoped="" ref="0x404172f0"/>
        <function-ref name="get" scoped="" ref="0x404173d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404174b0"/>
        <function-ref name="set" scoped="" ref="0x40417590"/>
        <function-ref name="clr" scoped="" ref="0x40417670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40412dc8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40412dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411010"/>
        <function-ref name="isInput" scoped="" ref="0x404110f0"/>
        <function-ref name="toggle" scoped="" ref="0x404111d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404112b0"/>
        <function-ref name="get" scoped="" ref="0x40411390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411470"/>
        <function-ref name="set" scoped="" ref="0x40411550"/>
        <function-ref name="clr" scoped="" ref="0x40411630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041aac8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4041ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40419010"/>
        <function-ref name="get" scoped="" ref="0x404190f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404191d0"/>
        <function-ref name="set" scoped="" ref="0x404192b0"/>
        <function-ref name="clr" scoped="" ref="0x40419390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404177d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404177d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404179a8"/>
        <function-ref name="isInput" scoped="" ref="0x40417a88"/>
        <function-ref name="toggle" scoped="" ref="0x40417b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40417c48"/>
        <function-ref name="get" scoped="" ref="0x40417d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417e08"/>
        <function-ref name="set" scoped="" ref="0x40417ee8"/>
        <function-ref name="clr" scoped="" ref="0x40416010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40411790" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40411790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411968"/>
        <function-ref name="isInput" scoped="" ref="0x40411a48"/>
        <function-ref name="toggle" scoped="" ref="0x40411b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40411c08"/>
        <function-ref name="get" scoped="" ref="0x40411ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411dc8"/>
        <function-ref name="set" scoped="" ref="0x40411ea8"/>
        <function-ref name="clr" scoped="" ref="0x4041a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404194f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404194f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404196c8"/>
        <function-ref name="isInput" scoped="" ref="0x404197a8"/>
        <function-ref name="toggle" scoped="" ref="0x40419888"/>
        <function-ref name="isOutput" scoped="" ref="0x40419968"/>
        <function-ref name="get" scoped="" ref="0x40419a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419b28"/>
        <function-ref name="set" scoped="" ref="0x40419c08"/>
        <function-ref name="clr" scoped="" ref="0x40419ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40416170" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40416170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416348"/>
        <function-ref name="isInput" scoped="" ref="0x40416428"/>
        <function-ref name="toggle" scoped="" ref="0x40416508"/>
        <function-ref name="isOutput" scoped="" ref="0x404165e8"/>
        <function-ref name="get" scoped="" ref="0x404166c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404167a8"/>
        <function-ref name="set" scoped="" ref="0x40416888"/>
        <function-ref name="clr" scoped="" ref="0x40416968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410d3de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410d3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cf010"/>
        <function-ref name="isInput" scoped="" ref="0x410cf0f0"/>
        <function-ref name="toggle" scoped="" ref="0x410cf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410cf2b0"/>
        <function-ref name="get" scoped="" ref="0x410cf390"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cf470"/>
        <function-ref name="set" scoped="" ref="0x410cf550"/>
        <function-ref name="clr" scoped="" ref="0x410cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410ce7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410ce7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410ce9d0"/>
        <function-ref name="isInput" scoped="" ref="0x410ceab0"/>
        <function-ref name="toggle" scoped="" ref="0x410ceb90"/>
        <function-ref name="isOutput" scoped="" ref="0x410cec70"/>
        <function-ref name="get" scoped="" ref="0x410ced50"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cee30"/>
        <function-ref name="set" scoped="" ref="0x410cef10"/>
        <function-ref name="clr" scoped="" ref="0x410cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cc228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cc400"/>
        <function-ref name="isInput" scoped="" ref="0x410cc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x410cc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410cc6a0"/>
        <function-ref name="get" scoped="" ref="0x410cc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x410cc860"/>
        <function-ref name="set" scoped="" ref="0x410cc940"/>
        <function-ref name="clr" scoped="" ref="0x410cca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410cbc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410cbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410cbde0"/>
        <function-ref name="isInput" scoped="" ref="0x410cbec0"/>
        <function-ref name="toggle" scoped="" ref="0x410ca010"/>
        <function-ref name="isOutput" scoped="" ref="0x410ca0f0"/>
        <function-ref name="get" scoped="" ref="0x410ca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410ca2b0"/>
        <function-ref name="set" scoped="" ref="0x410ca390"/>
        <function-ref name="clr" scoped="" ref="0x410ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c96c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c9898"/>
        <function-ref name="isInput" scoped="" ref="0x410c9978"/>
        <function-ref name="toggle" scoped="" ref="0x410c9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x410c9b38"/>
        <function-ref name="get" scoped="" ref="0x410c9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c9cf8"/>
        <function-ref name="set" scoped="" ref="0x410c9dd8"/>
        <function-ref name="clr" scoped="" ref="0x410c9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c70b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c7288"/>
        <function-ref name="isInput" scoped="" ref="0x410c7368"/>
        <function-ref name="toggle" scoped="" ref="0x410c7448"/>
        <function-ref name="isOutput" scoped="" ref="0x410c7528"/>
        <function-ref name="get" scoped="" ref="0x410c7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c76e8"/>
        <function-ref name="set" scoped="" ref="0x410c77c8"/>
        <function-ref name="clr" scoped="" ref="0x410c78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c6a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c6c60"/>
        <function-ref name="isInput" scoped="" ref="0x410c6d40"/>
        <function-ref name="toggle" scoped="" ref="0x410c6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x410c6f00"/>
        <function-ref name="get" scoped="" ref="0x410c5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c50f0"/>
        <function-ref name="set" scoped="" ref="0x410c51d0"/>
        <function-ref name="clr" scoped="" ref="0x410c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410c4538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410c4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410c4710"/>
        <function-ref name="isInput" scoped="" ref="0x410c47f0"/>
        <function-ref name="toggle" scoped="" ref="0x410c48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410c49b0"/>
        <function-ref name="get" scoped="" ref="0x410c4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410c4b70"/>
        <function-ref name="set" scoped="" ref="0x410c4c50"/>
        <function-ref name="clr" scoped="" ref="0x410c4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041c9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4041cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4041cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ce60"/>
        <function-ref name="get" scoped="" ref="0x4041b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b0f0"/>
        <function-ref name="set" scoped="" ref="0x4041b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4041b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40424790" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40424790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424968"/>
        <function-ref name="isInput" scoped="" ref="0x40424a48"/>
        <function-ref name="toggle" scoped="" ref="0x40424b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40424c08"/>
        <function-ref name="get" scoped="" ref="0x40424ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424dc8"/>
        <function-ref name="set" scoped="" ref="0x40424ea8"/>
        <function-ref name="clr" scoped="" ref="0x40423010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4041d6f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4041d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4041d9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4041da90"/>
        <function-ref name="isOutput" scoped="" ref="0x4041db70"/>
        <function-ref name="get" scoped="" ref="0x4041dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041dd30"/>
        <function-ref name="set" scoped="" ref="0x4041de10"/>
        <function-ref name="clr" scoped="" ref="0x4041def0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4041b410" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4041b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b888"/>
        <function-ref name="get" scoped="" ref="0x4041b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041ba48"/>
        <function-ref name="set" scoped="" ref="0x4041bb28"/>
        <function-ref name="clr" scoped="" ref="0x4041bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40423170" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40423170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423348"/>
        <function-ref name="isInput" scoped="" ref="0x40423428"/>
        <function-ref name="toggle" scoped="" ref="0x40423508"/>
        <function-ref name="isOutput" scoped="" ref="0x404235e8"/>
        <function-ref name="get" scoped="" ref="0x404236c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404237a8"/>
        <function-ref name="set" scoped="" ref="0x40423888"/>
        <function-ref name="clr" scoped="" ref="0x40423968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4041c090" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4041c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c268"/>
        <function-ref name="isInput" scoped="" ref="0x4041c348"/>
        <function-ref name="toggle" scoped="" ref="0x4041c428"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c508"/>
        <function-ref name="get" scoped="" ref="0x4041c5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041c6c8"/>
        <function-ref name="set" scoped="" ref="0x4041c7a8"/>
        <function-ref name="clr" scoped="" ref="0x4041c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041bd68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424010"/>
        <function-ref name="isInput" scoped="" ref="0x404240f0"/>
        <function-ref name="toggle" scoped="" ref="0x404241d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404242b0"/>
        <function-ref name="get" scoped="" ref="0x40424390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424470"/>
        <function-ref name="set" scoped="" ref="0x40424550"/>
        <function-ref name="clr" scoped="" ref="0x40424630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40423ac8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40423ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40423d80"/>
        <function-ref name="toggle" scoped="" ref="0x40423e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40422010"/>
        <function-ref name="get" scoped="" ref="0x404220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404221d0"/>
        <function-ref name="set" scoped="" ref="0x404222b0"/>
        <function-ref name="clr" scoped="" ref="0x40422390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41113938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41113938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41113b10"/>
        <function-ref name="isInput" scoped="" ref="0x41113bf0"/>
        <function-ref name="toggle" scoped="" ref="0x41113cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x41113db0"/>
        <function-ref name="get" scoped="" ref="0x41113e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41112010"/>
        <function-ref name="set" scoped="" ref="0x411120f0"/>
        <function-ref name="clr" scoped="" ref="0x411121d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411113b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41111588"/>
        <function-ref name="isInput" scoped="" ref="0x41111668"/>
        <function-ref name="toggle" scoped="" ref="0x41111748"/>
        <function-ref name="isOutput" scoped="" ref="0x41111828"/>
        <function-ref name="get" scoped="" ref="0x41111908"/>
        <function-ref name="makeOutput" scoped="" ref="0x411119e8"/>
        <function-ref name="set" scoped="" ref="0x41111ac8"/>
        <function-ref name="clr" scoped="" ref="0x41111ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41110d70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41110d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110f010"/>
        <function-ref name="isInput" scoped="" ref="0x4110f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4110f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4110f2b0"/>
        <function-ref name="get" scoped="" ref="0x4110f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110f470"/>
        <function-ref name="set" scoped="" ref="0x4110f550"/>
        <function-ref name="clr" scoped="" ref="0x4110f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110e7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4110eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4110eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4110ec70"/>
        <function-ref name="get" scoped="" ref="0x4110ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110ee30"/>
        <function-ref name="set" scoped="" ref="0x4110ef10"/>
        <function-ref name="clr" scoped="" ref="0x4110d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110c228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110c400"/>
        <function-ref name="isInput" scoped="" ref="0x4110c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4110c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4110c6a0"/>
        <function-ref name="get" scoped="" ref="0x4110c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110c860"/>
        <function-ref name="set" scoped="" ref="0x4110c940"/>
        <function-ref name="clr" scoped="" ref="0x4110ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4110bc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4110bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4110bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4110bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4110a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4110a0f0"/>
        <function-ref name="get" scoped="" ref="0x4110a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110a2b0"/>
        <function-ref name="set" scoped="" ref="0x4110a390"/>
        <function-ref name="clr" scoped="" ref="0x4110a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411096c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411096c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41109898"/>
        <function-ref name="isInput" scoped="" ref="0x41109978"/>
        <function-ref name="toggle" scoped="" ref="0x41109a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41109b38"/>
        <function-ref name="get" scoped="" ref="0x41109c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41109cf8"/>
        <function-ref name="set" scoped="" ref="0x41109dd8"/>
        <function-ref name="clr" scoped="" ref="0x41109eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411070b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411070b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41107288"/>
        <function-ref name="isInput" scoped="" ref="0x41107368"/>
        <function-ref name="toggle" scoped="" ref="0x41107448"/>
        <function-ref name="isOutput" scoped="" ref="0x41107528"/>
        <function-ref name="get" scoped="" ref="0x41107608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411076e8"/>
        <function-ref name="set" scoped="" ref="0x411077c8"/>
        <function-ref name="clr" scoped="" ref="0x411078a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40427410" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40427410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404275e8"/>
        <function-ref name="isInput" scoped="" ref="0x404276c8"/>
        <function-ref name="toggle" scoped="" ref="0x404277a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40427888"/>
        <function-ref name="get" scoped="" ref="0x40427968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427a48"/>
        <function-ref name="set" scoped="" ref="0x40427b28"/>
        <function-ref name="clr" scoped="" ref="0x40427c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40425170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40425170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425348"/>
        <function-ref name="isInput" scoped="" ref="0x40425428"/>
        <function-ref name="toggle" scoped="" ref="0x40425508"/>
        <function-ref name="isOutput" scoped="" ref="0x404255e8"/>
        <function-ref name="get" scoped="" ref="0x404256c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404257a8"/>
        <function-ref name="set" scoped="" ref="0x40425888"/>
        <function-ref name="clr" scoped="" ref="0x40425968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40428128" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40428128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428300"/>
        <function-ref name="isInput" scoped="" ref="0x404283e0"/>
        <function-ref name="toggle" scoped="" ref="0x404284c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404285a0"/>
        <function-ref name="get" scoped="" ref="0x40428680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428760"/>
        <function-ref name="set" scoped="" ref="0x40428840"/>
        <function-ref name="clr" scoped="" ref="0x40428920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40427d68" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40427d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426010"/>
        <function-ref name="isInput" scoped="" ref="0x404260f0"/>
        <function-ref name="toggle" scoped="" ref="0x404261d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404262b0"/>
        <function-ref name="get" scoped="" ref="0x40426390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426470"/>
        <function-ref name="set" scoped="" ref="0x40426550"/>
        <function-ref name="clr" scoped="" ref="0x40426630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40425ac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40425ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40425d80"/>
        <function-ref name="toggle" scoped="" ref="0x40425e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f010"/>
        <function-ref name="get" scoped="" ref="0x4042f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f1d0"/>
        <function-ref name="set" scoped="" ref="0x4042f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40428a80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40428a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428c58"/>
        <function-ref name="isInput" scoped="" ref="0x40428d38"/>
        <function-ref name="toggle" scoped="" ref="0x40428e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40428ef8"/>
        <function-ref name="get" scoped="" ref="0x40427010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404270f0"/>
        <function-ref name="set" scoped="" ref="0x404271d0"/>
        <function-ref name="clr" scoped="" ref="0x404272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40426790" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40426790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426968"/>
        <function-ref name="isInput" scoped="" ref="0x40426a48"/>
        <function-ref name="toggle" scoped="" ref="0x40426b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40426c08"/>
        <function-ref name="get" scoped="" ref="0x40426ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426dc8"/>
        <function-ref name="set" scoped="" ref="0x40426ea8"/>
        <function-ref name="clr" scoped="" ref="0x40425010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042f4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f968"/>
        <function-ref name="get" scoped="" ref="0x4042fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042fb28"/>
        <function-ref name="set" scoped="" ref="0x4042fc08"/>
        <function-ref name="clr" scoped="" ref="0x4042fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41158538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41158538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41158710"/>
        <function-ref name="isInput" scoped="" ref="0x411587f0"/>
        <function-ref name="toggle" scoped="" ref="0x411588d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411589b0"/>
        <function-ref name="get" scoped="" ref="0x41158a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41158b70"/>
        <function-ref name="set" scoped="" ref="0x41158c50"/>
        <function-ref name="clr" scoped="" ref="0x41158d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41156010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41156010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411561e8"/>
        <function-ref name="isInput" scoped="" ref="0x411562c8"/>
        <function-ref name="toggle" scoped="" ref="0x411563a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41156488"/>
        <function-ref name="get" scoped="" ref="0x41156568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41156648"/>
        <function-ref name="set" scoped="" ref="0x41156728"/>
        <function-ref name="clr" scoped="" ref="0x41156808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411559e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411559e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41155bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41155ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41155d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41155e60"/>
        <function-ref name="get" scoped="" ref="0x41154010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411540f0"/>
        <function-ref name="set" scoped="" ref="0x411541d0"/>
        <function-ref name="clr" scoped="" ref="0x411542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41153538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41153538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41153710"/>
        <function-ref name="isInput" scoped="" ref="0x411537f0"/>
        <function-ref name="toggle" scoped="" ref="0x411538d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411539b0"/>
        <function-ref name="get" scoped="" ref="0x41153a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41153b70"/>
        <function-ref name="set" scoped="" ref="0x41153c50"/>
        <function-ref name="clr" scoped="" ref="0x41153d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41151010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41151010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411511e8"/>
        <function-ref name="isInput" scoped="" ref="0x411512c8"/>
        <function-ref name="toggle" scoped="" ref="0x411513a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41151488"/>
        <function-ref name="get" scoped="" ref="0x41151568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41151648"/>
        <function-ref name="set" scoped="" ref="0x41151728"/>
        <function-ref name="clr" scoped="" ref="0x41151808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411509e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411509e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41150bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41150ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41150d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41150e60"/>
        <function-ref name="get" scoped="" ref="0x4114f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4114f0f0"/>
        <function-ref name="set" scoped="" ref="0x4114f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4114f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4114e538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4114e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4114e710"/>
        <function-ref name="isInput" scoped="" ref="0x4114e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4114e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4114e9b0"/>
        <function-ref name="get" scoped="" ref="0x4114ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4114eb70"/>
        <function-ref name="set" scoped="" ref="0x4114ec50"/>
        <function-ref name="clr" scoped="" ref="0x4114ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4114c010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4114c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4114c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4114c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4114c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4114c488"/>
        <function-ref name="get" scoped="" ref="0x4114c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4114c648"/>
        <function-ref name="set" scoped="" ref="0x4114c728"/>
        <function-ref name="clr" scoped="" ref="0x4114c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4042be48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4042be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435050"/>
        <function-ref name="isInput" scoped="" ref="0x40435130"/>
        <function-ref name="toggle" scoped="" ref="0x40435210"/>
        <function-ref name="isOutput" scoped="" ref="0x404352f0"/>
        <function-ref name="get" scoped="" ref="0x404353d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404354b0"/>
        <function-ref name="set" scoped="" ref="0x40435590"/>
        <function-ref name="clr" scoped="" ref="0x40435670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40434ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40434ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40434d80"/>
        <function-ref name="toggle" scoped="" ref="0x40434e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40433010"/>
        <function-ref name="get" scoped="" ref="0x404330f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404331d0"/>
        <function-ref name="set" scoped="" ref="0x404332b0"/>
        <function-ref name="clr" scoped="" ref="0x40433390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042cb00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ccd8"/>
        <function-ref name="isInput" scoped="" ref="0x4042cdb8"/>
        <function-ref name="toggle" scoped="" ref="0x4042ce98"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b010"/>
        <function-ref name="get" scoped="" ref="0x4042b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b1d0"/>
        <function-ref name="set" scoped="" ref="0x4042b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404357d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404357d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404359a8"/>
        <function-ref name="isInput" scoped="" ref="0x40435a88"/>
        <function-ref name="toggle" scoped="" ref="0x40435b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40435c48"/>
        <function-ref name="get" scoped="" ref="0x40435d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435e08"/>
        <function-ref name="set" scoped="" ref="0x40435ee8"/>
        <function-ref name="clr" scoped="" ref="0x40434010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404334f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404334f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404336c8"/>
        <function-ref name="isInput" scoped="" ref="0x404337a8"/>
        <function-ref name="toggle" scoped="" ref="0x40433888"/>
        <function-ref name="isOutput" scoped="" ref="0x40433968"/>
        <function-ref name="get" scoped="" ref="0x40433a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433b28"/>
        <function-ref name="set" scoped="" ref="0x40433c08"/>
        <function-ref name="clr" scoped="" ref="0x40433ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042b4f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b968"/>
        <function-ref name="get" scoped="" ref="0x4042ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042bb28"/>
        <function-ref name="set" scoped="" ref="0x4042bc08"/>
        <function-ref name="clr" scoped="" ref="0x4042bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40434170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40434170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434348"/>
        <function-ref name="isInput" scoped="" ref="0x40434428"/>
        <function-ref name="toggle" scoped="" ref="0x40434508"/>
        <function-ref name="isOutput" scoped="" ref="0x404345e8"/>
        <function-ref name="get" scoped="" ref="0x404346c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404347a8"/>
        <function-ref name="set" scoped="" ref="0x40434888"/>
        <function-ref name="clr" scoped="" ref="0x40434968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40433e48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40433e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432050"/>
        <function-ref name="isInput" scoped="" ref="0x40432130"/>
        <function-ref name="toggle" scoped="" ref="0x40432210"/>
        <function-ref name="isOutput" scoped="" ref="0x404322f0"/>
        <function-ref name="get" scoped="" ref="0x404323d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404324b0"/>
        <function-ref name="set" scoped="" ref="0x40432590"/>
        <function-ref name="clr" scoped="" ref="0x40432670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115f418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x4115f6d0"/>
        <function-ref name="toggle" scoped="" ref="0x4115f7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115f890"/>
        <function-ref name="get" scoped="" ref="0x4115f970"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115fa50"/>
        <function-ref name="set" scoped="" ref="0x4115fb30"/>
        <function-ref name="clr" scoped="" ref="0x4115fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115ede0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115d010"/>
        <function-ref name="isInput" scoped="" ref="0x4115d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4115d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115d2b0"/>
        <function-ref name="get" scoped="" ref="0x4115d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115d470"/>
        <function-ref name="set" scoped="" ref="0x4115d550"/>
        <function-ref name="clr" scoped="" ref="0x4115d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115c7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4115cab0"/>
        <function-ref name="toggle" scoped="" ref="0x4115cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4115cc70"/>
        <function-ref name="get" scoped="" ref="0x4115cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115ce30"/>
        <function-ref name="set" scoped="" ref="0x4115cf10"/>
        <function-ref name="clr" scoped="" ref="0x4115b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115a228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115a400"/>
        <function-ref name="isInput" scoped="" ref="0x4115a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4115a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115a6a0"/>
        <function-ref name="get" scoped="" ref="0x4115a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115a860"/>
        <function-ref name="set" scoped="" ref="0x4115a940"/>
        <function-ref name="clr" scoped="" ref="0x4115aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41199c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41199c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41199de0"/>
        <function-ref name="isInput" scoped="" ref="0x41199ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41198010"/>
        <function-ref name="isOutput" scoped="" ref="0x411980f0"/>
        <function-ref name="get" scoped="" ref="0x411981d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411982b0"/>
        <function-ref name="set" scoped="" ref="0x41198390"/>
        <function-ref name="clr" scoped="" ref="0x41198470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411976c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411976c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41197898"/>
        <function-ref name="isInput" scoped="" ref="0x41197978"/>
        <function-ref name="toggle" scoped="" ref="0x41197a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41197b38"/>
        <function-ref name="get" scoped="" ref="0x41197c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41197cf8"/>
        <function-ref name="set" scoped="" ref="0x41197dd8"/>
        <function-ref name="clr" scoped="" ref="0x41197eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411950b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411950b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41195288"/>
        <function-ref name="isInput" scoped="" ref="0x41195368"/>
        <function-ref name="toggle" scoped="" ref="0x41195448"/>
        <function-ref name="isOutput" scoped="" ref="0x41195528"/>
        <function-ref name="get" scoped="" ref="0x41195608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411956e8"/>
        <function-ref name="set" scoped="" ref="0x411957c8"/>
        <function-ref name="clr" scoped="" ref="0x411958a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41194a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41194a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41194c60"/>
        <function-ref name="isInput" scoped="" ref="0x41194d40"/>
        <function-ref name="toggle" scoped="" ref="0x41194e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41194f00"/>
        <function-ref name="get" scoped="" ref="0x41193010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411930f0"/>
        <function-ref name="set" scoped="" ref="0x411931d0"/>
        <function-ref name="clr" scoped="" ref="0x411932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043a6b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a888"/>
        <function-ref name="isInput" scoped="" ref="0x4043a968"/>
        <function-ref name="toggle" scoped="" ref="0x4043aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ab28"/>
        <function-ref name="get" scoped="" ref="0x4043ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ace8"/>
        <function-ref name="set" scoped="" ref="0x4043adc8"/>
        <function-ref name="clr" scoped="" ref="0x4043aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40438330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40438330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438508"/>
        <function-ref name="isInput" scoped="" ref="0x404385e8"/>
        <function-ref name="toggle" scoped="" ref="0x404386c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404387a8"/>
        <function-ref name="get" scoped="" ref="0x40438888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438968"/>
        <function-ref name="set" scoped="" ref="0x40438a48"/>
        <function-ref name="clr" scoped="" ref="0x40438b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043b3d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4043b690"/>
        <function-ref name="toggle" scoped="" ref="0x4043b770"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b850"/>
        <function-ref name="get" scoped="" ref="0x4043b930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ba10"/>
        <function-ref name="set" scoped="" ref="0x4043baf0"/>
        <function-ref name="clr" scoped="" ref="0x4043bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40439030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40439030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439208"/>
        <function-ref name="isInput" scoped="" ref="0x404392e8"/>
        <function-ref name="toggle" scoped="" ref="0x404393c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404394a8"/>
        <function-ref name="get" scoped="" ref="0x40439588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439668"/>
        <function-ref name="set" scoped="" ref="0x40439748"/>
        <function-ref name="clr" scoped="" ref="0x40439828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40438c88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40438c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438e60"/>
        <function-ref name="isInput" scoped="" ref="0x40436010"/>
        <function-ref name="toggle" scoped="" ref="0x404360f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404361d0"/>
        <function-ref name="get" scoped="" ref="0x404362b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436390"/>
        <function-ref name="set" scoped="" ref="0x40436470"/>
        <function-ref name="clr" scoped="" ref="0x40436550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043bd30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bf08"/>
        <function-ref name="isInput" scoped="" ref="0x4043a010"/>
        <function-ref name="toggle" scoped="" ref="0x4043a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a1d0"/>
        <function-ref name="get" scoped="" ref="0x4043a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a390"/>
        <function-ref name="set" scoped="" ref="0x4043a470"/>
        <function-ref name="clr" scoped="" ref="0x4043a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40439988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40439988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439b60"/>
        <function-ref name="isInput" scoped="" ref="0x40439c40"/>
        <function-ref name="toggle" scoped="" ref="0x40439d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40439e00"/>
        <function-ref name="get" scoped="" ref="0x40439ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438010"/>
        <function-ref name="set" scoped="" ref="0x404380f0"/>
        <function-ref name="clr" scoped="" ref="0x404381d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404366b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404366b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436888"/>
        <function-ref name="isInput" scoped="" ref="0x40436968"/>
        <function-ref name="toggle" scoped="" ref="0x40436a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40436b28"/>
        <function-ref name="get" scoped="" ref="0x40436c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436ce8"/>
        <function-ref name="set" scoped="" ref="0x40436dc8"/>
        <function-ref name="clr" scoped="" ref="0x40436ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411abde8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411abde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a7010"/>
        <function-ref name="isInput" scoped="" ref="0x411a70f0"/>
        <function-ref name="toggle" scoped="" ref="0x411a71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411a72b0"/>
        <function-ref name="get" scoped="" ref="0x411a7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a7470"/>
        <function-ref name="set" scoped="" ref="0x411a7550"/>
        <function-ref name="clr" scoped="" ref="0x411a7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a67f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a69d0"/>
        <function-ref name="isInput" scoped="" ref="0x411a6ab0"/>
        <function-ref name="toggle" scoped="" ref="0x411a6b90"/>
        <function-ref name="isOutput" scoped="" ref="0x411a6c70"/>
        <function-ref name="get" scoped="" ref="0x411a6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a6e30"/>
        <function-ref name="set" scoped="" ref="0x411a6f10"/>
        <function-ref name="clr" scoped="" ref="0x411a5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a4228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a4400"/>
        <function-ref name="isInput" scoped="" ref="0x411a44e0"/>
        <function-ref name="toggle" scoped="" ref="0x411a45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411a46a0"/>
        <function-ref name="get" scoped="" ref="0x411a4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a4860"/>
        <function-ref name="set" scoped="" ref="0x411a4940"/>
        <function-ref name="clr" scoped="" ref="0x411a4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a3c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a3de0"/>
        <function-ref name="isInput" scoped="" ref="0x411a3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x411a2010"/>
        <function-ref name="isOutput" scoped="" ref="0x411a20f0"/>
        <function-ref name="get" scoped="" ref="0x411a21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a22b0"/>
        <function-ref name="set" scoped="" ref="0x411a2390"/>
        <function-ref name="clr" scoped="" ref="0x411a2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a16c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a1898"/>
        <function-ref name="isInput" scoped="" ref="0x411a1978"/>
        <function-ref name="toggle" scoped="" ref="0x411a1a58"/>
        <function-ref name="isOutput" scoped="" ref="0x411a1b38"/>
        <function-ref name="get" scoped="" ref="0x411a1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a1cf8"/>
        <function-ref name="set" scoped="" ref="0x411a1dd8"/>
        <function-ref name="clr" scoped="" ref="0x411a1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119f0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119f288"/>
        <function-ref name="isInput" scoped="" ref="0x4119f368"/>
        <function-ref name="toggle" scoped="" ref="0x4119f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4119f528"/>
        <function-ref name="get" scoped="" ref="0x4119f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119f6e8"/>
        <function-ref name="set" scoped="" ref="0x4119f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4119f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119ea88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4119ed40"/>
        <function-ref name="toggle" scoped="" ref="0x4119ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x4119ef00"/>
        <function-ref name="get" scoped="" ref="0x4119c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119c0f0"/>
        <function-ref name="set" scoped="" ref="0x4119c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4119c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4119b538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4119b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4119b710"/>
        <function-ref name="isInput" scoped="" ref="0x4119b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4119b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4119b9b0"/>
        <function-ref name="get" scoped="" ref="0x4119ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4119bb70"/>
        <function-ref name="set" scoped="" ref="0x4119bc50"/>
        <function-ref name="clr" scoped="" ref="0x4119bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043e880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043ea58"/>
        <function-ref name="isInput" scoped="" ref="0x4043eb38"/>
        <function-ref name="toggle" scoped="" ref="0x4043ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ecf8"/>
        <function-ref name="get" scoped="" ref="0x4043edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043eeb8"/>
        <function-ref name="set" scoped="" ref="0x4043d010"/>
        <function-ref name="clr" scoped="" ref="0x4043d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404530b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404530b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453288"/>
        <function-ref name="isInput" scoped="" ref="0x40453368"/>
        <function-ref name="toggle" scoped="" ref="0x40453448"/>
        <function-ref name="isOutput" scoped="" ref="0x40453528"/>
        <function-ref name="get" scoped="" ref="0x40453608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404536e8"/>
        <function-ref name="set" scoped="" ref="0x404537c8"/>
        <function-ref name="clr" scoped="" ref="0x404538a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40451880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40451880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451a58"/>
        <function-ref name="isInput" scoped="" ref="0x40451b38"/>
        <function-ref name="toggle" scoped="" ref="0x40451c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40451cf8"/>
        <function-ref name="get" scoped="" ref="0x40451dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451eb8"/>
        <function-ref name="set" scoped="" ref="0x40450010"/>
        <function-ref name="clr" scoped="" ref="0x404500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404590b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404590b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459288"/>
        <function-ref name="isInput" scoped="" ref="0x40459368"/>
        <function-ref name="toggle" scoped="" ref="0x40459448"/>
        <function-ref name="isOutput" scoped="" ref="0x40459528"/>
        <function-ref name="get" scoped="" ref="0x40459608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404596e8"/>
        <function-ref name="set" scoped="" ref="0x404597c8"/>
        <function-ref name="clr" scoped="" ref="0x404598a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40457880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40457880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457a58"/>
        <function-ref name="isInput" scoped="" ref="0x40457b38"/>
        <function-ref name="toggle" scoped="" ref="0x40457c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40457cf8"/>
        <function-ref name="get" scoped="" ref="0x40457dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457eb8"/>
        <function-ref name="set" scoped="" ref="0x40456010"/>
        <function-ref name="clr" scoped="" ref="0x404560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045f0b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f288"/>
        <function-ref name="isInput" scoped="" ref="0x4045f368"/>
        <function-ref name="toggle" scoped="" ref="0x4045f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f528"/>
        <function-ref name="get" scoped="" ref="0x4045f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f6e8"/>
        <function-ref name="set" scoped="" ref="0x4045f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4045f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045d8f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045dac8"/>
        <function-ref name="isInput" scoped="" ref="0x4045dba8"/>
        <function-ref name="toggle" scoped="" ref="0x4045dc88"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dd68"/>
        <function-ref name="get" scoped="" ref="0x4045de48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045df28"/>
        <function-ref name="set" scoped="" ref="0x4045c018"/>
        <function-ref name="clr" scoped="" ref="0x4045c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045a0b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a288"/>
        <function-ref name="isInput" scoped="" ref="0x4045a368"/>
        <function-ref name="toggle" scoped="" ref="0x4045a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a528"/>
        <function-ref name="get" scoped="" ref="0x4045a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a6e8"/>
        <function-ref name="set" scoped="" ref="0x4045a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4045a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40463880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40463880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463a58"/>
        <function-ref name="isInput" scoped="" ref="0x40463b38"/>
        <function-ref name="toggle" scoped="" ref="0x40463c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40463cf8"/>
        <function-ref name="get" scoped="" ref="0x40463dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463eb8"/>
        <function-ref name="set" scoped="" ref="0x40462010"/>
        <function-ref name="clr" scoped="" ref="0x404620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404600b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404600b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460288"/>
        <function-ref name="isInput" scoped="" ref="0x40460368"/>
        <function-ref name="toggle" scoped="" ref="0x40460448"/>
        <function-ref name="isOutput" scoped="" ref="0x40460528"/>
        <function-ref name="get" scoped="" ref="0x40460608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404606e8"/>
        <function-ref name="set" scoped="" ref="0x404607c8"/>
        <function-ref name="clr" scoped="" ref="0x404608a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40469880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40469880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469a58"/>
        <function-ref name="isInput" scoped="" ref="0x40469b38"/>
        <function-ref name="toggle" scoped="" ref="0x40469c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40469cf8"/>
        <function-ref name="get" scoped="" ref="0x40469dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469eb8"/>
        <function-ref name="set" scoped="" ref="0x40468010"/>
        <function-ref name="clr" scoped="" ref="0x404680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404660b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404660b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466288"/>
        <function-ref name="isInput" scoped="" ref="0x40466368"/>
        <function-ref name="toggle" scoped="" ref="0x40466448"/>
        <function-ref name="isOutput" scoped="" ref="0x40466528"/>
        <function-ref name="get" scoped="" ref="0x40466608"/>
        <function-ref name="makeOutput" scoped="" ref="0x404666e8"/>
        <function-ref name="set" scoped="" ref="0x404667c8"/>
        <function-ref name="clr" scoped="" ref="0x404668a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40470880" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40470880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470a58"/>
        <function-ref name="isInput" scoped="" ref="0x40470b38"/>
        <function-ref name="toggle" scoped="" ref="0x40470c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40470cf8"/>
        <function-ref name="get" scoped="" ref="0x40470dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470eb8"/>
        <function-ref name="set" scoped="" ref="0x4046f010"/>
        <function-ref name="clr" scoped="" ref="0x4046f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4048a4d0" loc="50:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4048a4d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4048a880" loc="51:/opt/tinyos-2.1.1/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4048a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4048aa58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4048ab38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4048ac18"/>
        <function-ref name="actualMicro" scoped="" ref="0x4048acf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4048add8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4049c030" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4049c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4048d2b8" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4048d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4048d490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4048dc18" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4048dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4048d650" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4048d650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048d828"/>
        <function-ref name="taskLoop" scoped="" ref="0x4048d908"/>
        <function-ref name="runNextTask" scoped="" ref="0x4048d9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40302600" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40302600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403027d8"/>
        <function-ref name="runTask" scoped="" ref="0x403028b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402fced8" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402fced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f80c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f81a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f8280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40380670" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40380670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40380848"/>
        <function-ref name="runTask" scoped="" ref="0x40380928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40385310" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40385310"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403854e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40381df8" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40381df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40380010"/>
        <function-ref name="taskLoop" scoped="" ref="0x403800f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403801d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40394e88" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40394e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40397070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402f7c28" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402f7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402f7e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403908f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403908f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40390ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404a8df8" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404a8df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404a3010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404a30f0"/>
        <function-ref name="led1On" scoped="" ref="0x404a31d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404a32b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404a3390"/>
        <function-ref name="get" scoped="" ref="0x404a3470"/>
        <function-ref name="led1Off" scoped="" ref="0x404a3550"/>
        <function-ref name="led2Off" scoped="" ref="0x404a38d0"/>
        <function-ref name="set" scoped="" ref="0x404a3630"/>
        <function-ref name="led0On" scoped="" ref="0x404a3710"/>
        <function-ref name="led2On" scoped="" ref="0x404a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404b3240" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404b3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3418"/>
        <function-ref name="isInput" scoped="" ref="0x404b34f8"/>
        <function-ref name="toggle" scoped="" ref="0x404b35d8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b36b8"/>
        <function-ref name="get" scoped="" ref="0x404b3798"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3878"/>
        <function-ref name="set" scoped="" ref="0x404b3958"/>
        <function-ref name="clr" scoped="" ref="0x404b3a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b4168" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404b3c28" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404b3c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3e00"/>
        <function-ref name="isInput" scoped="" ref="0x404b3ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404b2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b20f0"/>
        <function-ref name="get" scoped="" ref="0x404b21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b22b0"/>
        <function-ref name="set" scoped="" ref="0x404b2390"/>
        <function-ref name="clr" scoped="" ref="0x404b2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404b44b0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404b44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b4688"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b4768"/>
        <function-ref name="led1On" scoped="" ref="0x404b4848"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b4928"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b4a08"/>
        <function-ref name="get" scoped="" ref="0x404b4ae8"/>
        <function-ref name="led1Off" scoped="" ref="0x404b4bc8"/>
        <function-ref name="led2Off" scoped="" ref="0x404b3010"/>
        <function-ref name="set" scoped="" ref="0x404b4ca8"/>
        <function-ref name="led0On" scoped="" ref="0x404b4d88"/>
        <function-ref name="led2On" scoped="" ref="0x404b4e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404b2660" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404b2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2838"/>
        <function-ref name="isInput" scoped="" ref="0x404b2918"/>
        <function-ref name="toggle" scoped="" ref="0x404b29f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2ad8"/>
        <function-ref name="get" scoped="" ref="0x404b2bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2c98"/>
        <function-ref name="set" scoped="" ref="0x404b2d78"/>
        <function-ref name="clr" scoped="" ref="0x404b2e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404be978" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404be978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404beb50"/>
        <function-ref name="isInput" scoped="" ref="0x404bec30"/>
        <function-ref name="toggle" scoped="" ref="0x404bed10"/>
        <function-ref name="isOutput" scoped="" ref="0x404bedf0"/>
        <function-ref name="get" scoped="" ref="0x404beed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd010"/>
        <function-ref name="set" scoped="" ref="0x404bd0f0"/>
        <function-ref name="clr" scoped="" ref="0x404bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404bd3e0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404bd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd5b8"/>
        <function-ref name="isInput" scoped="" ref="0x404bd698"/>
        <function-ref name="toggle" scoped="" ref="0x404bd778"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd858"/>
        <function-ref name="get" scoped="" ref="0x404bd938"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bda18"/>
        <function-ref name="set" scoped="" ref="0x404bdaf8"/>
        <function-ref name="clr" scoped="" ref="0x404bdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404bc7c0" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bc998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404bdde8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404bdde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc010"/>
        <function-ref name="isInput" scoped="" ref="0x404bc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404bc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc2b0"/>
        <function-ref name="get" scoped="" ref="0x404bc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc470"/>
        <function-ref name="set" scoped="" ref="0x404bc550"/>
        <function-ref name="clr" scoped="" ref="0x404bc630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x404cc270" loc="13:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x404cc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404c5d58"/>
        <function-ref name="fired" scoped="" ref="0x404c5010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404c5718"/>
        <function-ref name="isOneShot" scoped="" ref="0x404c54c0"/>
        <function-ref name="getdt" scoped="" ref="0x404c4268"/>
        <function-ref name="gett0" scoped="" ref="0x404c4010"/>
        <function-ref name="isRunning" scoped="" ref="0x404c5268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404cc898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404c5a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ccb18"/>
        <function-ref name="stop" scoped="" ref="0x404ccd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x40524dc0" loc="18:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x40524dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40520010"/>
        <function-ref name="stopDone" scoped="" ref="0x405200f0"/>
        <function-ref name="start" scoped="" ref="0x405201d0"/>
        <function-ref name="stop" scoped="" ref="0x405202b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403a5878" loc="11:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a5878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403a5a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4050fce8" loc="14:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4050fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4050fec0"/>
        <function-ref name="payloadLength" scoped="" ref="0x404ca010"/>
        <function-ref name="getPayload" scoped="" ref="0x404ca0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404ca1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4051c7d0" loc="16:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4051c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4051c9a8"/>
        <function-ref name="getPayload" scoped="" ref="0x4051ca88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4051cb68"/>
        <function-ref name="cancel" scoped="" ref="0x4051cc48"/>
        <function-ref name="sendDone" scoped="" ref="0x4051cd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x405258e8" loc="17:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405258e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40525ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403a5be0" loc="12:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403a5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403a5db8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403a5e98"/>
        <function-ref name="led1On" scoped="" ref="0x404c6010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404c60f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404c61d0"/>
        <function-ref name="get" scoped="" ref="0x404c62b0"/>
        <function-ref name="led1Off" scoped="" ref="0x404c6390"/>
        <function-ref name="led2Off" scoped="" ref="0x404c6710"/>
        <function-ref name="set" scoped="" ref="0x404c6470"/>
        <function-ref name="led0On" scoped="" ref="0x404c6550"/>
        <function-ref name="led2On" scoped="" ref="0x404c6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40521a98" loc="15:ProximityC.nc">
      <component-ref qname="ProximityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40521a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40521c70"/>
        <function-ref name="source" scoped="" ref="0x40521d50"/>
        <function-ref name="address" scoped="" ref="0x40521e30"/>
        <function-ref name="destination" scoped="" ref="0x40521f10"/>
        <function-ref name="setSource" scoped="" ref="0x404d7010"/>
        <function-ref name="setDestination" scoped="" ref="0x404d70f0"/>
        <function-ref name="type" scoped="" ref="0x404d71d0"/>
        <function-ref name="setType" scoped="" ref="0x404d72b0"/>
        <function-ref name="isForMe" scoped="" ref="0x404d7390"/>
        <function-ref name="setGroup" scoped="" ref="0x404d7470"/>
        <function-ref name="localGroup" scoped="" ref="0x404d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404c7b60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ProximityAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404c7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405406a8"/>
        <function-ref name="fired" scoped="" ref="0x40535938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40540068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40535de8"/>
        <function-ref name="getdt" scoped="" ref="0x40540b58"/>
        <function-ref name="gett0" scoped="" ref="0x40540900"/>
        <function-ref name="isRunning" scoped="" ref="0x40535b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405351e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40540388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40535460"/>
        <function-ref name="stop" scoped="" ref="0x405356e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40532e18" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40532e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4053d920"/>
        <function-ref name="fired" scoped="" ref="0x4053fbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4053d2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4053d088"/>
        <function-ref name="getdt" scoped="" ref="0x4053ddd0"/>
        <function-ref name="gett0" scoped="" ref="0x4053db78"/>
        <function-ref name="isRunning" scoped="" ref="0x4053fe18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4053f468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4053d600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4053f6e8"/>
        <function-ref name="stop" scoped="" ref="0x4053f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4053ce18" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4053ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40547920"/>
        <function-ref name="fired" scoped="" ref="0x40549bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405472e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40547088"/>
        <function-ref name="getdt" scoped="" ref="0x40547dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40547b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40549e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40549468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40547600"/>
        <function-ref name="startOneShot" scoped="" ref="0x405496e8"/>
        <function-ref name="stop" scoped="" ref="0x40549968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40546e30" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40546e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40545488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4053c668" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4053c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4053c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40557658" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40557658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40557da8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405592c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40559048"/>
        <function-ref name="overflow" scoped="" ref="0x40559538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405434d0" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405434d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405436a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4054ccb8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4054ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4054b190"/>
        <function-ref name="fired" scoped="" ref="0x40550938"/>
        <function-ref name="startAt" scoped="" ref="0x40550e28"/>
        <function-ref name="isRunning" scoped="" ref="0x40550bb0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4054b408"/>
        <function-ref name="start" scoped="" ref="0x40550420"/>
        <function-ref name="stop" scoped="" ref="0x405506c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x405e6010" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e54e0"/>
        <function-ref name="fired" scoped="" ref="0x405e6c78"/>
        <function-ref name="startAt" scoped="" ref="0x405e51a0"/>
        <function-ref name="isRunning" scoped="" ref="0x405e6ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405e5758"/>
        <function-ref name="start" scoped="" ref="0x405e6760"/>
        <function-ref name="stop" scoped="" ref="0x405e6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40555bb8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40555bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f95d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f95d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40555d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405e5a88" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405e5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e4200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405e46f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405e4478"/>
        <function-ref name="overflow" scoped="" ref="0x405e4968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x412314e0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x412314e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x412316b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41231798"/>
        <function-ref name="getControlA" scoped="" ref="0x41231878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41231958"/>
        <function-ref name="setControlB" scoped="" ref="0x41231a38"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41231b18"/>
        <function-ref name="getControlB" scoped="" ref="0x41231bf8"/>
        <function-ref name="setControlA" scoped="" ref="0x41231cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41237638" loc="50:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41237638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41236af0"/>
        <function-ref name="fired" scoped="" ref="0x412362c0"/>
        <function-ref name="startAt" scoped="" ref="0x412367b0"/>
        <function-ref name="isRunning" scoped="" ref="0x41236538"/>
        <function-ref name="getAlarm" scoped="" ref="0x41236d68"/>
        <function-ref name="start" scoped="" ref="0x41237d88"/>
        <function-ref name="stop" scoped="" ref="0x41236048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41237200" loc="49:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41237200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412373d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x412350c0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x412350c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41235810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41235d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41235a88"/>
        <function-ref name="overflow" scoped="" ref="0x41233010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4122e9a8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4122e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4122eb80"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4122ec60"/>
        <function-ref name="controlABusy" scoped="" ref="0x4122ed40"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4122ee20"/>
        <function-ref name="countBusy" scoped="" ref="0x4122ef00"/>
        <function-ref name="compareABusy" scoped="" ref="0x4122d010"/>
        <function-ref name="getAssr" scoped="" ref="0x4122d0f0"/>
        <function-ref name="setAssr" scoped="" ref="0x4122d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41231ec8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41231ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4122e500"/>
        <function-ref name="fired" scoped="" ref="0x41230a90"/>
        <function-ref name="get" scoped="" ref="0x41230578"/>
        <function-ref name="reset" scoped="" ref="0x41230d08"/>
        <function-ref name="isOn" scoped="" ref="0x4122e778"/>
        <function-ref name="set" scoped="" ref="0x412307f0"/>
        <function-ref name="start" scoped="" ref="0x4122e010"/>
        <function-ref name="stop" scoped="" ref="0x4122e288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41233300" loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41233300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41232d68"/>
        <function-ref name="test" scoped="" ref="0x41232878"/>
        <function-ref name="get" scoped="" ref="0x41233948"/>
        <function-ref name="setScale" scoped="" ref="0x41231010"/>
        <function-ref name="getScale" scoped="" ref="0x412312b0"/>
        <function-ref name="reset" scoped="" ref="0x41232110"/>
        <function-ref name="overflow" scoped="" ref="0x41233e60"/>
        <function-ref name="isOn" scoped="" ref="0x41232af0"/>
        <function-ref name="set" scoped="" ref="0x41233bc0"/>
        <function-ref name="start" scoped="" ref="0x41232388"/>
        <function-ref name="stop" scoped="" ref="0x41232600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405a7360" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405a7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405a7538"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405a7618"/>
        <function-ref name="getControlA" scoped="" ref="0x405a76f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405a77d8"/>
        <function-ref name="setControlB" scoped="" ref="0x405a78b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405a7998"/>
        <function-ref name="getControlB" scoped="" ref="0x405a7a78"/>
        <function-ref name="setControlA" scoped="" ref="0x405a7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405a59b8" loc="73:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405a59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405a5b90"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405a5c70"/>
        <function-ref name="controlABusy" scoped="" ref="0x405a5d50"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405a5e30"/>
        <function-ref name="countBusy" scoped="" ref="0x405a5f10"/>
        <function-ref name="compareABusy" scoped="" ref="0x405a4010"/>
        <function-ref name="getAssr" scoped="" ref="0x405a40f0"/>
        <function-ref name="setAssr" scoped="" ref="0x405a41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405a7e80" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405a7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405a53e8"/>
        <function-ref name="fired" scoped="" ref="0x405a69f0"/>
        <function-ref name="get" scoped="" ref="0x405a64d8"/>
        <function-ref name="reset" scoped="" ref="0x405a6c68"/>
        <function-ref name="isOn" scoped="" ref="0x405a5660"/>
        <function-ref name="set" scoped="" ref="0x405a6750"/>
        <function-ref name="start" scoped="" ref="0x405a6ee0"/>
        <function-ref name="stop" scoped="" ref="0x405a5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4059a010" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4059a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405a9a68"/>
        <function-ref name="test" scoped="" ref="0x405a9578"/>
        <function-ref name="get" scoped="" ref="0x4059a658"/>
        <function-ref name="setScale" scoped="" ref="0x405a9ce0"/>
        <function-ref name="getScale" scoped="" ref="0x405a7010"/>
        <function-ref name="reset" scoped="" ref="0x4059ade8"/>
        <function-ref name="overflow" scoped="" ref="0x4059ab70"/>
        <function-ref name="isOn" scoped="" ref="0x405a97f0"/>
        <function-ref name="set" scoped="" ref="0x4059a8d0"/>
        <function-ref name="start" scoped="" ref="0x405a9088"/>
        <function-ref name="stop" scoped="" ref="0x405a9300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405af1a0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405af1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405af378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405af458"/>
        <function-ref name="getControlA" scoped="" ref="0x405af538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405af618"/>
        <function-ref name="setControlB" scoped="" ref="0x405af6f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405af7d8"/>
        <function-ref name="getControlB" scoped="" ref="0x405af8b8"/>
        <function-ref name="setControlA" scoped="" ref="0x405af998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405ad7b8" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405ad7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405adc18" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405adc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405addf0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405aded0"/>
        <function-ref name="controlABusy" scoped="" ref="0x405ab010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405ab0f0"/>
        <function-ref name="countBusy" scoped="" ref="0x405ab1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x405ab2b0"/>
        <function-ref name="getAssr" scoped="" ref="0x405ab390"/>
        <function-ref name="setAssr" scoped="" ref="0x405ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405afcc0" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405ad288"/>
        <function-ref name="fired" scoped="" ref="0x405ae830"/>
        <function-ref name="get" scoped="" ref="0x405ae318"/>
        <function-ref name="reset" scoped="" ref="0x405aeaa8"/>
        <function-ref name="isOn" scoped="" ref="0x405ad500"/>
        <function-ref name="set" scoped="" ref="0x405ae590"/>
        <function-ref name="start" scoped="" ref="0x405aed20"/>
        <function-ref name="stop" scoped="" ref="0x405ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405a4ec0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405a4ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405b0918"/>
        <function-ref name="test" scoped="" ref="0x405b0428"/>
        <function-ref name="get" scoped="" ref="0x405b2520"/>
        <function-ref name="setScale" scoped="" ref="0x405b0b90"/>
        <function-ref name="getScale" scoped="" ref="0x405b0e30"/>
        <function-ref name="reset" scoped="" ref="0x405b2cb0"/>
        <function-ref name="overflow" scoped="" ref="0x405b2a38"/>
        <function-ref name="isOn" scoped="" ref="0x405b06a0"/>
        <function-ref name="set" scoped="" ref="0x405b2798"/>
        <function-ref name="start" scoped="" ref="0x405b2f28"/>
        <function-ref name="stop" scoped="" ref="0x405b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40600bd0" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40600bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40600da8"/>
        <function-ref name="runTask" scoped="" ref="0x40600e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40601248" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40601248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40600708"/>
        <function-ref name="fired" scoped="" ref="0x40601eb0"/>
        <function-ref name="startAt" scoped="" ref="0x406003c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40600150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40600980"/>
        <function-ref name="start" scoped="" ref="0x40601998"/>
        <function-ref name="stop" scoped="" ref="0x40601c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40551f08" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40551f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40602a18"/>
        <function-ref name="fired" scoped="" ref="0x40603cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406023d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40602180"/>
        <function-ref name="getdt" scoped="" ref="0x40602ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40602c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40603f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40603558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406026f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406037d8"/>
        <function-ref name="stop" scoped="" ref="0x40603a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4062d4b8" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4062d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062d690"/>
        <function-ref name="runTask" scoped="" ref="0x4062d770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40630220" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40630220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062ed58"/>
        <function-ref name="fired" scoped="" ref="0x4062e010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062e718"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062e4c0"/>
        <function-ref name="getdt" scoped="" ref="0x4062d268"/>
        <function-ref name="gett0" scoped="" ref="0x4062d010"/>
        <function-ref name="isRunning" scoped="" ref="0x4062e268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40630848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062ea38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40630ac8"/>
        <function-ref name="stop" scoped="" ref="0x40630d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405fdea8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405fdea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40631a48"/>
        <function-ref name="fired" scoped="" ref="0x405fcc88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406313e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40631180"/>
        <function-ref name="getdt" scoped="" ref="0x40631f18"/>
        <function-ref name="gett0" scoped="" ref="0x40631cb0"/>
        <function-ref name="isRunning" scoped="" ref="0x405fcef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405fc500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40631718"/>
        <function-ref name="startOneShot" scoped="" ref="0x405fc790"/>
        <function-ref name="stop" scoped="" ref="0x405fca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4062b940" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4062b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4062a360" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062aab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40639010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4062ad28"/>
        <function-ref name="overflow" scoped="" ref="0x40639288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406356e0" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406356e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406358b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40635998"/>
        <function-ref name="start" scoped="" ref="0x40635a78"/>
        <function-ref name="stop" scoped="" ref="0x40635b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4064a1a0" loc="47:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4064a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4064aca0"/>
        <function-ref name="clear" scoped="" ref="0x40656068"/>
        <function-ref name="isValid" scoped="" ref="0x4064a8f0"/>
        <function-ref name="set" scoped="" ref="0x40656418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40642880" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40642880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40642a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40632010" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40632010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406321e8"/>
        <function-ref name="getPayload" scoped="" ref="0x406322c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406323a8"/>
        <function-ref name="cancel" scoped="" ref="0x40632488"/>
        <function-ref name="sendDone" scoped="" ref="0x40632568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40645100" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40645100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406452d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40642bd8" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40642bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40642db0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40642e90"/>
        <function-ref name="getPayload" scoped="" ref="0x40644010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406440f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406441d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4064c1b8" loc="41:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4064c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4064c390"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4064c470"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4064c550"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4064c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406329d0" loc="33:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406329d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40632ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4063d518" loc="40:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4063d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4063d6f0"/>
        <function-ref name="noAck" scoped="" ref="0x4063d7d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4063d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40649b68" loc="43:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40649b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40649d40"/>
        <function-ref name="setRetries" scoped="" ref="0x40649e20"/>
        <function-ref name="getRetries" scoped="" ref="0x40649f00"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40641010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40644368" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40644368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40644540"/>
        <function-ref name="source" scoped="" ref="0x40644620"/>
        <function-ref name="address" scoped="" ref="0x40644700"/>
        <function-ref name="destination" scoped="" ref="0x406447e0"/>
        <function-ref name="setSource" scoped="" ref="0x406448c0"/>
        <function-ref name="setDestination" scoped="" ref="0x406449a0"/>
        <function-ref name="type" scoped="" ref="0x40644a80"/>
        <function-ref name="setType" scoped="" ref="0x40644b60"/>
        <function-ref name="isForMe" scoped="" ref="0x40644c40"/>
        <function-ref name="setGroup" scoped="" ref="0x40644d20"/>
        <function-ref name="localGroup" scoped="" ref="0x40644e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x406467c0" loc="46:/opt/tinyos-2.1.1/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406402d8"/>
        <function-ref name="clear" scoped="" ref="0x40640688"/>
        <function-ref name="isValid" scoped="" ref="0x40646f10"/>
        <function-ref name="set" scoped="" ref="0x40640a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40656e90" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40656e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40653080"/>
        <function-ref name="stopDone" scoped="" ref="0x40653160"/>
        <function-ref name="start" scoped="" ref="0x40653240"/>
        <function-ref name="stop" scoped="" ref="0x40653320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4065bbd8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4065bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4066d7b8"/>
        <function-ref name="get" scoped="" ref="0x4066d4f8"/>
        <function-ref name="isSet" scoped="" ref="0x4066d238"/>
        <function-ref name="set" scoped="" ref="0x4066da78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40652e68" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40652e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40651050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406511d0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406511d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406513a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40651488"/>
        <function-ref name="getPayload" scoped="" ref="0x40651568"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40651648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40651728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40653780" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40653780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40653958"/>
        <function-ref name="getPayload" scoped="" ref="0x40653a38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40653b18"/>
        <function-ref name="cancel" scoped="" ref="0x40653bf8"/>
        <function-ref name="sendDone" scoped="" ref="0x40653cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406527f0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406527f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406529c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4065e7f0" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4065e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065b450"/>
        <function-ref name="get" scoped="" ref="0x4065b190"/>
        <function-ref name="isSet" scoped="" ref="0x4065eeb8"/>
        <function-ref name="set" scoped="" ref="0x4065b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40650b38" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40650b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40650d10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40650df0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40650ed0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40662010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40652158" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40652158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40652330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4066cba8" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4066cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4066b6c8"/>
        <function-ref name="clear" scoped="" ref="0x4066ba78"/>
        <function-ref name="isValid" scoped="" ref="0x4066b318"/>
        <function-ref name="set" scoped="" ref="0x4066be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4066c010" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4066c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4066c658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4065c3e0" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4065c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4065e010"/>
        <function-ref name="get" scoped="" ref="0x4065cce8"/>
        <function-ref name="isSet" scoped="" ref="0x4065ca28"/>
        <function-ref name="set" scoped="" ref="0x4065e2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406505b0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406505b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40650788"/>
        <function-ref name="noAck" scoped="" ref="0x40650868"/>
        <function-ref name="wasAcked" scoped="" ref="0x40650948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406621b8" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406621b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40662390"/>
        <function-ref name="setRetries" scoped="" ref="0x40662470"/>
        <function-ref name="getRetries" scoped="" ref="0x40662550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40662630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40662710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406518c0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40651a98"/>
        <function-ref name="source" scoped="" ref="0x40651b78"/>
        <function-ref name="address" scoped="" ref="0x40651c58"/>
        <function-ref name="destination" scoped="" ref="0x40651d38"/>
        <function-ref name="setSource" scoped="" ref="0x40651e18"/>
        <function-ref name="setDestination" scoped="" ref="0x40651ef8"/>
        <function-ref name="type" scoped="" ref="0x40650010"/>
        <function-ref name="setType" scoped="" ref="0x406500f0"/>
        <function-ref name="isForMe" scoped="" ref="0x406501d0"/>
        <function-ref name="setGroup" scoped="" ref="0x406502b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40650390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4065fbb8" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4065fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4065fd90"/>
        <function-ref name="setChannel" scoped="" ref="0x4065fe70"/>
        <function-ref name="getChannel" scoped="" ref="0x40661010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40669578" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40669578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40668088"/>
        <function-ref name="clear" scoped="" ref="0x40668438"/>
        <function-ref name="isValid" scoped="" ref="0x40669cc8"/>
        <function-ref name="set" scoped="" ref="0x406687e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406651b0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406651b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40665388"/>
        <function-ref name="stopDone" scoped="" ref="0x40665468"/>
        <function-ref name="start" scoped="" ref="0x40665548"/>
        <function-ref name="stop" scoped="" ref="0x40665628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40689f08" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40689f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40687af8"/>
        <function-ref name="get" scoped="" ref="0x40687838"/>
        <function-ref name="isSet" scoped="" ref="0x40687578"/>
        <function-ref name="set" scoped="" ref="0x40687db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x406740c8" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x406740c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406742a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4067e820" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4067e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4067e9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4067ead8"/>
        <function-ref name="request" scoped="" ref="0x4067ebb8"/>
        <function-ref name="granted" scoped="" ref="0x4067ec98"/>
        <function-ref name="isOwner" scoped="" ref="0x4067ed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406761b0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406761b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40676388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40665a88" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40665a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40665c60"/>
        <function-ref name="getPayload" scoped="" ref="0x40665d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40665e20"/>
        <function-ref name="cancel" scoped="" ref="0x40665f00"/>
        <function-ref name="sendDone" scoped="" ref="0x40664010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40664b10" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40664b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40664ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x406799c0" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x406799c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40679b98"/>
        <function-ref name="address" scoped="" ref="0x40679c78"/>
        <function-ref name="destination" scoped="" ref="0x40679d58"/>
        <function-ref name="setSource" scoped="" ref="0x40679e38"/>
        <function-ref name="setDestination" scoped="" ref="0x40679f18"/>
        <function-ref name="pan" scoped="" ref="0x40680010"/>
        <function-ref name="setPan" scoped="" ref="0x406800f0"/>
        <function-ref name="isForMe" scoped="" ref="0x406801d0"/>
        <function-ref name="localPan" scoped="" ref="0x406802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40680538" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40680538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40680790"/>
        <function-ref name="payloadLength" scoped="" ref="0x40680870"/>
        <function-ref name="getPayload" scoped="" ref="0x40680950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40680a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40680b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4067d2e0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4067d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4067d4b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4067d598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4067d678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4067d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4068aae8" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4068aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40689780"/>
        <function-ref name="get" scoped="" ref="0x406894c0"/>
        <function-ref name="isSet" scoped="" ref="0x40689200"/>
        <function-ref name="set" scoped="" ref="0x40689a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40664478" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40664478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40664650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40675290" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40675290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40675468"/>
        <function-ref name="payloadLength" scoped="" ref="0x40675548"/>
        <function-ref name="getPayload" scoped="" ref="0x40675628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40675708"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406757e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40686e40" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40686e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40685990"/>
        <function-ref name="clear" scoped="" ref="0x40685d40"/>
        <function-ref name="isValid" scoped="" ref="0x406855e0"/>
        <function-ref name="set" scoped="" ref="0x40683108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406862a8" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406862a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4068b730" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4068b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4068a308"/>
        <function-ref name="get" scoped="" ref="0x4068a048"/>
        <function-ref name="isSet" scoped="" ref="0x4068bd78"/>
        <function-ref name="set" scoped="" ref="0x4068a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40680d30" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40680d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40680f08"/>
        <function-ref name="noAck" scoped="" ref="0x4067d010"/>
        <function-ref name="wasAcked" scoped="" ref="0x4067d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40681458" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40681458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40681630"/>
        <function-ref name="getPayload" scoped="" ref="0x40681710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406817f0"/>
        <function-ref name="cancel" scoped="" ref="0x406818d0"/>
        <function-ref name="sendDone" scoped="" ref="0x406819b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4067d900" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4067d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4067dad8"/>
        <function-ref name="setRetries" scoped="" ref="0x4067dbb8"/>
        <function-ref name="getRetries" scoped="" ref="0x4067dc98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4067dd78"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4067de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40676520" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40676520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406766f8"/>
        <function-ref name="source" scoped="" ref="0x406767d8"/>
        <function-ref name="address" scoped="" ref="0x406768b8"/>
        <function-ref name="destination" scoped="" ref="0x40676998"/>
        <function-ref name="setSource" scoped="" ref="0x40676a78"/>
        <function-ref name="setDestination" scoped="" ref="0x40676b58"/>
        <function-ref name="type" scoped="" ref="0x40676c38"/>
        <function-ref name="setType" scoped="" ref="0x40676d18"/>
        <function-ref name="isForMe" scoped="" ref="0x40676df8"/>
        <function-ref name="setGroup" scoped="" ref="0x40676ed8"/>
        <function-ref name="localGroup" scoped="" ref="0x40675010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40681be8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40681be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40681dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4068b040" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4068b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4068b218"/>
        <function-ref name="setChannel" scoped="" ref="0x4068b2f8"/>
        <function-ref name="getChannel" scoped="" ref="0x4068b3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40683840" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40683840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406823c0"/>
        <function-ref name="clear" scoped="" ref="0x40682770"/>
        <function-ref name="isValid" scoped="" ref="0x40682010"/>
        <function-ref name="set" scoped="" ref="0x40682b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x406b13a0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x406b13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x406b1578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x406a9688" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x406a9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x406a9e80"/>
        <function-ref name="channelError" scoped="" ref="0x406a9940"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x406a9a20"/>
        <function-ref name="getChannelTime" scoped="" ref="0x406a9b00"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x406a9be0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x406a9cc0"/>
        <function-ref name="getSender" scoped="" ref="0x406a9da0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x406a9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x406b2428" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x406b2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406b2600"/>
        <function-ref name="checkFrame" scoped="" ref="0x406b26e0"/>
        <function-ref name="source" scoped="" ref="0x406b27c0"/>
        <function-ref name="destination" scoped="" ref="0x406b28a0"/>
        <function-ref name="setSource" scoped="" ref="0x406b2980"/>
        <function-ref name="setDestination" scoped="" ref="0x406b2a60"/>
        <function-ref name="setGroup" scoped="" ref="0x406b2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x406a39b0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x406a39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x406a3b88"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x406a3c68"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x406a3d48"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x406a3e28"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x406a3f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x406b7e20" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x406b7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406b9010"/>
        <function-ref name="wait" scoped="" ref="0x406b90f0"/>
        <function-ref name="cancel" scoped="" ref="0x406b91d0"/>
        <function-ref name="isFree" scoped="" ref="0x406b92b0"/>
        <function-ref name="getNow" scoped="" ref="0x406b9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x406b8010" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x406b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406b81e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406b82c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406b83a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406b8488"/>
        <function-ref name="headerLength" scoped="" ref="0x406b8568"/>
        <function-ref name="metadataLength" scoped="" ref="0x406b8648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x406b89d8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x406b89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406b65b0"/>
        <function-ref name="clear" scoped="" ref="0x406b6960"/>
        <function-ref name="isValid" scoped="" ref="0x406b6200"/>
        <function-ref name="set" scoped="" ref="0x406b6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x4068e738" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x4068e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4068e910"/>
        <function-ref name="headerLength" scoped="" ref="0x4068e9f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4068ead0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4068ebb0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4068ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40698188" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40698188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40698360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x4069dab0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4069dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4069dc88"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4069dd68"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4069de48"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4069df28"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40691018"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x406910f8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406911d8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406912b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x406bac68" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406bac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406bae40"/>
        <function-ref name="getFramePending" scoped="" ref="0x406a11d0"/>
        <function-ref name="setFCF" scoped="" ref="0x406a5018"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406a50f8"/>
        <function-ref name="getDSN" scoped="" ref="0x406a51d8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406a52b8"/>
        <function-ref name="setDSN" scoped="" ref="0x406a5398"/>
        <function-ref name="createAckReply" scoped="" ref="0x406a5478"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406a5558"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406a5638"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406a5718"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406a57f8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406a58d8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406a5a38"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406a5b18"/>
        <function-ref name="setFramePending" scoped="" ref="0x406a5bf8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406a5cd8"/>
        <function-ref name="setDestPan" scoped="" ref="0x406a5db8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406a5e98"/>
        <function-ref name="getFCF" scoped="" ref="0x406a1010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406baf20"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406a10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40699198" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40699198"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40699370"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40699450"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40699530"/>
        <function-ref name="getSender" scoped="" ref="0x40699610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x406a6e28" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x406a6e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4069c050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4069c130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4069c210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4069c2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40692c00" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40692c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40692dd8"/>
        <function-ref name="wait" scoped="" ref="0x40692eb8"/>
        <function-ref name="cancel" scoped="" ref="0x406fe010"/>
        <function-ref name="isFree" scoped="" ref="0x406fe0f0"/>
        <function-ref name="getNow" scoped="" ref="0x406fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406fe7c8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406fe7c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fdc78"/>
        <function-ref name="fired" scoped="" ref="0x406fd448"/>
        <function-ref name="startAt" scoped="" ref="0x406fd938"/>
        <function-ref name="isRunning" scoped="" ref="0x406fd6c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x406fdef0"/>
        <function-ref name="start" scoped="" ref="0x406fef18"/>
        <function-ref name="stop" scoped="" ref="0x406fd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x406fc970" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x406fc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406fcb48"/>
        <function-ref name="wait" scoped="" ref="0x406fcc28"/>
        <function-ref name="cancel" scoped="" ref="0x406fcd08"/>
        <function-ref name="isFree" scoped="" ref="0x406fcde8"/>
        <function-ref name="getNow" scoped="" ref="0x406fcec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406f7260" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406f7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4070c728"/>
        <function-ref name="fired" scoped="" ref="0x406f7ec8"/>
        <function-ref name="startAt" scoped="" ref="0x4070c3e8"/>
        <function-ref name="isRunning" scoped="" ref="0x4070c170"/>
        <function-ref name="getAlarm" scoped="" ref="0x4070c9a0"/>
        <function-ref name="start" scoped="" ref="0x406f79b0"/>
        <function-ref name="stop" scoped="" ref="0x406f7c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40707518" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40707518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x407076f0"/>
        <function-ref name="suspend" scoped="" ref="0x407077d0"/>
        <function-ref name="resume" scoped="" ref="0x407078b0"/>
        <function-ref name="run" scoped="" ref="0x40707990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x406fb898" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x406fb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x406fba70"/>
        <function-ref name="suspend" scoped="" ref="0x406fbb50"/>
        <function-ref name="resume" scoped="" ref="0x406fbc30"/>
        <function-ref name="run" scoped="" ref="0x406fbd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4071b370" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4071b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4071b548"/>
        <function-ref name="cancel" scoped="" ref="0x4071b628"/>
        <function-ref name="sendDone" scoped="" ref="0x4071b708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4071a338" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4071a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4071a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40721b88" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40721b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40721d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4070da50" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4070da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4070dc28"/>
        <function-ref name="payloadLength" scoped="" ref="0x4070dd08"/>
        <function-ref name="getPayload" scoped="" ref="0x4070dde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4070dec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40722010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40722470" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40722470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40722648"/>
        <function-ref name="getPayload" scoped="" ref="0x40722728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40722808"/>
        <function-ref name="cancel" scoped="" ref="0x407228e8"/>
        <function-ref name="sendDone" scoped="" ref="0x407229c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40721510" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40721510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407216e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40720010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40720010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407201e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407202c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407203a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40720488"/>
        <function-ref name="headerLength" scoped="" ref="0x40720568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40720648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4071a770" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4071a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4071a948"/>
        <function-ref name="checkFrame" scoped="" ref="0x4071aa28"/>
        <function-ref name="source" scoped="" ref="0x4071ab08"/>
        <function-ref name="destination" scoped="" ref="0x4071abe8"/>
        <function-ref name="setSource" scoped="" ref="0x4071acc8"/>
        <function-ref name="setDestination" scoped="" ref="0x4071ada8"/>
        <function-ref name="setGroup" scoped="" ref="0x4071ae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40722e30" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40722e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40721050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406f9dc8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406f9dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4070d010"/>
        <function-ref name="source" scoped="" ref="0x4070d0f0"/>
        <function-ref name="address" scoped="" ref="0x4070d1d0"/>
        <function-ref name="destination" scoped="" ref="0x4070d2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4070d390"/>
        <function-ref name="setDestination" scoped="" ref="0x4070d470"/>
        <function-ref name="type" scoped="" ref="0x4070d550"/>
        <function-ref name="setType" scoped="" ref="0x4070d630"/>
        <function-ref name="isForMe" scoped="" ref="0x4070d710"/>
        <function-ref name="setGroup" scoped="" ref="0x4070d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4070d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4072b848" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4072b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072ba20"/>
        <function-ref name="cancel" scoped="" ref="0x4072bb00"/>
        <function-ref name="sendDone" scoped="" ref="0x4072bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4072be18" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4072be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4072a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4072cb88" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4072cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4072cd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40718a50" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40718a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40718c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40718d08"/>
        <function-ref name="getPayload" scoped="" ref="0x40718de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40718ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4071f5e0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4071f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4071f7b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4071f898"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4071f978"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4071fa58"/>
        <function-ref name="headerLength" scoped="" ref="0x4071fb38"/>
        <function-ref name="metadataLength" scoped="" ref="0x4071fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4072d470" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4072d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072d648"/>
        <function-ref name="getPayload" scoped="" ref="0x4072d728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072d808"/>
        <function-ref name="cancel" scoped="" ref="0x4072d8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4072d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4072c510" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4072c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4072c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4072b010" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4072b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072b1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072b2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072b3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072b488"/>
        <function-ref name="headerLength" scoped="" ref="0x4072b568"/>
        <function-ref name="metadataLength" scoped="" ref="0x4072b648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4072de30" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4072de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4072c050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4072a270" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4072a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4072a448"/>
        <function-ref name="checkFrame" scoped="" ref="0x4072a528"/>
        <function-ref name="source" scoped="" ref="0x4072a608"/>
        <function-ref name="destination" scoped="" ref="0x4072a6e8"/>
        <function-ref name="setSource" scoped="" ref="0x4072a7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x4072a8a8"/>
        <function-ref name="setGroup" scoped="" ref="0x4072a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40725480" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40725480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40725658"/>
        <function-ref name="changed" scoped="" ref="0x40725738"/>
        <function-ref name="amGroup" scoped="" ref="0x40725818"/>
        <function-ref name="setAddress" scoped="" ref="0x407258f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4071fdb0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4071fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40718010"/>
        <function-ref name="source" scoped="" ref="0x407180f0"/>
        <function-ref name="address" scoped="" ref="0x407181d0"/>
        <function-ref name="destination" scoped="" ref="0x407182b0"/>
        <function-ref name="setSource" scoped="" ref="0x40718390"/>
        <function-ref name="setDestination" scoped="" ref="0x40718470"/>
        <function-ref name="type" scoped="" ref="0x40718550"/>
        <function-ref name="setType" scoped="" ref="0x40718630"/>
        <function-ref name="isForMe" scoped="" ref="0x40718710"/>
        <function-ref name="setGroup" scoped="" ref="0x407187f0"/>
        <function-ref name="localGroup" scoped="" ref="0x407188d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40719670" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40719670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40719848"/>
        <function-ref name="changed" scoped="" ref="0x40719928"/>
        <function-ref name="amGroup" scoped="" ref="0x40719a08"/>
        <function-ref name="setAddress" scoped="" ref="0x40719ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4075e6f0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4075e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4075e8c8"/>
        <function-ref name="cancel" scoped="" ref="0x4075e9a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4075ea88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4075ebc8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4075ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4075eda0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4075ee80"/>
        <function-ref name="request" scoped="" ref="0x4076d010"/>
        <function-ref name="granted" scoped="" ref="0x4076d0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4076d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4075e1c8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4075e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4075e3a0"/>
        <function-ref name="cancel" scoped="" ref="0x4075e480"/>
        <function-ref name="sendDone" scoped="" ref="0x4075e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4076acb0" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4076acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4076ae98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407ad010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407ad600" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407ad600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407ad7e8"/>
        <function-ref name="configure" scoped="" ref="0x407ad8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4076a570" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4076a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4076a758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4076a838"/>
        <function-ref name="request" scoped="" ref="0x4076a918"/>
        <function-ref name="granted" scoped="" ref="0x4076a9f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4076aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407ad150" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407ad150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407ad328"/>
        <function-ref name="userId" scoped="" ref="0x407ad408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41273f00" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41273f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41270250" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41270250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41270428"/>
        <function-ref name="isEmpty" scoped="" ref="0x41270508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412705e8"/>
        <function-ref name="dequeue" scoped="" ref="0x412706c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4126f998" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4126f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4126fb80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4126fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4126e2f8" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4126e2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4126e4e0"/>
        <function-ref name="configure" scoped="" ref="0x4126e5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4126e720" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4126e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4126e8f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4126e9d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4126eab8"/>
        <function-ref name="dequeue" scoped="" ref="0x4126eb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4126f258" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4126f258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4126f440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4126f520"/>
        <function-ref name="request" scoped="" ref="0x4126f600"/>
        <function-ref name="granted" scoped="" ref="0x4126f6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4126f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4126fda0" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4126fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4126e010"/>
        <function-ref name="userId" scoped="" ref="0x4126e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4126ed18" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4126ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4126eef0"/>
        <function-ref name="runTask" scoped="" ref="0x4126c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407bf848" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407bf848"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407bfa20"/>
        <function-ref name="cancel" scoped="" ref="0x407bfb00"/>
        <function-ref name="sendDone" scoped="" ref="0x407bfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407bfe18" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407bfe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407a8960" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407a8960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407a8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407ac6b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407ac6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ac890"/>
        <function-ref name="payloadLength" scoped="" ref="0x407ac970"/>
        <function-ref name="getPayload" scoped="" ref="0x407aca50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407acb30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407acc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0x407a6558" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407a6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407a6730"/>
        <function-ref name="address" scoped="" ref="0x407a6810"/>
        <function-ref name="destination" scoped="" ref="0x407a68f0"/>
        <function-ref name="setSource" scoped="" ref="0x407a69d0"/>
        <function-ref name="setDestination" scoped="" ref="0x407a6ab0"/>
        <function-ref name="pan" scoped="" ref="0x407a6b90"/>
        <function-ref name="setPan" scoped="" ref="0x407a6c70"/>
        <function-ref name="isForMe" scoped="" ref="0x407a6d50"/>
        <function-ref name="localPan" scoped="" ref="0x407a6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x407bf010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407bf1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x407bf2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407bf3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407bf488"/>
        <function-ref name="headerLength" scoped="" ref="0x407bf568"/>
        <function-ref name="metadataLength" scoped="" ref="0x407bf648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x407a8d80" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407a8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407a7010"/>
        <function-ref name="getFramePending" scoped="" ref="0x407a6390"/>
        <function-ref name="setFCF" scoped="" ref="0x407a71d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407a72b0"/>
        <function-ref name="getDSN" scoped="" ref="0x407a7390"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407a7470"/>
        <function-ref name="setDSN" scoped="" ref="0x407a7550"/>
        <function-ref name="createAckReply" scoped="" ref="0x407a7630"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407a7710"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407a77f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407a78d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407a79b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407a7a90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407a7bf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407a7cd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x407a7db0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407a7e90"/>
        <function-ref name="setDestPan" scoped="" ref="0x407a6010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407a60f0"/>
        <function-ref name="getFCF" scoped="" ref="0x407a61d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407a70f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x407acdc0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x407acdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a8010"/>
        <function-ref name="getPayload" scoped="" ref="0x407a80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a81d0"/>
        <function-ref name="cancel" scoped="" ref="0x407a82b0"/>
        <function-ref name="sendDone" scoped="" ref="0x407a8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x407a85c8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x407a85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a87a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407d7340" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407d7340"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d7518"/>
        <function-ref name="cancel" scoped="" ref="0x407d75f8"/>
        <function-ref name="sendDone" scoped="" ref="0x407d76d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407d7910" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407d7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407d9780" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407d9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d9958"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d9a38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d9b18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d9bf8"/>
        <function-ref name="headerLength" scoped="" ref="0x407d9cd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d9db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x407d8600" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x407d8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d87d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407d7d18" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407d7d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d7ef0"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d60f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d61d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407d62b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x407d8010" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x407d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d81e8"/>
        <function-ref name="cancel" scoped="" ref="0x407d82c8"/>
        <function-ref name="sendDone" scoped="" ref="0x407d83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x407c2ce8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x407c2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c2ec0"/>
        <function-ref name="cancel" scoped="" ref="0x407d9010"/>
        <function-ref name="sendDone" scoped="" ref="0x407d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x407d9350" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x407d9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d9528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x407d8a28" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x407d8a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d8c00"/>
        <function-ref name="payloadLength" scoped="" ref="0x407d8ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d8dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407d8ea0"/>
        <function-ref name="headerLength" scoped="" ref="0x407d7010"/>
        <function-ref name="metadataLength" scoped="" ref="0x407d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407f0db8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407f0db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407ef010"/>
        <function-ref name="address" scoped="" ref="0x407ef0f0"/>
        <function-ref name="destination" scoped="" ref="0x407ef1d0"/>
        <function-ref name="setSource" scoped="" ref="0x407ef2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x407ef390"/>
        <function-ref name="pan" scoped="" ref="0x407ef470"/>
        <function-ref name="setPan" scoped="" ref="0x407ef550"/>
        <function-ref name="isForMe" scoped="" ref="0x407ef630"/>
        <function-ref name="localPan" scoped="" ref="0x407ef710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407ef8c0" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407ef8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407efa98"/>
        <function-ref name="payloadLength" scoped="" ref="0x407efb78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407efc58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407efd38"/>
        <function-ref name="headerLength" scoped="" ref="0x407efe18"/>
        <function-ref name="metadataLength" scoped="" ref="0x407efef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x407c06a0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407c06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407c0878"/>
        <function-ref name="getFramePending" scoped="" ref="0x407f0bf0"/>
        <function-ref name="setFCF" scoped="" ref="0x407c0a38"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407c0b18"/>
        <function-ref name="getDSN" scoped="" ref="0x407c0bf8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407c0cd8"/>
        <function-ref name="setDSN" scoped="" ref="0x407c0db8"/>
        <function-ref name="createAckReply" scoped="" ref="0x407c0e98"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407f0010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407f00f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407f01d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407f02b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407f0390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407f04f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407f05d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x407f06b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407f0790"/>
        <function-ref name="setDestPan" scoped="" ref="0x407f0870"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407f0950"/>
        <function-ref name="getFCF" scoped="" ref="0x407f0a30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407c0958"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407ed1a0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407ed1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407ed378"/>
        <function-ref name="payloadLength" scoped="" ref="0x407ed458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ed538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407ed618"/>
        <function-ref name="headerLength" scoped="" ref="0x407ed6f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407ed7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x407e8718" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x407e8718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x407e88f0"/>
        <function-ref name="address" scoped="" ref="0x407e89d0"/>
        <function-ref name="destination" scoped="" ref="0x407e8ab0"/>
        <function-ref name="setSource" scoped="" ref="0x407e8b90"/>
        <function-ref name="setDestination" scoped="" ref="0x407e8c70"/>
        <function-ref name="pan" scoped="" ref="0x407e8d50"/>
        <function-ref name="setPan" scoped="" ref="0x407e8e30"/>
        <function-ref name="isForMe" scoped="" ref="0x407e8f10"/>
        <function-ref name="localPan" scoped="" ref="0x407e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x407e71c0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x407e71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e7398"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e7478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e7558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e7638"/>
        <function-ref name="headerLength" scoped="" ref="0x407e7718"/>
        <function-ref name="metadataLength" scoped="" ref="0x407e77f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x407e9010" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x407e9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x407e91e8"/>
        <function-ref name="getFramePending" scoped="" ref="0x407e8550"/>
        <function-ref name="setFCF" scoped="" ref="0x407e93a8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407e9488"/>
        <function-ref name="getDSN" scoped="" ref="0x407e9568"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407e9648"/>
        <function-ref name="setDSN" scoped="" ref="0x407e9728"/>
        <function-ref name="createAckReply" scoped="" ref="0x407e9808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407e98e8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x407e99c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x407e9aa8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407e9b88"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407e9c68"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407e9dc8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x407e9ea8"/>
        <function-ref name="setFramePending" scoped="" ref="0x407e8010"/>
        <function-ref name="setDestAddr" scoped="" ref="0x407e80f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x407e81d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407e82b0"/>
        <function-ref name="getFCF" scoped="" ref="0x407e8390"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x407e92c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x407e8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x407e7a58" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407e7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407e7c30"/>
        <function-ref name="changed" scoped="" ref="0x407e7d10"/>
        <function-ref name="amGroup" scoped="" ref="0x407e7df0"/>
        <function-ref name="setAddress" scoped="" ref="0x407e7ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40800150" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40800150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40800328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40800408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408004e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408005c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408006a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40800788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4082a3f0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4082a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082a5c8"/>
        <function-ref name="cancel" scoped="" ref="0x4082a6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4082a788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4082a9d0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4082a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082aba8"/>
        <function-ref name="header" scoped="" ref="0x4082ac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4082d7c8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4082d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4082d9a0"/>
        <function-ref name="cancel" scoped="" ref="0x4082da80"/>
        <function-ref name="sendDone" scoped="" ref="0x4082db60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4082aea8" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4082aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408290c0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408291a0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40829280"/>
        <function-ref name="getSender" scoped="" ref="0x40829360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40828e98" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40828e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4082a0c0"/>
        <function-ref name="header" scoped="" ref="0x4082a1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40840860" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40840860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40840a38"/>
        <function-ref name="cancel" scoped="" ref="0x40840b18"/>
        <function-ref name="sendDone" scoped="" ref="0x40840bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40840e40" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40840e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083f050"/>
        <function-ref name="header" scoped="" ref="0x4083f130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40838f10" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40838f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4083d108"/>
        <function-ref name="clearAll" scoped="" ref="0x4083d1e8"/>
        <function-ref name="get" scoped="" ref="0x4083d2c8"/>
        <function-ref name="set" scoped="" ref="0x4083d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40829a60" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40829a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40829c38"/>
        <function-ref name="cancel" scoped="" ref="0x40829d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40829df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4083bed0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4083bed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4083e0c0"/>
        <function-ref name="insertNode" scoped="" ref="0x4083e1a0"/>
        <function-ref name="getNode" scoped="" ref="0x4083e280"/>
        <function-ref name="evicted" scoped="" ref="0x4083e360"/>
        <function-ref name="getIndex" scoped="" ref="0x4083e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40840010" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40840010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408401e8"/>
        <function-ref name="header" scoped="" ref="0x408402c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40840438" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40840438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40840610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4083f2f0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4083f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4083f4c8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4083f5a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4083f688"/>
        <function-ref name="getSender" scoped="" ref="0x4083f768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408426a8" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408426a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40842880"/>
        <function-ref name="insertNode" scoped="" ref="0x40842960"/>
        <function-ref name="getNode" scoped="" ref="0x40842a40"/>
        <function-ref name="evicted" scoped="" ref="0x40842b20"/>
        <function-ref name="getIndex" scoped="" ref="0x40842c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40845100" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40845100"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408452d8"/>
        <function-ref name="clearAll" scoped="" ref="0x408453b8"/>
        <function-ref name="get" scoped="" ref="0x40845498"/>
        <function-ref name="set" scoped="" ref="0x40845578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40848630" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40848630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40848808"/>
        <function-ref name="insertNode" scoped="" ref="0x408488e8"/>
        <function-ref name="getNode" scoped="" ref="0x408489c8"/>
        <function-ref name="evicted" scoped="" ref="0x40848aa8"/>
        <function-ref name="getIndex" scoped="" ref="0x40848b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40848298" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40848298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40848470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408491b0" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408491b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40849388"/>
        <function-ref name="clearAll" scoped="" ref="0x40849468"/>
        <function-ref name="get" scoped="" ref="0x40849548"/>
        <function-ref name="set" scoped="" ref="0x40849628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4082bc68" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4082bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4082be40"/>
        <function-ref name="stopDone" scoped="" ref="0x4082bf20"/>
        <function-ref name="start" scoped="" ref="0x40864018"/>
        <function-ref name="stop" scoped="" ref="0x408640f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408622f0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408624c8"/>
        <function-ref name="cancel" scoped="" ref="0x408625a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40862688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408628c0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408628c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40862a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408642e0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408642e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408644b8"/>
        <function-ref name="cancel" scoped="" ref="0x40864598"/>
        <function-ref name="sendDone" scoped="" ref="0x40864678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40864c18" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40864c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40864df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40864ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40863010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408630f0"/>
        <function-ref name="headerLength" scoped="" ref="0x408631d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408634a0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408634a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40863678"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40863758"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40863838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40863918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40863bb0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40863bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40863d88"/>
        <function-ref name="stopDone" scoped="" ref="0x40863e68"/>
        <function-ref name="start" scoped="" ref="0x40862010"/>
        <function-ref name="stop" scoped="" ref="0x408620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40864890" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40864890"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40864a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40862cc8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40862cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40862ea0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40860010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408600f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408601d0"/>
        <function-ref name="headerLength" scoped="" ref="0x408602b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40860390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40879238" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40879238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40879410"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408794f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408795d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408796b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40873bf8" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40873bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40873dd0"/>
        <function-ref name="cancel" scoped="" ref="0x40873eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40872010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4087b6e8" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4087b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4087b8c0"/>
        <function-ref name="cancel" scoped="" ref="0x4087b9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x4087ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40873380" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40873380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40873558"/>
        <function-ref name="payloadLength" scoped="" ref="0x40873638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40873718"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408737f8"/>
        <function-ref name="headerLength" scoped="" ref="0x408738d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x408739b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40872240" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40872240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40872418"/>
        <function-ref name="payloadLength" scoped="" ref="0x408724f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408725d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408726b8"/>
        <function-ref name="headerLength" scoped="" ref="0x40872798"/>
        <function-ref name="metadataLength" scoped="" ref="0x40872878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40872a98" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40872a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40872c70"/>
        <function-ref name="noAck" scoped="" ref="0x40872d50"/>
        <function-ref name="wasAcked" scoped="" ref="0x40872e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4087bc28" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4087bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4087be00"/>
        <function-ref name="setRetries" scoped="" ref="0x4087bee0"/>
        <function-ref name="getRetries" scoped="" ref="0x40873010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408730f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408731d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4086eb18" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4086eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086ecf0"/>
        <function-ref name="cancel" scoped="" ref="0x4086edd0"/>
        <function-ref name="sendDone" scoped="" ref="0x4086eeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40885d50" loc="87:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40885d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40885f28"/>
        <function-ref name="runTask" scoped="" ref="0x40884018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x408897a8" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x408897a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40886330"/>
        <function-ref name="fired" scoped="" ref="0x40888540"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40888c48"/>
        <function-ref name="isOneShot" scoped="" ref="0x408889f0"/>
        <function-ref name="getdt" scoped="" ref="0x408867e0"/>
        <function-ref name="gett0" scoped="" ref="0x40886588"/>
        <function-ref name="isRunning" scoped="" ref="0x40888798"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40889dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40886010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40888068"/>
        <function-ref name="stop" scoped="" ref="0x408882e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40871620" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40871620"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408717f8"/>
        <function-ref name="cancel" scoped="" ref="0x408718d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408719b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4086e2a0" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4086e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4086e478"/>
        <function-ref name="payloadLength" scoped="" ref="0x4086e558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4086e638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4086e718"/>
        <function-ref name="headerLength" scoped="" ref="0x4086e7f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4086e8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40886ae0" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40886ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40886cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40886d98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40886e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40885010"/>
        <function-ref name="headerLength" scoped="" ref="0x408850f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408851d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40889140" loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40889140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40889318"/>
        <function-ref name="noAck" scoped="" ref="0x408893f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408894d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40871b60" loc="65:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40871b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40871d38"/>
        <function-ref name="setRetries" scoped="" ref="0x40871e18"/>
        <function-ref name="getRetries" scoped="" ref="0x40871ef8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4086e010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4086e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4089f428" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4089f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4089d010"/>
        <function-ref name="fired" scoped="" ref="0x4089e268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4089e970"/>
        <function-ref name="isOneShot" scoped="" ref="0x4089e718"/>
        <function-ref name="getdt" scoped="" ref="0x4089d4c0"/>
        <function-ref name="gett0" scoped="" ref="0x4089d268"/>
        <function-ref name="isRunning" scoped="" ref="0x4089e4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4089fa50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4089ec90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4089fcd0"/>
        <function-ref name="stop" scoped="" ref="0x4089e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4089b818" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4089b818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4089b9f0"/>
        <function-ref name="stopDone" scoped="" ref="0x4089bad0"/>
        <function-ref name="start" scoped="" ref="0x4089bbb0"/>
        <function-ref name="stop" scoped="" ref="0x4089bc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408b0ed8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408b0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408b40c0"/>
        <function-ref name="turnOn" scoped="" ref="0x408b41a0"/>
        <function-ref name="setChannel" scoped="" ref="0x408b4280"/>
        <function-ref name="done" scoped="" ref="0x408b4360"/>
        <function-ref name="standby" scoped="" ref="0x408b4440"/>
        <function-ref name="getChannel" scoped="" ref="0x408b4520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4089be78" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4089be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40898070"/>
        <function-ref name="cancel" scoped="" ref="0x40898150"/>
        <function-ref name="sendDone" scoped="" ref="0x40898230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408b33d0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408b33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b35a8"/>
        <function-ref name="header" scoped="" ref="0x408b3688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40898448" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40898448"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40898620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408aee28" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408aee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b3050"/>
        <function-ref name="ready" scoped="" ref="0x408b3130"/>
        <function-ref name="sendDone" scoped="" ref="0x408b3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408987e0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408987e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x408989b8"/>
        <function-ref name="setChannel" scoped="" ref="0x40898a98"/>
        <function-ref name="getChannel" scoped="" ref="0x40898b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408b3de0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408b3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408ac010"/>
        <function-ref name="stopDone" scoped="" ref="0x408ac0f0"/>
        <function-ref name="start" scoped="" ref="0x408ac1d0"/>
        <function-ref name="stop" scoped="" ref="0x408ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x408ac4c0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x408ac4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ac698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408ab7a0" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408ab7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408ab978"/>
        <function-ref name="turnOn" scoped="" ref="0x408aba58"/>
        <function-ref name="setChannel" scoped="" ref="0x408abb38"/>
        <function-ref name="done" scoped="" ref="0x408abc18"/>
        <function-ref name="standby" scoped="" ref="0x408abcf8"/>
        <function-ref name="getChannel" scoped="" ref="0x408abdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408ac880" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408ac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408aca58"/>
        <function-ref name="cancel" scoped="" ref="0x408acb38"/>
        <function-ref name="sendDone" scoped="" ref="0x408acc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x408be108" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x408be108"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408be2e0"/>
        <function-ref name="runTask" scoped="" ref="0x408be3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408aab80" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408aab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408aad58"/>
        <function-ref name="header" scoped="" ref="0x408aae38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x408b83c0" loc="170:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x408b83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408b8598"/>
        <function-ref name="runTask" scoped="" ref="0x408b8678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408ace30" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408ace30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ab050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x408c7938" loc="280:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x408c7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408c7b10"/>
        <function-ref name="runTask" scoped="" ref="0x408c7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408aa628" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408aa628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408aa800"/>
        <function-ref name="ready" scoped="" ref="0x408aa8e0"/>
        <function-ref name="sendDone" scoped="" ref="0x408aa9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408ab210" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408ab210"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x408ab3e8"/>
        <function-ref name="setChannel" scoped="" ref="0x408ab4c8"/>
        <function-ref name="getChannel" scoped="" ref="0x408ab5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408aa010" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408aa1e8"/>
        <function-ref name="suspend" scoped="" ref="0x408aa2c8"/>
        <function-ref name="resume" scoped="" ref="0x408aa3a8"/>
        <function-ref name="run" scoped="" ref="0x408aa488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408da798" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408da798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408da970"/>
        <function-ref name="stopDone" scoped="" ref="0x408daa50"/>
        <function-ref name="start" scoped="" ref="0x408dab30"/>
        <function-ref name="stop" scoped="" ref="0x408dac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408eb708" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408eb708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408eb8e0"/>
        <function-ref name="request" scoped="" ref="0x408eb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408eac70" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408eac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408eae48"/>
        <function-ref name="cancel" scoped="" ref="0x408eaf28"/>
        <function-ref name="sendDone" scoped="" ref="0x408e9018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408e9178" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408e9178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x408e9cc8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x408e9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e9ea0"/>
        <function-ref name="ready" scoped="" ref="0x408e8010"/>
        <function-ref name="sendDone" scoped="" ref="0x408e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408ed648" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408ed648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408ed820"/>
        <function-ref name="turnOn" scoped="" ref="0x408ed900"/>
        <function-ref name="setChannel" scoped="" ref="0x408ed9e0"/>
        <function-ref name="done" scoped="" ref="0x408edac0"/>
        <function-ref name="standby" scoped="" ref="0x408edba0"/>
        <function-ref name="getChannel" scoped="" ref="0x408edc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408dad70" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408dad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ed010"/>
        <function-ref name="cancel" scoped="" ref="0x408ed0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408ebb00" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408ebb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408ebcd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408ebdb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ebe98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408ea010"/>
        <function-ref name="headerLength" scoped="" ref="0x408ea0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408ea1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408ea330" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408ea330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408ea508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408eb310" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408eb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408eb4e8"/>
        <function-ref name="header" scoped="" ref="0x408eb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408e94b0" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408e94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408e9708"/>
        <function-ref name="turnOn" scoped="" ref="0x408e97e8"/>
        <function-ref name="setChannel" scoped="" ref="0x408e98c8"/>
        <function-ref name="done" scoped="" ref="0x408e99a8"/>
        <function-ref name="standby" scoped="" ref="0x408e9a88"/>
        <function-ref name="getChannel" scoped="" ref="0x408e9b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408ea698" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408ea698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408ea870"/>
        <function-ref name="stopDone" scoped="" ref="0x408ea950"/>
        <function-ref name="start" scoped="" ref="0x408eaa30"/>
        <function-ref name="stop" scoped="" ref="0x408eab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408e8a80" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408e8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e8c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e8d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e8e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e8ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x408e7010"/>
        <function-ref name="metadataLength" scoped="" ref="0x408e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408ed330" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408ed330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ed508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408e7250" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408e7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408e7428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x408e8250" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x408e8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e8428"/>
        <function-ref name="header" scoped="" ref="0x408e8508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408eddc0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408eddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408eb010"/>
        <function-ref name="ready" scoped="" ref="0x408eb0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408eb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408e8668" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408e8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408e8840"/>
        <function-ref name="request" scoped="" ref="0x408e8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408e27c0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408e27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e2998"/>
        <function-ref name="ready" scoped="" ref="0x408e2a78"/>
        <function-ref name="sendDone" scoped="" ref="0x408e2b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408e2da0" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408e2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ff010"/>
        <function-ref name="header" scoped="" ref="0x408ff0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408ff368" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408ff368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408ff540"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408ff620"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408ff700"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408ff7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408e22b0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408e22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e2488"/>
        <function-ref name="header" scoped="" ref="0x408e2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408e5ca8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408e5ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e5e80"/>
        <function-ref name="ready" scoped="" ref="0x408e2010"/>
        <function-ref name="sendDone" scoped="" ref="0x408e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408fca78" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408fca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fcc50"/>
        <function-ref name="ready" scoped="" ref="0x408fcd30"/>
        <function-ref name="sendDone" scoped="" ref="0x408fce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408fa098" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408fa098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fa270"/>
        <function-ref name="header" scoped="" ref="0x408fa350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408fa4f8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408fa4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408fa6d0"/>
        <function-ref name="wait" scoped="" ref="0x408fa7b0"/>
        <function-ref name="cancel" scoped="" ref="0x408fa890"/>
        <function-ref name="isFree" scoped="" ref="0x408fa970"/>
        <function-ref name="getNow" scoped="" ref="0x408faa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x408f7850" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408f7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408f7a28"/>
        <function-ref name="rand32" scoped="" ref="0x408f7b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408f7d80" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408f7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408f9010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408f90f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408f91d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408f92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408fc568" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408fc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fc740"/>
        <function-ref name="header" scoped="" ref="0x408fc820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408fc010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fc1e8"/>
        <function-ref name="ready" scoped="" ref="0x408fc2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408fc3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x408f6de8" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x408f6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408f5010"/>
        <function-ref name="runTask" scoped="" ref="0x408f50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409008d0" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409008d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40900aa8"/>
        <function-ref name="rand32" scoped="" ref="0x40900b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40900010" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40900010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40900638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408fed30" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408fed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408fef08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4091a350" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4091a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4091a528"/>
        <function-ref name="rand32" scoped="" ref="0x4091a608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4091da60" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4091da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4091a0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4091d540" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4091d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4091d718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40911428" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40911428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40911600"/>
        <function-ref name="ready" scoped="" ref="0x409116e0"/>
        <function-ref name="sendDone" scoped="" ref="0x409117c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40911a08" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40911a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40911be0"/>
        <function-ref name="header" scoped="" ref="0x40911cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40911f10" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40911f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40910108"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409101e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409102c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409103a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40910488"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40910568"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40910648"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40910728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408e3910" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408e3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e3ae8"/>
        <function-ref name="header" scoped="" ref="0x408e3bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408e33b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408e33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e3590"/>
        <function-ref name="ready" scoped="" ref="0x408e3670"/>
        <function-ref name="sendDone" scoped="" ref="0x408e3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408e3de8" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40911010"/>
        <function-ref name="noAck" scoped="" ref="0x409110f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409111d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4092be98" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4092be98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409290c0"/>
        <function-ref name="ready" scoped="" ref="0x409291a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40929280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409294c8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409294c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409296a0"/>
        <function-ref name="header" scoped="" ref="0x40929780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40929928" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40929928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40929b00"/>
        <function-ref name="wait" scoped="" ref="0x40929be0"/>
        <function-ref name="cancel" scoped="" ref="0x40929cc0"/>
        <function-ref name="isFree" scoped="" ref="0x40929da0"/>
        <function-ref name="getNow" scoped="" ref="0x40929e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40924720" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40924720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409248f8"/>
        <function-ref name="get" scoped="" ref="0x409249d8"/>
        <function-ref name="setValue" scoped="" ref="0x40924ab8"/>
        <function-ref name="set" scoped="" ref="0x40924b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4092b3d0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4092b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092b5a8"/>
        <function-ref name="header" scoped="" ref="0x4092b688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x40928110" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40928110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409282e8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409283c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409284a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40928588"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40928668"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40928748"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40928828"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40928908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40910e40" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40910e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092b050"/>
        <function-ref name="ready" scoped="" ref="0x4092b130"/>
        <function-ref name="sendDone" scoped="" ref="0x4092b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4092b8a8" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4092b8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4092ba80"/>
        <function-ref name="noAck" scoped="" ref="0x4092bb60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4092bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4092c3b0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4092c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092c588"/>
        <function-ref name="get" scoped="" ref="0x4092c668"/>
        <function-ref name="setValue" scoped="" ref="0x4092c748"/>
        <function-ref name="set" scoped="" ref="0x4092c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4092ea18" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4092ea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092ebf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4092ecd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4092edb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4092ee90"/>
        <function-ref name="headerLength" scoped="" ref="0x4092d010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4092d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4092d370" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4092d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092d548"/>
        <function-ref name="payloadLength" scoped="" ref="0x4092d628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4092d708"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4092d7e8"/>
        <function-ref name="headerLength" scoped="" ref="0x4092d8c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4092d9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4092e3f0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4092e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092e5c8"/>
        <function-ref name="get" scoped="" ref="0x4092e6a8"/>
        <function-ref name="setValue" scoped="" ref="0x4092e788"/>
        <function-ref name="set" scoped="" ref="0x4092e868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4095c040" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4095c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4095c218"/>
        <function-ref name="stopDone" scoped="" ref="0x4095c2f8"/>
        <function-ref name="start" scoped="" ref="0x4095c3d8"/>
        <function-ref name="stop" scoped="" ref="0x4095c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4095bec0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4095bec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4095a0c0"/>
        <function-ref name="request" scoped="" ref="0x4095a1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40958410" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40958410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409585e8"/>
        <function-ref name="cancel" scoped="" ref="0x409586c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409587a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40958908" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40958908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40958ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x409574f0" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x409574f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409576c8"/>
        <function-ref name="ready" scoped="" ref="0x409577a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40957888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4095ce28" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4095ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4095b050"/>
        <function-ref name="turnOn" scoped="" ref="0x4095b130"/>
        <function-ref name="setChannel" scoped="" ref="0x4095b210"/>
        <function-ref name="done" scoped="" ref="0x4095b2f0"/>
        <function-ref name="standby" scoped="" ref="0x4095b3d0"/>
        <function-ref name="getChannel" scoped="" ref="0x4095b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4095c618" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4095c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095c7f0"/>
        <function-ref name="cancel" scoped="" ref="0x4095c8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4095c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4095a2e0" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4095a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4095a4b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4095a598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4095a678"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4095a758"/>
        <function-ref name="headerLength" scoped="" ref="0x4095a838"/>
        <function-ref name="metadataLength" scoped="" ref="0x4095a918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x4095aa78" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x4095aa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4095ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4095bac8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4095bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095bca0"/>
        <function-ref name="header" scoped="" ref="0x4095bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40958c40" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40958c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40958e98"/>
        <function-ref name="turnOn" scoped="" ref="0x40957010"/>
        <function-ref name="setChannel" scoped="" ref="0x409570f0"/>
        <function-ref name="done" scoped="" ref="0x409571d0"/>
        <function-ref name="standby" scoped="" ref="0x409572b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40957390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4095ade0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4095ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40958010"/>
        <function-ref name="stopDone" scoped="" ref="0x409580f0"/>
        <function-ref name="start" scoped="" ref="0x409581d0"/>
        <function-ref name="stop" scoped="" ref="0x409582b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40956250" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40956250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40956428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40956508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409565e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409566c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409567a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40956888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4095cb10" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4095cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095cce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409569e8" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409569e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40956bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x409579e8" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x409579e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40957bc0"/>
        <function-ref name="header" scoped="" ref="0x40957ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4095b5f0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4095b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095b7c8"/>
        <function-ref name="ready" scoped="" ref="0x4095b8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4095b988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40957e00" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40957e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40956010"/>
        <function-ref name="request" scoped="" ref="0x409560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4094d2a8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4094d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094d480"/>
        <function-ref name="payloadLength" scoped="" ref="0x4094d560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4094d640"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4094d720"/>
        <function-ref name="headerLength" scoped="" ref="0x4094d800"/>
        <function-ref name="metadataLength" scoped="" ref="0x4094d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4096c5e8" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4096c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096c7c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4096c8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096c980"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4096ca60"/>
        <function-ref name="headerLength" scoped="" ref="0x4096cb40"/>
        <function-ref name="metadataLength" scoped="" ref="0x4096cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40950af8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40950af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4094e6b8"/>
        <function-ref name="clear" scoped="" ref="0x4094ea68"/>
        <function-ref name="isValid" scoped="" ref="0x4094e308"/>
        <function-ref name="set" scoped="" ref="0x4094ee18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x4094dc50" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4094dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4096c2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40951100" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40951100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40951c00"/>
        <function-ref name="clear" scoped="" ref="0x40950010"/>
        <function-ref name="isValid" scoped="" ref="0x40951850"/>
        <function-ref name="set" scoped="" ref="0x409503c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40963170" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40963170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40963348"/>
        <function-ref name="get" scoped="" ref="0x40963428"/>
        <function-ref name="setValue" scoped="" ref="0x40963508"/>
        <function-ref name="set" scoped="" ref="0x409635e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40965828" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40965828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40965a00"/>
        <function-ref name="payloadLength" scoped="" ref="0x40965ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40965bc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40965ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x40965d80"/>
        <function-ref name="metadataLength" scoped="" ref="0x40965e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40962d48" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40962d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40962f20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40961018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409610f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409611d8"/>
        <function-ref name="headerLength" scoped="" ref="0x409612b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40961398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40966100" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40966100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40966c00"/>
        <function-ref name="clear" scoped="" ref="0x40965010"/>
        <function-ref name="isValid" scoped="" ref="0x40966850"/>
        <function-ref name="set" scoped="" ref="0x409653c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40963908" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40963908"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40962010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40962400" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40962400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40962a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4096b690" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4096b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409671b8"/>
        <function-ref name="clear" scoped="" ref="0x40967568"/>
        <function-ref name="isValid" scoped="" ref="0x4096bde0"/>
        <function-ref name="set" scoped="" ref="0x40967918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4096ad70" loc="20:/opt/tinyos-2.1.1/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4096ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4098c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4096d6b8" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4096d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096d890"/>
        <function-ref name="get" scoped="" ref="0x4096d970"/>
        <function-ref name="setValue" scoped="" ref="0x4096da50"/>
        <function-ref name="set" scoped="" ref="0x4096db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40986288" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40986288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40986460"/>
        <function-ref name="request" scoped="" ref="0x40986540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x409844d8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409844d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409820b8"/>
        <function-ref name="get" scoped="" ref="0x40984de0"/>
        <function-ref name="isSet" scoped="" ref="0x40984b20"/>
        <function-ref name="set" scoped="" ref="0x40982378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4097d3a0" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4097d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4097dea0"/>
        <function-ref name="clear" scoped="" ref="0x4099c280"/>
        <function-ref name="isValid" scoped="" ref="0x4097daf0"/>
        <function-ref name="set" scoped="" ref="0x4099c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40987040" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40987040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40987218"/>
        <function-ref name="turnOn" scoped="" ref="0x409872f8"/>
        <function-ref name="setChannel" scoped="" ref="0x409873d8"/>
        <function-ref name="done" scoped="" ref="0x409874b8"/>
        <function-ref name="standby" scoped="" ref="0x40987598"/>
        <function-ref name="getChannel" scoped="" ref="0x40987678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409866f0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409866f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409868c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409869a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40986a88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40986b68"/>
        <function-ref name="headerLength" scoped="" ref="0x40986c48"/>
        <function-ref name="metadataLength" scoped="" ref="0x40986d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409850f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409850f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40985cb8"/>
        <function-ref name="get" scoped="" ref="0x409859f8"/>
        <function-ref name="isSet" scoped="" ref="0x40985738"/>
        <function-ref name="set" scoped="" ref="0x40984010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40987d70" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40987d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40986010"/>
        <function-ref name="header" scoped="" ref="0x409860f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409828a8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409828a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409814a0"/>
        <function-ref name="get" scoped="" ref="0x409811e0"/>
        <function-ref name="isSet" scoped="" ref="0x40982ef0"/>
        <function-ref name="set" scoped="" ref="0x40981760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097e9e8" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4097ebc0"/>
        <function-ref name="headerLength" scoped="" ref="0x4097eca0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4097ed80"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4097ee60"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4097d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4097e030" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4097e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4097e678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40987818" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40987818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409879f0"/>
        <function-ref name="ready" scoped="" ref="0x40987ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x40987bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40981c70" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40981c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40980868"/>
        <function-ref name="get" scoped="" ref="0x409805a8"/>
        <function-ref name="isSet" scoped="" ref="0x409802e8"/>
        <function-ref name="set" scoped="" ref="0x40980b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409941a8" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409941a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40994380"/>
        <function-ref name="request" scoped="" ref="0x40994460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409a2930" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409a2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409a60a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40991390" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40991390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40990010"/>
        <function-ref name="get" scoped="" ref="0x40991c98"/>
        <function-ref name="isSet" scoped="" ref="0x409919d8"/>
        <function-ref name="set" scoped="" ref="0x409902d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x409a1ca0" loc="67:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x409a1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a1e78"/>
        <function-ref name="get" scoped="" ref="0x409a0010"/>
        <function-ref name="setValue" scoped="" ref="0x409a00f0"/>
        <function-ref name="set" scoped="" ref="0x409a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40996c38" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40996c38"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40996e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409a0c20" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409a0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4099f730"/>
        <function-ref name="clear" scoped="" ref="0x4099fae0"/>
        <function-ref name="isValid" scoped="" ref="0x4099f380"/>
        <function-ref name="set" scoped="" ref="0x4099fe90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x409a9010" loc="57:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409a91e8"/>
        <function-ref name="isInput" scoped="" ref="0x409a92c8"/>
        <function-ref name="toggle" scoped="" ref="0x409a93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x409a9488"/>
        <function-ref name="get" scoped="" ref="0x409a9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x409a9648"/>
        <function-ref name="set" scoped="" ref="0x409a9728"/>
        <function-ref name="clr" scoped="" ref="0x409a9808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4099ea08" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4099ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099ebe0"/>
        <function-ref name="wait" scoped="" ref="0x4099ecc0"/>
        <function-ref name="cancel" scoped="" ref="0x4099eda0"/>
        <function-ref name="isFree" scoped="" ref="0x4099ee80"/>
        <function-ref name="getNow" scoped="" ref="0x4099d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40995010" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40995010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409951e8"/>
        <function-ref name="turnOn" scoped="" ref="0x409952c8"/>
        <function-ref name="setChannel" scoped="" ref="0x409953a8"/>
        <function-ref name="done" scoped="" ref="0x40995488"/>
        <function-ref name="standby" scoped="" ref="0x40995568"/>
        <function-ref name="getChannel" scoped="" ref="0x40995648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409a6410" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409a6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a6a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40993010" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40993010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40993bd8"/>
        <function-ref name="get" scoped="" ref="0x40993918"/>
        <function-ref name="isSet" scoped="" ref="0x40993658"/>
        <function-ref name="set" scoped="" ref="0x40993e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40994610" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40994610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409947e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409948c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409949a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40994a88"/>
        <function-ref name="headerLength" scoped="" ref="0x40994b68"/>
        <function-ref name="metadataLength" scoped="" ref="0x40994c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409aa580" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409aa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409aa758"/>
        <function-ref name="isInput" scoped="" ref="0x409aa838"/>
        <function-ref name="toggle" scoped="" ref="0x409aa918"/>
        <function-ref name="isOutput" scoped="" ref="0x409aa9f8"/>
        <function-ref name="get" scoped="" ref="0x409aaad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409aabb8"/>
        <function-ref name="set" scoped="" ref="0x409aac98"/>
        <function-ref name="clr" scoped="" ref="0x409aad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409a6d78" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409a6d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a1010"/>
        <function-ref name="headerLength" scoped="" ref="0x409a10f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409a11d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x409a12b0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409a1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40995d40" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40995d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40995f18"/>
        <function-ref name="header" scoped="" ref="0x40994010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40990800" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40990800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098f3d8"/>
        <function-ref name="get" scoped="" ref="0x4098f118"/>
        <function-ref name="isSet" scoped="" ref="0x40990e48"/>
        <function-ref name="set" scoped="" ref="0x4098f698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409965d8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409965d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409967b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409ac898" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409ac898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409acaf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409acbd0"/>
        <function-ref name="request" scoped="" ref="0x409accb0"/>
        <function-ref name="granted" scoped="" ref="0x409acd90"/>
        <function-ref name="isOwner" scoped="" ref="0x409ace70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x4098de48" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x4098de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ac050"/>
        <function-ref name="isInput" scoped="" ref="0x409ac130"/>
        <function-ref name="toggle" scoped="" ref="0x409ac210"/>
        <function-ref name="isOutput" scoped="" ref="0x409ac2f0"/>
        <function-ref name="get" scoped="" ref="0x409ac3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409ac4b0"/>
        <function-ref name="set" scoped="" ref="0x409ac590"/>
        <function-ref name="clr" scoped="" ref="0x409ac670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4098fba8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4098fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4098d790"/>
        <function-ref name="get" scoped="" ref="0x4098d4d0"/>
        <function-ref name="isSet" scoped="" ref="0x4098d210"/>
        <function-ref name="set" scoped="" ref="0x4098da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409957e8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409957e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409959c0"/>
        <function-ref name="ready" scoped="" ref="0x40995aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40995b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x409a3108" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409a3108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409a32e0"/>
        <function-ref name="disable" scoped="" ref="0x409a33c0"/>
        <function-ref name="captured" scoped="" ref="0x409a34a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409a3580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x409a7ef8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409a7ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409aa0e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409aa1c0"/>
        <function-ref name="splitRead" scoped="" ref="0x409aa2a0"/>
        <function-ref name="write" scoped="" ref="0x409aa380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x409a0418" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x409a0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a05f0"/>
        <function-ref name="get" scoped="" ref="0x409a06d0"/>
        <function-ref name="setValue" scoped="" ref="0x409a07b0"/>
        <function-ref name="set" scoped="" ref="0x409a0890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x409a1608" loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x409a1608"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a17e0"/>
        <function-ref name="get" scoped="" ref="0x409a18c0"/>
        <function-ref name="setValue" scoped="" ref="0x409a19a0"/>
        <function-ref name="set" scoped="" ref="0x409a1a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4099e2e8" loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4099e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4099e5c0"/>
        <function-ref name="suspend" scoped="" ref="0x4099e6a0"/>
        <function-ref name="resume" scoped="" ref="0x4099e780"/>
        <function-ref name="run" scoped="" ref="0x4099e860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a34e98" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a34e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a330c0"/>
        <function-ref name="isInput" scoped="" ref="0x40a331a0"/>
        <function-ref name="toggle" scoped="" ref="0x40a33280"/>
        <function-ref name="isOutput" scoped="" ref="0x40a33360"/>
        <function-ref name="get" scoped="" ref="0x40a33440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a33520"/>
        <function-ref name="set" scoped="" ref="0x40a33600"/>
        <function-ref name="clr" scoped="" ref="0x40a336e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a344b0" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a344b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a34688"/>
        <function-ref name="isInput" scoped="" ref="0x40a34768"/>
        <function-ref name="toggle" scoped="" ref="0x40a34848"/>
        <function-ref name="isOutput" scoped="" ref="0x40a34928"/>
        <function-ref name="get" scoped="" ref="0x40a34a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a34ae8"/>
        <function-ref name="set" scoped="" ref="0x40a34bc8"/>
        <function-ref name="clr" scoped="" ref="0x40a34ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a320e0" loc="38:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a320e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a315c8"/>
        <function-ref name="fired" scoped="" ref="0x40a32d48"/>
        <function-ref name="startAt" scoped="" ref="0x40a31288"/>
        <function-ref name="isRunning" scoped="" ref="0x40a31010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a31840"/>
        <function-ref name="start" scoped="" ref="0x40a32830"/>
        <function-ref name="stop" scoped="" ref="0x40a32ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a13698" loc="31:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a13698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a13870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a13950"/>
        <function-ref name="request" scoped="" ref="0x40a13a30"/>
        <function-ref name="granted" scoped="" ref="0x40a13b10"/>
        <function-ref name="isOwner" scoped="" ref="0x40a13bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40a16bc0" loc="30:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a16bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a16d98"/>
        <function-ref name="isInput" scoped="" ref="0x40a16e78"/>
        <function-ref name="toggle" scoped="" ref="0x40a13010"/>
        <function-ref name="isOutput" scoped="" ref="0x40a130f0"/>
        <function-ref name="get" scoped="" ref="0x40a131d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a132b0"/>
        <function-ref name="set" scoped="" ref="0x40a13390"/>
        <function-ref name="clr" scoped="" ref="0x40a13470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a338d0" loc="37:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a338d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a33aa8"/>
        <function-ref name="disable" scoped="" ref="0x40a33b88"/>
        <function-ref name="captured" scoped="" ref="0x40a33c68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a33d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a13da0" loc="32:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a13da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a34010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a340f0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a341d0"/>
        <function-ref name="write" scoped="" ref="0x40a342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a31c30" loc="39:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a31c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TRadio" ref="0x404f9118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2f298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a2a598" loc="35:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a2a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a2a770"/>
        <function-ref name="isInput" scoped="" ref="0x40a2a850"/>
        <function-ref name="toggle" scoped="" ref="0x40a2a930"/>
        <function-ref name="isOutput" scoped="" ref="0x40a2aa10"/>
        <function-ref name="get" scoped="" ref="0x40a2aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a2abd0"/>
        <function-ref name="set" scoped="" ref="0x40a2acb0"/>
        <function-ref name="clr" scoped="" ref="0x40a2ad90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a266f0" loc="34:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a266f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a2a288"/>
        <function-ref name="test" scoped="" ref="0x40a2bcb8"/>
        <function-ref name="get" scoped="" ref="0x40a26d38"/>
        <function-ref name="captured" scoped="" ref="0x40a2b2b0"/>
        <function-ref name="reset" scoped="" ref="0x40a2b550"/>
        <function-ref name="isOn" scoped="" ref="0x40a2a010"/>
        <function-ref name="set" scoped="" ref="0x40a2b010"/>
        <function-ref name="start" scoped="" ref="0x40a2b7c8"/>
        <function-ref name="stop" scoped="" ref="0x40a2ba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a25010" loc="36:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a251e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a252c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a253a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a25488"/>
        <function-ref name="get" scoped="" ref="0x40a25568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a25648"/>
        <function-ref name="set" scoped="" ref="0x40a25728"/>
        <function-ref name="clr" scoped="" ref="0x40a25808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a2c0b0" loc="29:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a2c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a2c288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a2fa10" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a2fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a2fbe8"/>
        <function-ref name="disable" scoped="" ref="0x40a2fcc8"/>
        <function-ref name="captured" scoped="" ref="0x40a2fda8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a2fe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a37650" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a37650"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a37828"/>
        <function-ref name="sendDone" scoped="" ref="0x40a37908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a3fc78" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a3fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a3fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a3f010" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a3f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a3f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a3e040" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a3e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a3e218"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a3e2f8"/>
        <function-ref name="splitRead" scoped="" ref="0x40a3e3d8"/>
        <function-ref name="write" scoped="" ref="0x40a3e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a37da0" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a37da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a3d0f0"/>
        <function-ref name="request" scoped="" ref="0x40a3d1d0"/>
        <function-ref name="granted" scoped="" ref="0x40a3d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a7b1e0" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a7b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a7b3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40a7b498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a36d10" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a36d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a36ee8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a35010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a57158" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a57158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a57330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a57410"/>
        <function-ref name="request" scoped="" ref="0x40a574f0"/>
        <function-ref name="granted" scoped="" ref="0x40a575d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a576b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a36370" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a36370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a36548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a36010" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a361e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a484d0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a484d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a486a8"/>
        <function-ref name="sleep" scoped="" ref="0x40a58b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a48868"/>
        <function-ref name="dataReady" scoped="" ref="0x40a58bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a48a28"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a48b08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a48be8"/>
        <function-ref name="read" scoped="" ref="0x40a48cc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a48da8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a48e88"/>
        <function-ref name="setClock" scoped="" ref="0x40a58010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a580f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a581d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a58330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a58410"/>
        <function-ref name="write" scoped="" ref="0x40a584f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a585d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a586b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a58790"/>
        <function-ref name="getClock" scoped="" ref="0x40a58870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a58950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a48788"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a48948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a58a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a366f8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a366f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a368d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a369b0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a36a90"/>
        <function-ref name="write" scoped="" ref="0x40a36b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a35488" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a35488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a35660"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a35740"/>
        <function-ref name="request" scoped="" ref="0x40a35820"/>
        <function-ref name="granted" scoped="" ref="0x40a35900"/>
        <function-ref name="isOwner" scoped="" ref="0x40a359e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a57860" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a57860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a57a38"/>
        <function-ref name="userId" scoped="" ref="0x40a57b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a57ce0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a57ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a57eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a38e40" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a38e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a86050"/>
        <function-ref name="sleep" scoped="" ref="0x40a85470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a86210"/>
        <function-ref name="dataReady" scoped="" ref="0x40a85550"/>
        <function-ref name="initMaster" scoped="" ref="0x40a863d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a864b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a86590"/>
        <function-ref name="read" scoped="" ref="0x40a86670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a86750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a86830"/>
        <function-ref name="setClock" scoped="" ref="0x40a86910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a869f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a86ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a86c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a86d10"/>
        <function-ref name="write" scoped="" ref="0x40a86df0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a86ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a85010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a850f0"/>
        <function-ref name="getClock" scoped="" ref="0x40a851d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a852b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a86130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a862f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a85390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a7fe88" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a7fe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa0070"/>
        <function-ref name="isInput" scoped="" ref="0x40aa0150"/>
        <function-ref name="toggle" scoped="" ref="0x40aa0230"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa0310"/>
        <function-ref name="get" scoped="" ref="0x40aa03f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa04d0"/>
        <function-ref name="set" scoped="" ref="0x40aa05b0"/>
        <function-ref name="clr" scoped="" ref="0x40aa0690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a809e8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a809e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a80bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40a80ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40a80d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40a80e60"/>
        <function-ref name="get" scoped="" ref="0x40a7f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7f0f0"/>
        <function-ref name="set" scoped="" ref="0x40a7f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40a7f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a80010" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a801e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a802c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a803a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a80488"/>
        <function-ref name="get" scoped="" ref="0x40a80568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a80648"/>
        <function-ref name="set" scoped="" ref="0x40a80728"/>
        <function-ref name="clr" scoped="" ref="0x40a80808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a7eac0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a7eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a7ec98"/>
        <function-ref name="stop" scoped="" ref="0x40a7ed78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40aa0898" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40aa0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aa0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a821c8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a821c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a823a0"/>
        <function-ref name="sleep" scoped="" ref="0x40a817f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a82560"/>
        <function-ref name="dataReady" scoped="" ref="0x40a818d0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a82720"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a82800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a828e0"/>
        <function-ref name="read" scoped="" ref="0x40a829c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a82aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a82b80"/>
        <function-ref name="setClock" scoped="" ref="0x40a82c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a82d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a82e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a81010"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a810f0"/>
        <function-ref name="write" scoped="" ref="0x40a811d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a812b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a81390"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a81470"/>
        <function-ref name="getClock" scoped="" ref="0x40a81550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a81630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a82480"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a82640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a81710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a7f4a0" loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a7f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7f678"/>
        <function-ref name="isInput" scoped="" ref="0x40a7f758"/>
        <function-ref name="toggle" scoped="" ref="0x40a7f838"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7f918"/>
        <function-ref name="get" scoped="" ref="0x40a7f9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7fad8"/>
        <function-ref name="set" scoped="" ref="0x40a7fbb8"/>
        <function-ref name="clr" scoped="" ref="0x40a7fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ac22c8" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ac22c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ac24b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ac2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ac2b80" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ac2d68"/>
        <function-ref name="configure" scoped="" ref="0x40ac2e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ac3b30" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ac3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac3d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac3df8"/>
        <function-ref name="request" scoped="" ref="0x40ac3ed8"/>
        <function-ref name="granted" scoped="" ref="0x40ac2010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ac26d0" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ac28a8"/>
        <function-ref name="userId" scoped="" ref="0x40ac2988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412c2700" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412c28d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x412c2a38" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x412c2a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412c2c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x412c2cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412c2dd0"/>
        <function-ref name="dequeue" scoped="" ref="0x412c2eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412c01e8" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412c01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412c03d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412c04b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412c0ab0" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412c0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412c0c98"/>
        <function-ref name="configure" scoped="" ref="0x412c0d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x412c0ed8" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412c0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412be0c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x412be1a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412be280"/>
        <function-ref name="dequeue" scoped="" ref="0x412be360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412c1a50" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412c1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412c1c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412c1d18"/>
        <function-ref name="request" scoped="" ref="0x412c1df8"/>
        <function-ref name="granted" scoped="" ref="0x412c1ed8"/>
        <function-ref name="isOwner" scoped="" ref="0x412c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412c05f0" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412c05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412c07c8"/>
        <function-ref name="userId" scoped="" ref="0x412c08a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x412be4e0" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x412be4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412be6b8"/>
        <function-ref name="runTask" scoped="" ref="0x412be798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40ab3c40" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40ab3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40ab3e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ab3ef8"/>
        <function-ref name="getControlA" scoped="" ref="0x40ab8010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ab80f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40ab81d0"/>
        <function-ref name="setControlB" scoped="" ref="0x40ab82b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40ab8390"/>
        <function-ref name="getControlB" scoped="" ref="0x40ab8470"/>
        <function-ref name="setControlC" scoped="" ref="0x40ab8550"/>
        <function-ref name="setControlA" scoped="" ref="0x40ab8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40ab8968" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ab8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ad7500"/>
        <function-ref name="test" scoped="" ref="0x40ad7010"/>
        <function-ref name="get" scoped="" ref="0x40ab7010"/>
        <function-ref name="captured" scoped="" ref="0x40ab7528"/>
        <function-ref name="reset" scoped="" ref="0x40ab77c8"/>
        <function-ref name="isOn" scoped="" ref="0x40ad7288"/>
        <function-ref name="set" scoped="" ref="0x40ab7288"/>
        <function-ref name="start" scoped="" ref="0x40ab7a40"/>
        <function-ref name="stop" scoped="" ref="0x40ab7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40ad7c10" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40ad7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ad51a0"/>
        <function-ref name="fired" scoped="" ref="0x40ad6790"/>
        <function-ref name="get" scoped="" ref="0x40ad6278"/>
        <function-ref name="reset" scoped="" ref="0x40ad6a08"/>
        <function-ref name="isOn" scoped="" ref="0x40ad5418"/>
        <function-ref name="set" scoped="" ref="0x40ad64f0"/>
        <function-ref name="start" scoped="" ref="0x40ad6c80"/>
        <function-ref name="stop" scoped="" ref="0x40ad6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40abb1a0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40abb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40abac68"/>
        <function-ref name="test" scoped="" ref="0x40aba778"/>
        <function-ref name="get" scoped="" ref="0x40abb7e8"/>
        <function-ref name="setScale" scoped="" ref="0x40abaee0"/>
        <function-ref name="getScale" scoped="" ref="0x40ab91c0"/>
        <function-ref name="reset" scoped="" ref="0x40aba010"/>
        <function-ref name="overflow" scoped="" ref="0x40abbd00"/>
        <function-ref name="isOn" scoped="" ref="0x40aba9f0"/>
        <function-ref name="set" scoped="" ref="0x40abba60"/>
        <function-ref name="start" scoped="" ref="0x40aba288"/>
        <function-ref name="stop" scoped="" ref="0x40aba500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40acf3c8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40acf3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40acf5a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40acf680"/>
        <function-ref name="getControlA" scoped="" ref="0x40acf760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40acf840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40acf920"/>
        <function-ref name="setControlB" scoped="" ref="0x40acfa00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40acfae0"/>
        <function-ref name="getControlB" scoped="" ref="0x40acfbc0"/>
        <function-ref name="setControlC" scoped="" ref="0x40acfca0"/>
        <function-ref name="setControlA" scoped="" ref="0x40acfd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40acb010" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40acb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40aca578"/>
        <function-ref name="fired" scoped="" ref="0x40acbb70"/>
        <function-ref name="get" scoped="" ref="0x40acb658"/>
        <function-ref name="reset" scoped="" ref="0x40acbde8"/>
        <function-ref name="isOn" scoped="" ref="0x40aca7f0"/>
        <function-ref name="set" scoped="" ref="0x40acb8d0"/>
        <function-ref name="start" scoped="" ref="0x40aca088"/>
        <function-ref name="stop" scoped="" ref="0x40aca300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40ace0f0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ace0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40accb80"/>
        <function-ref name="test" scoped="" ref="0x40acc690"/>
        <function-ref name="get" scoped="" ref="0x40ace738"/>
        <function-ref name="captured" scoped="" ref="0x40acec50"/>
        <function-ref name="reset" scoped="" ref="0x40aceef0"/>
        <function-ref name="isOn" scoped="" ref="0x40acc908"/>
        <function-ref name="set" scoped="" ref="0x40ace9b0"/>
        <function-ref name="start" scoped="" ref="0x40acc1a0"/>
        <function-ref name="stop" scoped="" ref="0x40acc418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40acac08" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40acac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ac71a0"/>
        <function-ref name="fired" scoped="" ref="0x40ac8790"/>
        <function-ref name="get" scoped="" ref="0x40ac8278"/>
        <function-ref name="reset" scoped="" ref="0x40ac8a08"/>
        <function-ref name="isOn" scoped="" ref="0x40ac7418"/>
        <function-ref name="set" scoped="" ref="0x40ac84f0"/>
        <function-ref name="start" scoped="" ref="0x40ac8c80"/>
        <function-ref name="stop" scoped="" ref="0x40ac8ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40ac7830" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40ac7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ac6d90"/>
        <function-ref name="fired" scoped="" ref="0x40ac63b0"/>
        <function-ref name="get" scoped="" ref="0x40ac7e78"/>
        <function-ref name="reset" scoped="" ref="0x40ac6628"/>
        <function-ref name="isOn" scoped="" ref="0x40aea048"/>
        <function-ref name="set" scoped="" ref="0x40ac6110"/>
        <function-ref name="start" scoped="" ref="0x40ac68a0"/>
        <function-ref name="stop" scoped="" ref="0x40ac6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ad10e0" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ad10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ad0b30"/>
        <function-ref name="test" scoped="" ref="0x40ad0640"/>
        <function-ref name="get" scoped="" ref="0x40ad1728"/>
        <function-ref name="setScale" scoped="" ref="0x40ad0da8"/>
        <function-ref name="getScale" scoped="" ref="0x40acf068"/>
        <function-ref name="reset" scoped="" ref="0x40ad1eb8"/>
        <function-ref name="overflow" scoped="" ref="0x40ad1c40"/>
        <function-ref name="isOn" scoped="" ref="0x40ad08b8"/>
        <function-ref name="set" scoped="" ref="0x40ad19a0"/>
        <function-ref name="start" scoped="" ref="0x40ad0150"/>
        <function-ref name="stop" scoped="" ref="0x40ad03c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b1bc88" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b1bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b38150"/>
        <function-ref name="fired" scoped="" ref="0x40b3a908"/>
        <function-ref name="startAt" scoped="" ref="0x40b3adf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b3ab80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b383c8"/>
        <function-ref name="start" scoped="" ref="0x40b3a3f0"/>
        <function-ref name="stop" scoped="" ref="0x40b3a690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b13480" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b13480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f95d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f95d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b13658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b13868" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b13868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b302e0"/>
        <function-ref name="test" scoped="" ref="0x40b12dd0"/>
        <function-ref name="get" scoped="" ref="0x40b13eb0"/>
        <function-ref name="setScale" scoped="" ref="0x40b30558"/>
        <function-ref name="getScale" scoped="" ref="0x40b307f8"/>
        <function-ref name="reset" scoped="" ref="0x40b12668"/>
        <function-ref name="overflow" scoped="" ref="0x40b123f0"/>
        <function-ref name="isOn" scoped="" ref="0x40b30068"/>
        <function-ref name="set" scoped="" ref="0x40b12150"/>
        <function-ref name="start" scoped="" ref="0x40b128e0"/>
        <function-ref name="stop" scoped="" ref="0x40b12b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x412f8db0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x412f8db0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f93d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f93d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x412f5278"/>
        <function-ref name="fired" scoped="" ref="0x412f6a30"/>
        <function-ref name="startAt" scoped="" ref="0x412f6f20"/>
        <function-ref name="isRunning" scoped="" ref="0x412f6ca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x412f54f0"/>
        <function-ref name="start" scoped="" ref="0x412f6518"/>
        <function-ref name="stop" scoped="" ref="0x412f67b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x412f3a60" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x412f3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x412f0010"/>
        <function-ref name="fired" scoped="" ref="0x412f15f0"/>
        <function-ref name="get" scoped="" ref="0x412f10d8"/>
        <function-ref name="reset" scoped="" ref="0x412f1868"/>
        <function-ref name="isOn" scoped="" ref="0x412f0288"/>
        <function-ref name="set" scoped="" ref="0x412f1350"/>
        <function-ref name="start" scoped="" ref="0x412f1ae0"/>
        <function-ref name="stop" scoped="" ref="0x412f1d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x412f57b0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x412f57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x412f3288"/>
        <function-ref name="test" scoped="" ref="0x412f4d08"/>
        <function-ref name="get" scoped="" ref="0x412f5df8"/>
        <function-ref name="setScale" scoped="" ref="0x412f3500"/>
        <function-ref name="getScale" scoped="" ref="0x412f37a0"/>
        <function-ref name="reset" scoped="" ref="0x412f45a0"/>
        <function-ref name="overflow" scoped="" ref="0x412f4328"/>
        <function-ref name="isOn" scoped="" ref="0x412f3010"/>
        <function-ref name="set" scoped="" ref="0x412f4088"/>
        <function-ref name="start" scoped="" ref="0x412f4818"/>
        <function-ref name="stop" scoped="" ref="0x412f4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b5f570" loc="28:/opt/tinyos-2.1.1/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b5f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b5fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b5c688" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b5c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b5cdd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b592e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b59068"/>
        <function-ref name="overflow" scoped="" ref="0x40b59558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b57e90" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b57e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TOne" ref="0x4037c2f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b4d600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b4daf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b4d878"/>
        <function-ref name="overflow" scoped="" ref="0x40b4dd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b4c078" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b4c078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b73ab8"/>
        <function-ref name="test" scoped="" ref="0x40b735c8"/>
        <function-ref name="get" scoped="" ref="0x40b4c6c0"/>
        <function-ref name="setScale" scoped="" ref="0x40b73d30"/>
        <function-ref name="getScale" scoped="" ref="0x40b72010"/>
        <function-ref name="reset" scoped="" ref="0x40b4ce50"/>
        <function-ref name="overflow" scoped="" ref="0x40b4cbd8"/>
        <function-ref name="isOn" scoped="" ref="0x40b73840"/>
        <function-ref name="set" scoped="" ref="0x40b4c938"/>
        <function-ref name="start" scoped="" ref="0x40b730d8"/>
        <function-ref name="stop" scoped="" ref="0x40b73350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b600e0" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b600e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b60830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b60d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b60aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40b86010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b5ae60" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b5ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b705e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b70ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b70858"/>
        <function-ref name="overflow" scoped="" ref="0x40b70d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b86f18" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b86f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b85578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b858c8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b858c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b84048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b84538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b842c0"/>
        <function-ref name="overflow" scoped="" ref="0x40b847b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40b80010" loc="31:/opt/tinyos-2.1.1/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40b80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40b80760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b81e00" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b81e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7d010"/>
        <function-ref name="get" scoped="" ref="0x40b7d0f0"/>
        <function-ref name="setValue" scoped="" ref="0x40b7d1d0"/>
        <function-ref name="set" scoped="" ref="0x40b7d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b7c3e0" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b7c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7c5b8"/>
        <function-ref name="get" scoped="" ref="0x40b7c698"/>
        <function-ref name="setValue" scoped="" ref="0x40b7c778"/>
        <function-ref name="set" scoped="" ref="0x40b7c858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b7ba30" loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b7ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7bc08"/>
        <function-ref name="get" scoped="" ref="0x40b7bce8"/>
        <function-ref name="setValue" scoped="" ref="0x40b7bdc8"/>
        <function-ref name="set" scoped="" ref="0x40b7bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40baa280" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40baa280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40baa458"/>
        <function-ref name="getPayload" scoped="" ref="0x40baa538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40baa618"/>
        <function-ref name="cancel" scoped="" ref="0x40baa6f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40baa7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40baa918" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40baa918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40baaaf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40baabd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40baacb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40baad90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40baae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c02010" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c021e8"/>
        <function-ref name="source" scoped="" ref="0x40c022c8"/>
        <function-ref name="address" scoped="" ref="0x40c023a8"/>
        <function-ref name="destination" scoped="" ref="0x40c02488"/>
        <function-ref name="setSource" scoped="" ref="0x40c02568"/>
        <function-ref name="setDestination" scoped="" ref="0x40c02648"/>
        <function-ref name="type" scoped="" ref="0x40c02728"/>
        <function-ref name="setType" scoped="" ref="0x40c02808"/>
        <function-ref name="isForMe" scoped="" ref="0x40c028e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40c029c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40c02aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c02c08" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c02c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c02de0"/>
        <function-ref name="noAck" scoped="" ref="0x40c02ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c01010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4131cb18" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4131cb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4131ccf0"/>
        <function-ref name="getPayload" scoped="" ref="0x4131cdd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4131ceb0"/>
        <function-ref name="cancel" scoped="" ref="0x41319010"/>
        <function-ref name="sendDone" scoped="" ref="0x413190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41319230" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41319230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41319408"/>
        <function-ref name="payloadLength" scoped="" ref="0x413194e8"/>
        <function-ref name="getPayload" scoped="" ref="0x413195c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413196a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41319788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413198c8" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413198c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41319aa0"/>
        <function-ref name="source" scoped="" ref="0x41319b80"/>
        <function-ref name="address" scoped="" ref="0x41319c60"/>
        <function-ref name="destination" scoped="" ref="0x41319d40"/>
        <function-ref name="setSource" scoped="" ref="0x41319e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41319f00"/>
        <function-ref name="type" scoped="" ref="0x41318010"/>
        <function-ref name="setType" scoped="" ref="0x413180f0"/>
        <function-ref name="isForMe" scoped="" ref="0x413181d0"/>
        <function-ref name="setGroup" scoped="" ref="0x413182b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41318390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x413184f0" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x413184f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x413186c8"/>
        <function-ref name="noAck" scoped="" ref="0x413187a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41318888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41312228" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41312228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41312400"/>
        <function-ref name="getPayload" scoped="" ref="0x413124e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413125c0"/>
        <function-ref name="cancel" scoped="" ref="0x413126a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41312780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413128f0" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413128f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41312ac8"/>
        <function-ref name="getPayload" scoped="" ref="0x41312ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41312c88"/>
        <function-ref name="cancel" scoped="" ref="0x41312d68"/>
        <function-ref name="sendDone" scoped="" ref="0x41312e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41311010" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ProximityAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41311010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413111e8"/>
        <function-ref name="source" scoped="" ref="0x413112c8"/>
        <function-ref name="address" scoped="" ref="0x413113a8"/>
        <function-ref name="destination" scoped="" ref="0x41311488"/>
        <function-ref name="setSource" scoped="" ref="0x41311568"/>
        <function-ref name="setDestination" scoped="" ref="0x41311648"/>
        <function-ref name="type" scoped="" ref="0x41311728"/>
        <function-ref name="setType" scoped="" ref="0x41311808"/>
        <function-ref name="isForMe" scoped="" ref="0x413118e8"/>
        <function-ref name="setGroup" scoped="" ref="0x413119c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41311aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bb7410" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bb7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb75e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb76c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb77a8"/>
        <function-ref name="cancel" scoped="" ref="0x40bb7888"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb7968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40be2b48" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40be2b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be2d30"/>
        <function-ref name="getPayload" scoped="" ref="0x40be2e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be2ef0"/>
        <function-ref name="cancel" scoped="" ref="0x40be1010"/>
        <function-ref name="sendDone" scoped="" ref="0x40be10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be23d8" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be25c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be26a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be2780"/>
        <function-ref name="cancel" scoped="" ref="0x40be2860"/>
        <function-ref name="sendDone" scoped="" ref="0x40be2940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40be1e08" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40be1e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be0010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40be00f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be01d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be02b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40be0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40be0510" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40be0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40be06e8"/>
        <function-ref name="runTask" scoped="" ref="0x40be07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40be0948" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40be0948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40be0b20"/>
        <function-ref name="runTask" scoped="" ref="0x40be0c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40be1230" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40be1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40be1408"/>
        <function-ref name="source" scoped="" ref="0x40be14e8"/>
        <function-ref name="address" scoped="" ref="0x40be15c8"/>
        <function-ref name="destination" scoped="" ref="0x40be16a8"/>
        <function-ref name="setSource" scoped="" ref="0x40be1788"/>
        <function-ref name="setDestination" scoped="" ref="0x40be1868"/>
        <function-ref name="type" scoped="" ref="0x40be1948"/>
        <function-ref name="setType" scoped="" ref="0x40be1a28"/>
        <function-ref name="isForMe" scoped="" ref="0x40be1b08"/>
        <function-ref name="setGroup" scoped="" ref="0x40be1be8"/>
        <function-ref name="localGroup" scoped="" ref="0x40be1cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bffa70" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ProximityAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bffa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bffc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bffd28"/>
        <function-ref name="getPayload" scoped="" ref="0x40bffe08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bffee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bfb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bff758" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ProximityAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bff758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bff930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bfb150" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ProximityAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bfb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bfb328"/>
        <function-ref name="source" scoped="" ref="0x40bfb408"/>
        <function-ref name="address" scoped="" ref="0x40bfb4e8"/>
        <function-ref name="destination" scoped="" ref="0x40bfb5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40bfb6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40bfb788"/>
        <function-ref name="type" scoped="" ref="0x40bfb868"/>
        <function-ref name="setType" scoped="" ref="0x40bfb948"/>
        <function-ref name="isForMe" scoped="" ref="0x40bfba28"/>
        <function-ref name="setGroup" scoped="" ref="0x40bfbb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40bfbbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bf3c88" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bf3c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bf3e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bf1010"/>
        <function-ref name="led1On" scoped="" ref="0x40bf10f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bf11d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bf12b0"/>
        <function-ref name="get" scoped="" ref="0x40bf1390"/>
        <function-ref name="led1Off" scoped="" ref="0x40bf1470"/>
        <function-ref name="led2Off" scoped="" ref="0x40bf17f0"/>
        <function-ref name="set" scoped="" ref="0x40bf1550"/>
        <function-ref name="led0On" scoped="" ref="0x40bf1630"/>
        <function-ref name="led2On" scoped="" ref="0x40bf1710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40c2b450" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40c2b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2b628"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40c2b708"/>
        <function-ref name="computeCrc" scoped="" ref="0x40c2b7e8"/>
        <function-ref name="getSize" scoped="" ref="0x40c2b8c8"/>
        <function-ref name="readDone" scoped="" ref="0x40c2b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c26918" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c26918"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c26af0"/>
        <function-ref name="writeDone" scoped="" ref="0x40c26bd0"/>
        <function-ref name="erase" scoped="" ref="0x40c26cb0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c26d90"/>
        <function-ref name="write" scoped="" ref="0x40c26e70"/>
        <function-ref name="sync" scoped="" ref="0x40c08010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c08180" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c08180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c08358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c08438"/>
        <function-ref name="led1On" scoped="" ref="0x40c08518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c085f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c086d8"/>
        <function-ref name="get" scoped="" ref="0x40c087b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40c08898"/>
        <function-ref name="led2Off" scoped="" ref="0x40c08c18"/>
        <function-ref name="set" scoped="" ref="0x40c08978"/>
        <function-ref name="led0On" scoped="" ref="0x40c08a58"/>
        <function-ref name="led2On" scoped="" ref="0x40c08b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x40c09890" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40c09890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c09a68"/>
        <function-ref name="receiveDone" scoped="" ref="0x40c09b48"/>
        <function-ref name="publish" scoped="" ref="0x40c09c28"/>
        <function-ref name="stop" scoped="" ref="0x40c09d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c1f3f0" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c1f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c48ed0"/>
        <function-ref name="fired" scoped="" ref="0x40c48188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c48890"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c48638"/>
        <function-ref name="getdt" scoped="" ref="0x40c473a8"/>
        <function-ref name="gett0" scoped="" ref="0x40c47150"/>
        <function-ref name="isRunning" scoped="" ref="0x40c483e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c1fa18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c48bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c1fc98"/>
        <function-ref name="stop" scoped="" ref="0x40c1ff18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x40c3fe50" loc="43:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x40c3fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c46050"/>
        <function-ref name="getPayload" scoped="" ref="0x40c46130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c46210"/>
        <function-ref name="cancel" scoped="" ref="0x40c462f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c463d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40c20e78" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c20e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c1f070"/>
        <function-ref name="rand32" scoped="" ref="0x40c1f150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x40c46600" loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x40c46600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c467d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c46c90" loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c46c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c46e68"/>
        <function-ref name="writeDone" scoped="" ref="0x40c3e010"/>
        <function-ref name="erase" scoped="" ref="0x40c3e0f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c3e1d0"/>
        <function-ref name="write" scoped="" ref="0x40c3e2b0"/>
        <function-ref name="sync" scoped="" ref="0x40c3e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x40c361e8" loc="99:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x40c361e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c363c0"/>
        <function-ref name="runTask" scoped="" ref="0x40c364a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c3e500" loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c3e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c3e6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c3e7b8"/>
        <function-ref name="led1On" scoped="" ref="0x40c3e898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c3e978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c3ea58"/>
        <function-ref name="get" scoped="" ref="0x40c3eb38"/>
        <function-ref name="led1Off" scoped="" ref="0x40c3ec18"/>
        <function-ref name="led2Off" scoped="" ref="0x40c3d010"/>
        <function-ref name="set" scoped="" ref="0x40c3ecf8"/>
        <function-ref name="led0On" scoped="" ref="0x40c3edd8"/>
        <function-ref name="led2On" scoped="" ref="0x40c3eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x40c41410" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c41410"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40c41b28"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40c416c8"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40c417a8"/>
        <function-ref name="receivedPage" scoped="" ref="0x40c41888"/>
        <function-ref name="setImgNum" scoped="" ref="0x40c41968"/>
        <function-ref name="isTransferring" scoped="" ref="0x40c41a48"/>
        <function-ref name="stop" scoped="" ref="0x40c415e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x40c3f990" loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40c3f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40c3fb68"/>
        <function-ref name="crc16" scoped="" ref="0x40c3fc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x40c20850" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x40c20850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c20a28"/>
        <function-ref name="receiveDone" scoped="" ref="0x40c20b08"/>
        <function-ref name="publish" scoped="" ref="0x40c20be8"/>
        <function-ref name="stop" scoped="" ref="0x40c20cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40c853d8" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40c853d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c855b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c85690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c85770"/>
        <function-ref name="cancel" scoped="" ref="0x40c85850"/>
        <function-ref name="sendDone" scoped="" ref="0x40c85930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40c87178" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40c87178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c87350"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40c87430"/>
        <function-ref name="computeCrc" scoped="" ref="0x40c87510"/>
        <function-ref name="getSize" scoped="" ref="0x40c875f0"/>
        <function-ref name="readDone" scoped="" ref="0x40c876d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c87b88" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c87b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c87d60"/>
        <function-ref name="writeDone" scoped="" ref="0x40c87e40"/>
        <function-ref name="erase" scoped="" ref="0x40c87f20"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c86018"/>
        <function-ref name="write" scoped="" ref="0x40c860f8"/>
        <function-ref name="sync" scoped="" ref="0x40c861d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40c86410" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c86410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c865e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40c86818" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c86818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c869f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40c86c00" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40c86c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c86dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c86eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c85010"/>
        <function-ref name="cancel" scoped="" ref="0x40c850f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c851d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40c23560" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c23560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40c23c78"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40c23818"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40c238f8"/>
        <function-ref name="receivedPage" scoped="" ref="0x40c239d8"/>
        <function-ref name="setImgNum" scoped="" ref="0x40c23ab8"/>
        <function-ref name="isTransferring" scoped="" ref="0x40c23b98"/>
        <function-ref name="stop" scoped="" ref="0x40c23738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c84850" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c84850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c84a28"/>
        <function-ref name="noAck" scoped="" ref="0x40c84b08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c84be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c84d58" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c84d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c83010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c830f0"/>
        <function-ref name="led1On" scoped="" ref="0x40c831d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c832b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c83390"/>
        <function-ref name="get" scoped="" ref="0x40c83470"/>
        <function-ref name="led1Off" scoped="" ref="0x40c83550"/>
        <function-ref name="led2Off" scoped="" ref="0x40c838d0"/>
        <function-ref name="set" scoped="" ref="0x40c83630"/>
        <function-ref name="led0On" scoped="" ref="0x40c83710"/>
        <function-ref name="led2On" scoped="" ref="0x40c837f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40c85ac8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c85ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c85ca0"/>
        <function-ref name="source" scoped="" ref="0x40c85d80"/>
        <function-ref name="address" scoped="" ref="0x40c85e60"/>
        <function-ref name="destination" scoped="" ref="0x40c84010"/>
        <function-ref name="setSource" scoped="" ref="0x40c840f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c841d0"/>
        <function-ref name="type" scoped="" ref="0x40c842b0"/>
        <function-ref name="setType" scoped="" ref="0x40c84390"/>
        <function-ref name="isForMe" scoped="" ref="0x40c84470"/>
        <function-ref name="setGroup" scoped="" ref="0x40c84550"/>
        <function-ref name="localGroup" scoped="" ref="0x40c84630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40c75a68" loc="49:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40c75a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40c75c40"/>
        <function-ref name="rand32" scoped="" ref="0x40c75d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40c7ed88" loc="45:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40c7ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c79010"/>
        <function-ref name="getPayload" scoped="" ref="0x40c790f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c791d0"/>
        <function-ref name="cancel" scoped="" ref="0x40c792b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c79390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40c7aac8" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40c7aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c7aca0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40c7ad80"/>
        <function-ref name="computeCrc" scoped="" ref="0x40c7ae60"/>
        <function-ref name="getSize" scoped="" ref="0x40c7f010"/>
        <function-ref name="readDone" scoped="" ref="0x40c7f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x40c7a280" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40c7a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40c7a458"/>
        <function-ref name="printBitVec" scoped="" ref="0x40c7a538"/>
        <function-ref name="countOnes" scoped="" ref="0x40c7a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40c7f5a8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40c7f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40c7f780"/>
        <function-ref name="writeDone" scoped="" ref="0x40c7f860"/>
        <function-ref name="erase" scoped="" ref="0x40c7f940"/>
        <function-ref name="eraseDone" scoped="" ref="0x40c7fa20"/>
        <function-ref name="write" scoped="" ref="0x40c7fb00"/>
        <function-ref name="sync" scoped="" ref="0x40c7fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x40c7fe18" loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x40c7fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x40c7e240" loc="43:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x40c7e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c7e418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x40c7e628" loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x40c7e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c7e800"/>
        <function-ref name="getPayload" scoped="" ref="0x40c7e8e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c7e9c0"/>
        <function-ref name="cancel" scoped="" ref="0x40c7eaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c7eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c75e90" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c75e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ca0108"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ca01e8"/>
        <function-ref name="led1On" scoped="" ref="0x40ca02c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ca03a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ca0488"/>
        <function-ref name="get" scoped="" ref="0x40ca0568"/>
        <function-ref name="led1Off" scoped="" ref="0x40ca0648"/>
        <function-ref name="led2Off" scoped="" ref="0x40ca09c8"/>
        <function-ref name="set" scoped="" ref="0x40ca0728"/>
        <function-ref name="led0On" scoped="" ref="0x40ca0808"/>
        <function-ref name="led2On" scoped="" ref="0x40ca08e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x40c80138" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x40c80138"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x40c80850"/>
        <function-ref name="dataAvailable" scoped="" ref="0x40c803f0"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x40c804d0"/>
        <function-ref name="receivedPage" scoped="" ref="0x40c805b0"/>
        <function-ref name="setImgNum" scoped="" ref="0x40c80690"/>
        <function-ref name="isTransferring" scoped="" ref="0x40c80770"/>
        <function-ref name="stop" scoped="" ref="0x40c80310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c78230" loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c78230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c78408"/>
        <function-ref name="noAck" scoped="" ref="0x40c784e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c785c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40c79528" loc="46:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c79528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c79700"/>
        <function-ref name="source" scoped="" ref="0x40c797e0"/>
        <function-ref name="address" scoped="" ref="0x40c798c0"/>
        <function-ref name="destination" scoped="" ref="0x40c799a0"/>
        <function-ref name="setSource" scoped="" ref="0x40c79a80"/>
        <function-ref name="setDestination" scoped="" ref="0x40c79b60"/>
        <function-ref name="type" scoped="" ref="0x40c79c40"/>
        <function-ref name="setType" scoped="" ref="0x40c79d20"/>
        <function-ref name="isForMe" scoped="" ref="0x40c79e00"/>
        <function-ref name="setGroup" scoped="" ref="0x40c79ee0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c78010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c78868" loc="48:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c78868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c75368"/>
        <function-ref name="fired" scoped="" ref="0x40c76608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c76d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c76ab8"/>
        <function-ref name="getdt" scoped="" ref="0x40c75818"/>
        <function-ref name="gett0" scoped="" ref="0x40c755c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c76860"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c78e90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c75048"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c76130"/>
        <function-ref name="stop" scoped="" ref="0x40c763b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x40cd55c0" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40cd55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x40cd5798"/>
        <function-ref name="printBitVec" scoped="" ref="0x40cd5878"/>
        <function-ref name="countOnes" scoped="" ref="0x40cd5958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cd4ad8" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cd4ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cf96a8"/>
        <function-ref name="fired" scoped="" ref="0x40cd3938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cf9068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd3de8"/>
        <function-ref name="getdt" scoped="" ref="0x40cf9b58"/>
        <function-ref name="gett0" scoped="" ref="0x40cf9900"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd3b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd31e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cf9388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd3460"/>
        <function-ref name="stop" scoped="" ref="0x40cd36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x40d11898" loc="38:/opt/tinyos-2.1.1/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40d11898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40d11a70"/>
        <function-ref name="crc16" scoped="" ref="0x40d11b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cf26a0" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cf26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf2878"/>
        <function-ref name="getPayload" scoped="" ref="0x40cf2958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cf2a38"/>
        <function-ref name="cancel" scoped="" ref="0x40cf2b18"/>
        <function-ref name="sendDone" scoped="" ref="0x40cf2bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cf2d38" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cf2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cf2f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d0c010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0c1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d0c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d0c3f0" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d0c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d0c5c8"/>
        <function-ref name="source" scoped="" ref="0x40d0c6a8"/>
        <function-ref name="address" scoped="" ref="0x40d0c788"/>
        <function-ref name="destination" scoped="" ref="0x40d0c868"/>
        <function-ref name="setSource" scoped="" ref="0x40d0c948"/>
        <function-ref name="setDestination" scoped="" ref="0x40d0ca28"/>
        <function-ref name="type" scoped="" ref="0x40d0cb08"/>
        <function-ref name="setType" scoped="" ref="0x40d0cbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d0ccc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d0cda8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d0ce88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d0b010" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d0b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d0b1e8"/>
        <function-ref name="noAck" scoped="" ref="0x40d0b2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d0b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413248a8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413248a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41324a80"/>
        <function-ref name="getPayload" scoped="" ref="0x41324b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41324c40"/>
        <function-ref name="cancel" scoped="" ref="0x41324d20"/>
        <function-ref name="sendDone" scoped="" ref="0x41324e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41321010" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41321010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413211e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x413212c8"/>
        <function-ref name="getPayload" scoped="" ref="0x413213a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41321488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41321568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413216a8" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413216a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41321880"/>
        <function-ref name="source" scoped="" ref="0x41321960"/>
        <function-ref name="address" scoped="" ref="0x41321a40"/>
        <function-ref name="destination" scoped="" ref="0x41321b20"/>
        <function-ref name="setSource" scoped="" ref="0x41321c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41321ce0"/>
        <function-ref name="type" scoped="" ref="0x41321dc0"/>
        <function-ref name="setType" scoped="" ref="0x41321ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41320010"/>
        <function-ref name="setGroup" scoped="" ref="0x413200f0"/>
        <function-ref name="localGroup" scoped="" ref="0x413201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41320330" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41320330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41320508"/>
        <function-ref name="noAck" scoped="" ref="0x413205e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x413206c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41365440" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41365440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41365618"/>
        <function-ref name="getPayload" scoped="" ref="0x413656f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413657d8"/>
        <function-ref name="cancel" scoped="" ref="0x413658b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41365998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41365b08" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41365b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41365ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x41365dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41365ea0"/>
        <function-ref name="cancel" scoped="" ref="0x41364010"/>
        <function-ref name="sendDone" scoped="" ref="0x413640f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41364230" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41364230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41364408"/>
        <function-ref name="source" scoped="" ref="0x413644e8"/>
        <function-ref name="address" scoped="" ref="0x413645c8"/>
        <function-ref name="destination" scoped="" ref="0x413646a8"/>
        <function-ref name="setSource" scoped="" ref="0x41364788"/>
        <function-ref name="setDestination" scoped="" ref="0x41364868"/>
        <function-ref name="type" scoped="" ref="0x41364948"/>
        <function-ref name="setType" scoped="" ref="0x41364a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41364b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41364be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41364cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d099b8" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d099b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d09b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d09c70"/>
        <function-ref name="getPayload" scoped="" ref="0x40d09d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d09e30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d09f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d096a0" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d096a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d09878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d08070" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d08070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d08248"/>
        <function-ref name="source" scoped="" ref="0x40d08328"/>
        <function-ref name="address" scoped="" ref="0x40d08408"/>
        <function-ref name="destination" scoped="" ref="0x40d084e8"/>
        <function-ref name="setSource" scoped="" ref="0x40d085c8"/>
        <function-ref name="setDestination" scoped="" ref="0x40d086a8"/>
        <function-ref name="type" scoped="" ref="0x40d08788"/>
        <function-ref name="setType" scoped="" ref="0x40d08868"/>
        <function-ref name="isForMe" scoped="" ref="0x40d08948"/>
        <function-ref name="setGroup" scoped="" ref="0x40d08a28"/>
        <function-ref name="localGroup" scoped="" ref="0x40d08b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d07b48" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d07b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d07d20"/>
        <function-ref name="getPayload" scoped="" ref="0x40d07e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d07ee0"/>
        <function-ref name="cancel" scoped="" ref="0x40d06010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d06230" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d06230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d06408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d064e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d065c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d066a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d06788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d068c8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d068c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d06aa0"/>
        <function-ref name="source" scoped="" ref="0x40d06b80"/>
        <function-ref name="address" scoped="" ref="0x40d06c60"/>
        <function-ref name="destination" scoped="" ref="0x40d06d40"/>
        <function-ref name="setSource" scoped="" ref="0x40d06e20"/>
        <function-ref name="setDestination" scoped="" ref="0x40d06f00"/>
        <function-ref name="type" scoped="" ref="0x40d05010"/>
        <function-ref name="setType" scoped="" ref="0x40d050f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d051d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40d052b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d05390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d054f0" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d054f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d056c8"/>
        <function-ref name="noAck" scoped="" ref="0x40d057a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d05888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413557a8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413557a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41355980"/>
        <function-ref name="getPayload" scoped="" ref="0x41355a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41355b40"/>
        <function-ref name="cancel" scoped="" ref="0x41355c20"/>
        <function-ref name="sendDone" scoped="" ref="0x41355d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41355e40" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41355e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41354050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41354130"/>
        <function-ref name="getPayload" scoped="" ref="0x41354210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413542f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413543d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41354510" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41354510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413546e8"/>
        <function-ref name="source" scoped="" ref="0x413547c8"/>
        <function-ref name="address" scoped="" ref="0x413548a8"/>
        <function-ref name="destination" scoped="" ref="0x41354988"/>
        <function-ref name="setSource" scoped="" ref="0x41354a68"/>
        <function-ref name="setDestination" scoped="" ref="0x41354b48"/>
        <function-ref name="type" scoped="" ref="0x41354c28"/>
        <function-ref name="setType" scoped="" ref="0x41354d08"/>
        <function-ref name="isForMe" scoped="" ref="0x41354de8"/>
        <function-ref name="setGroup" scoped="" ref="0x41354ec8"/>
        <function-ref name="localGroup" scoped="" ref="0x41353010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41353170" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41353170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41353348"/>
        <function-ref name="noAck" scoped="" ref="0x41353428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41353508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4134d2b8" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4134d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4134d490"/>
        <function-ref name="getPayload" scoped="" ref="0x4134d570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4134d650"/>
        <function-ref name="cancel" scoped="" ref="0x4134d730"/>
        <function-ref name="sendDone" scoped="" ref="0x4134d810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4134d980" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4134d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4134db58"/>
        <function-ref name="getPayload" scoped="" ref="0x4134dc38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4134dd18"/>
        <function-ref name="cancel" scoped="" ref="0x4134ddf8"/>
        <function-ref name="sendDone" scoped="" ref="0x4134ded8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4134c030" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4134c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4134c208"/>
        <function-ref name="source" scoped="" ref="0x4134c2e8"/>
        <function-ref name="address" scoped="" ref="0x4134c3c8"/>
        <function-ref name="destination" scoped="" ref="0x4134c4a8"/>
        <function-ref name="setSource" scoped="" ref="0x4134c588"/>
        <function-ref name="setDestination" scoped="" ref="0x4134c668"/>
        <function-ref name="type" scoped="" ref="0x4134c748"/>
        <function-ref name="setType" scoped="" ref="0x4134c828"/>
        <function-ref name="isForMe" scoped="" ref="0x4134c908"/>
        <function-ref name="setGroup" scoped="" ref="0x4134c9e8"/>
        <function-ref name="localGroup" scoped="" ref="0x4134cac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d04dd0" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d04dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d03010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d030f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d031d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d032b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d03390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d04ab8" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d04ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d04c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d034d0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d034d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d036a8"/>
        <function-ref name="source" scoped="" ref="0x40d03788"/>
        <function-ref name="address" scoped="" ref="0x40d03868"/>
        <function-ref name="destination" scoped="" ref="0x40d03948"/>
        <function-ref name="setSource" scoped="" ref="0x40d03a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40d03b08"/>
        <function-ref name="type" scoped="" ref="0x40d03be8"/>
        <function-ref name="setType" scoped="" ref="0x40d03cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d03da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d03e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40d02010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d01070" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d01070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d01248"/>
        <function-ref name="getPayload" scoped="" ref="0x40d01328"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d01408"/>
        <function-ref name="cancel" scoped="" ref="0x40d014e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d015c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d01708" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d01708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d018e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d019c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d01aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d01b80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d01c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d01da0" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d01da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d00010"/>
        <function-ref name="source" scoped="" ref="0x40d000f0"/>
        <function-ref name="address" scoped="" ref="0x40d001d0"/>
        <function-ref name="destination" scoped="" ref="0x40d002b0"/>
        <function-ref name="setSource" scoped="" ref="0x40d00390"/>
        <function-ref name="setDestination" scoped="" ref="0x40d00470"/>
        <function-ref name="type" scoped="" ref="0x40d00550"/>
        <function-ref name="setType" scoped="" ref="0x40d00630"/>
        <function-ref name="isForMe" scoped="" ref="0x40d00710"/>
        <function-ref name="setGroup" scoped="" ref="0x40d007f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d008d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d00a30" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d00a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d00c08"/>
        <function-ref name="noAck" scoped="" ref="0x40d00ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d00dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413854d8" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413854d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413856b0"/>
        <function-ref name="getPayload" scoped="" ref="0x41385790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41385870"/>
        <function-ref name="cancel" scoped="" ref="0x41385950"/>
        <function-ref name="sendDone" scoped="" ref="0x41385a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41385b70" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41385b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41385d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x41385e28"/>
        <function-ref name="getPayload" scoped="" ref="0x41385f08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41384010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41384230" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41384230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41384408"/>
        <function-ref name="source" scoped="" ref="0x413844e8"/>
        <function-ref name="address" scoped="" ref="0x413845c8"/>
        <function-ref name="destination" scoped="" ref="0x413846a8"/>
        <function-ref name="setSource" scoped="" ref="0x41384788"/>
        <function-ref name="setDestination" scoped="" ref="0x41384868"/>
        <function-ref name="type" scoped="" ref="0x41384948"/>
        <function-ref name="setType" scoped="" ref="0x41384a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41384b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41384be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41384cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41384e28" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41384e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41383050"/>
        <function-ref name="noAck" scoped="" ref="0x41383130"/>
        <function-ref name="wasAcked" scoped="" ref="0x41383210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41381d00" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41381d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41381ed8"/>
        <function-ref name="getPayload" scoped="" ref="0x4137e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4137e0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4137e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4137e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4137e420" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4137e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4137e5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4137e6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4137e7b8"/>
        <function-ref name="cancel" scoped="" ref="0x4137e898"/>
        <function-ref name="sendDone" scoped="" ref="0x4137e978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4137eab8" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4137eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4137ec90"/>
        <function-ref name="source" scoped="" ref="0x4137ed70"/>
        <function-ref name="address" scoped="" ref="0x4137ee50"/>
        <function-ref name="destination" scoped="" ref="0x4137d010"/>
        <function-ref name="setSource" scoped="" ref="0x4137d0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x4137d1d0"/>
        <function-ref name="type" scoped="" ref="0x4137d2b0"/>
        <function-ref name="setType" scoped="" ref="0x4137d390"/>
        <function-ref name="isForMe" scoped="" ref="0x4137d470"/>
        <function-ref name="setGroup" scoped="" ref="0x4137d550"/>
        <function-ref name="localGroup" scoped="" ref="0x4137d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cfe348" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cfe348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cfe520"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cfe600"/>
        <function-ref name="getPayload" scoped="" ref="0x40cfe6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cfe7c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cfe8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cfe030" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cfe030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cfe208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40cfe9e0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cfe9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cfebb8"/>
        <function-ref name="source" scoped="" ref="0x40cfec98"/>
        <function-ref name="address" scoped="" ref="0x40cfed78"/>
        <function-ref name="destination" scoped="" ref="0x40cfee58"/>
        <function-ref name="setSource" scoped="" ref="0x40cfc010"/>
        <function-ref name="setDestination" scoped="" ref="0x40cfc0f0"/>
        <function-ref name="type" scoped="" ref="0x40cfc1d0"/>
        <function-ref name="setType" scoped="" ref="0x40cfc2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40cfc390"/>
        <function-ref name="setGroup" scoped="" ref="0x40cfc470"/>
        <function-ref name="localGroup" scoped="" ref="0x40cfc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d28e60" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d28e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d26988"/>
        <function-ref name="fired" scoped="" ref="0x40d27c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d26348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d260f0"/>
        <function-ref name="getdt" scoped="" ref="0x40d26e38"/>
        <function-ref name="gett0" scoped="" ref="0x40d26be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d27e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d274b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d26668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d27738"/>
        <function-ref name="stop" scoped="" ref="0x40d279b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d227b0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d227b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d22988"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d22a68"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d22b48"/>
        <function-ref name="getSize" scoped="" ref="0x40d22c28"/>
        <function-ref name="readDone" scoped="" ref="0x40d22d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d22e48" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d22e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d21050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d21130"/>
        <function-ref name="request" scoped="" ref="0x40d21210"/>
        <function-ref name="granted" scoped="" ref="0x40d212f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d213d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4136e460" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4136e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4136e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d1dc80" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d1dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d1de58"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d18010"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d180f0"/>
        <function-ref name="getSize" scoped="" ref="0x40d181d0"/>
        <function-ref name="readDone" scoped="" ref="0x40d182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d18760" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d18760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d18938"/>
        <function-ref name="writeDone" scoped="" ref="0x40d18a18"/>
        <function-ref name="erase" scoped="" ref="0x40d18af8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d18bd8"/>
        <function-ref name="write" scoped="" ref="0x40d18cb8"/>
        <function-ref name="sync" scoped="" ref="0x40d18d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40d153d0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40d153d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d155a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40d17d08" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40d17d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40d17ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d13570" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d13570"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d13758"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d13838"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d13918"/>
        <function-ref name="getSize" scoped="" ref="0x40d139f8"/>
        <function-ref name="readDone" scoped="" ref="0x40d13ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d13cb0" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d13cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d13e98"/>
        <function-ref name="writeDone" scoped="" ref="0x40d41010"/>
        <function-ref name="erase" scoped="" ref="0x40d410f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d411d0"/>
        <function-ref name="write" scoped="" ref="0x40d412b0"/>
        <function-ref name="sync" scoped="" ref="0x40d41390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40d6c918" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40d6c918"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d6cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40d41568" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40d41568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40d41750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x40d41978" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x40d41978"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d41b60"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d41c40"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d41d20"/>
        <function-ref name="getSize" scoped="" ref="0x40d41e00"/>
        <function-ref name="readDone" scoped="" ref="0x40d41ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x40d6c0f8" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x40d6c0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d6c2e0"/>
        <function-ref name="writeDone" scoped="" ref="0x40d6c3c0"/>
        <function-ref name="erase" scoped="" ref="0x40d6c4a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d6c580"/>
        <function-ref name="write" scoped="" ref="0x40d6c660"/>
        <function-ref name="sync" scoped="" ref="0x40d6c740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40d6ccd8" loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40d6ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40d6cec0"/>
        <function-ref name="remap" scoped="" ref="0x40d6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d68e88" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d68e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec6070"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec6150"/>
        <function-ref name="erase" scoped="" ref="0x40ec6230"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec6310"/>
        <function-ref name="write" scoped="" ref="0x40ec63f0"/>
        <function-ref name="sync" scoped="" ref="0x40ec64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec6610" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec67e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ec68c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ec69a8"/>
        <function-ref name="getSize" scoped="" ref="0x40ec6a88"/>
        <function-ref name="readDone" scoped="" ref="0x40ec6b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x40d84620" loc="48:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40d84620"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40d605d0"/>
        <function-ref name="syncDone" scoped="" ref="0x40d848d8"/>
        <function-ref name="flushDone" scoped="" ref="0x40d849b8"/>
        <function-ref name="read" scoped="" ref="0x40d84a98"/>
        <function-ref name="writeDone" scoped="" ref="0x40d84b78"/>
        <function-ref name="copyPage" scoped="" ref="0x40d84c58"/>
        <function-ref name="erase" scoped="" ref="0x40d84d38"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d84e18"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d84ef8"/>
        <function-ref name="flush" scoped="" ref="0x40d60010"/>
        <function-ref name="syncAll" scoped="" ref="0x40d600f0"/>
        <function-ref name="flushAll" scoped="" ref="0x40d601d0"/>
        <function-ref name="write" scoped="" ref="0x40d602b0"/>
        <function-ref name="sync" scoped="" ref="0x40d60410"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d604f0"/>
        <function-ref name="readDone" scoped="" ref="0x40d847f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40d637f8" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40d637f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40d639d0"/>
        <function-ref name="writeDone" scoped="" ref="0x40d63ab0"/>
        <function-ref name="erase" scoped="" ref="0x40d63b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x40d63c70"/>
        <function-ref name="write" scoped="" ref="0x40d63d50"/>
        <function-ref name="sync" scoped="" ref="0x40d63e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40d612f8" loc="45:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40d612f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d614d0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40d615b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40d61690"/>
        <function-ref name="getSize" scoped="" ref="0x40d61770"/>
        <function-ref name="readDone" scoped="" ref="0x40d61850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x40d831c0" loc="51:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x40d831c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x40d83398"/>
        <function-ref name="flipped" scoped="" ref="0x40d83478"/>
        <function-ref name="isConfig" scoped="" ref="0x40d83558"/>
        <function-ref name="writeHook" scoped="" ref="0x40d83638"/>
        <function-ref name="remap" scoped="" ref="0x40d83718"/>
        <function-ref name="writeContinue" scoped="" ref="0x40d837f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40d60aa0" loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40d60aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40d60c78"/>
        <function-ref name="remap" scoped="" ref="0x40d60d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d5f228" loc="50:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d5f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d5f400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d5f4e0"/>
        <function-ref name="request" scoped="" ref="0x40d5f5c0"/>
        <function-ref name="granted" scoped="" ref="0x40d5f6a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d5f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40dc8680" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40dc8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40dc56b0"/>
        <function-ref name="syncDone" scoped="" ref="0x40dc8938"/>
        <function-ref name="flushDone" scoped="" ref="0x40dc8a18"/>
        <function-ref name="read" scoped="" ref="0x40dc8af8"/>
        <function-ref name="writeDone" scoped="" ref="0x40dc8bd8"/>
        <function-ref name="copyPage" scoped="" ref="0x40dc8cb8"/>
        <function-ref name="erase" scoped="" ref="0x40dc8d98"/>
        <function-ref name="eraseDone" scoped="" ref="0x40dc8e78"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40dc5010"/>
        <function-ref name="flush" scoped="" ref="0x40dc50f0"/>
        <function-ref name="syncAll" scoped="" ref="0x40dc51d0"/>
        <function-ref name="flushAll" scoped="" ref="0x40dc52b0"/>
        <function-ref name="write" scoped="" ref="0x40dc5390"/>
        <function-ref name="sync" scoped="" ref="0x40dc54f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40dc55d0"/>
        <function-ref name="readDone" scoped="" ref="0x40dc8858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40dbf250" loc="27:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dbf250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dbf428"/>
        <function-ref name="requested" scoped="" ref="0x40dbf508"/>
        <function-ref name="granted" scoped="" ref="0x40dbf5e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40dbf6c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40dbf7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40dc5b50" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40dc5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dc5d28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dc5e08"/>
        <function-ref name="request" scoped="" ref="0x40dc5ee8"/>
        <function-ref name="granted" scoped="" ref="0x40dc4010"/>
        <function-ref name="isOwner" scoped="" ref="0x40dc40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40dbf958" loc="28:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40dbf958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40dbfb30"/>
        <function-ref name="userId" scoped="" ref="0x40dbfc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x40de1c30" loc="48:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40de1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x40dbce90"/>
        <function-ref name="waitCompare" scoped="" ref="0x40de1ee8"/>
        <function-ref name="crcDone" scoped="" ref="0x40dbc010"/>
        <function-ref name="flushDone" scoped="" ref="0x40dbc0f0"/>
        <function-ref name="read" scoped="" ref="0x40dbc1d0"/>
        <function-ref name="erase" scoped="" ref="0x40dbc2b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40dbc390"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40dbc470"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40dbc550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40dbc630"/>
        <function-ref name="waitIdle" scoped="" ref="0x40dbc710"/>
        <function-ref name="flush" scoped="" ref="0x40dbc7f0"/>
        <function-ref name="write" scoped="" ref="0x40dbc8d0"/>
        <function-ref name="compareDone" scoped="" ref="0x40dbca30"/>
        <function-ref name="compare" scoped="" ref="0x40dbcb10"/>
        <function-ref name="crc" scoped="" ref="0x40dbcbf0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40dbccd0"/>
        <function-ref name="fillDone" scoped="" ref="0x40dbcdb0"/>
        <function-ref name="readDone" scoped="" ref="0x40de1e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40dc28b0" loc="45:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40dc28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40dbd870"/>
        <function-ref name="syncDone" scoped="" ref="0x40dc2b68"/>
        <function-ref name="flushDone" scoped="" ref="0x40dc2c48"/>
        <function-ref name="read" scoped="" ref="0x40dc2d28"/>
        <function-ref name="writeDone" scoped="" ref="0x40dc2e08"/>
        <function-ref name="copyPage" scoped="" ref="0x40dc2ee8"/>
        <function-ref name="erase" scoped="" ref="0x40dbd010"/>
        <function-ref name="eraseDone" scoped="" ref="0x40dbd0f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40dbd1d0"/>
        <function-ref name="flush" scoped="" ref="0x40dbd2b0"/>
        <function-ref name="syncAll" scoped="" ref="0x40dbd390"/>
        <function-ref name="flushAll" scoped="" ref="0x40dbd470"/>
        <function-ref name="write" scoped="" ref="0x40dbd550"/>
        <function-ref name="sync" scoped="" ref="0x40dbd6b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40dbd790"/>
        <function-ref name="readDone" scoped="" ref="0x40dc2a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40dbb1f8" loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40dbb1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40dbb948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x40dd5dc8" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x40dd5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dd3010"/>
        <function-ref name="runTask" scoped="" ref="0x40dd30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x40dd3e10" loc="137:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x40dd3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e04010"/>
        <function-ref name="runTask" scoped="" ref="0x40e040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dc2558" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dc2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dc2730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x40dbede8" loc="20:/opt/tinyos-2.1.1/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40dbede8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f93d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f93d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x40e260f0"/>
        <function-ref name="waitCompare" scoped="" ref="0x40e270f0"/>
        <function-ref name="crcDone" scoped="" ref="0x40e271d0"/>
        <function-ref name="flushDone" scoped="" ref="0x40e272b0"/>
        <function-ref name="read" scoped="" ref="0x40e27390"/>
        <function-ref name="erase" scoped="" ref="0x40e27470"/>
        <function-ref name="writeDone" scoped="" ref="0x40e27550"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40e27630"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40e27710"/>
        <function-ref name="eraseDone" scoped="" ref="0x40e277f0"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e278d0"/>
        <function-ref name="flush" scoped="" ref="0x40e279b0"/>
        <function-ref name="write" scoped="" ref="0x40e27a90"/>
        <function-ref name="compareDone" scoped="" ref="0x40e27bf0"/>
        <function-ref name="compare" scoped="" ref="0x40e27cd0"/>
        <function-ref name="crc" scoped="" ref="0x40e27db0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40e27e90"/>
        <function-ref name="fillDone" scoped="" ref="0x40e26010"/>
        <function-ref name="readDone" scoped="" ref="0x40e27010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x40e25ca0" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40e25ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x40e5f010"/>
        <function-ref name="waitCompare" scoped="" ref="0x40e24010"/>
        <function-ref name="crcDone" scoped="" ref="0x40e240f0"/>
        <function-ref name="flushDone" scoped="" ref="0x40e241d0"/>
        <function-ref name="read" scoped="" ref="0x40e242b0"/>
        <function-ref name="erase" scoped="" ref="0x40e24390"/>
        <function-ref name="writeDone" scoped="" ref="0x40e24470"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40e24550"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40e24630"/>
        <function-ref name="eraseDone" scoped="" ref="0x40e24710"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e247f0"/>
        <function-ref name="flush" scoped="" ref="0x40e248d0"/>
        <function-ref name="write" scoped="" ref="0x40e249b0"/>
        <function-ref name="compareDone" scoped="" ref="0x40e24b10"/>
        <function-ref name="compare" scoped="" ref="0x40e24bf0"/>
        <function-ref name="crc" scoped="" ref="0x40e24cd0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40e24db0"/>
        <function-ref name="fillDone" scoped="" ref="0x40e24e90"/>
        <function-ref name="fill" scoped="" ref="0x40e25e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x40e5fb50" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x40e5fd28"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e5fe08"/>
        <function-ref name="idle" scoped="" ref="0x40e5fee8"/>
        <function-ref name="select" scoped="" ref="0x40e5e010"/>
        <function-ref name="deselect" scoped="" ref="0x40e5e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40e5f180" loc="28:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e5f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e5f358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e5f438"/>
        <function-ref name="request" scoped="" ref="0x40e5f518"/>
        <function-ref name="granted" scoped="" ref="0x40e5f5f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e5f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x40e5f838" loc="29:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x40e5f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40e5fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x40e5bc68" loc="45:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e5bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x40e5be40"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e5bf20"/>
        <function-ref name="idle" scoped="" ref="0x40e5a018"/>
        <function-ref name="select" scoped="" ref="0x40e5a0f8"/>
        <function-ref name="deselect" scoped="" ref="0x40e5a1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e5b170" loc="43:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e5b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e5b348"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e5b428"/>
        <function-ref name="request" scoped="" ref="0x40e5b508"/>
        <function-ref name="granted" scoped="" ref="0x40e5b5e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e5b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x40e5b8c8" loc="44:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x40e5b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40e5baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x40e55808" loc="78:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x40e55808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e559e0"/>
        <function-ref name="isInput" scoped="" ref="0x40e55ac0"/>
        <function-ref name="toggle" scoped="" ref="0x40e55ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e55c80"/>
        <function-ref name="get" scoped="" ref="0x40e55d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e55e40"/>
        <function-ref name="set" scoped="" ref="0x40e55f20"/>
        <function-ref name="clr" scoped="" ref="0x40e54018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40e54368" loc="79:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40e54368"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356e10"/>
            <typename><typedef-ref name="TMicro" ref="0x40354338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40e54ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x40e56d88" loc="77:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x40e56d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e55010"/>
        <function-ref name="isInput" scoped="" ref="0x40e550f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e551d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e552b0"/>
        <function-ref name="get" scoped="" ref="0x40e55390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e55470"/>
        <function-ref name="set" scoped="" ref="0x40e55550"/>
        <function-ref name="clr" scoped="" ref="0x40e55630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x40e57970" loc="75:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x40e57970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e57b48"/>
        <function-ref name="isInput" scoped="" ref="0x40e57c28"/>
        <function-ref name="toggle" scoped="" ref="0x40e57d08"/>
        <function-ref name="isOutput" scoped="" ref="0x40e57de8"/>
        <function-ref name="get" scoped="" ref="0x40e57ec8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e56010"/>
        <function-ref name="set" scoped="" ref="0x40e560f0"/>
        <function-ref name="clr" scoped="" ref="0x40e561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x40e571d8" loc="72:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x40e571d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x40e573b0"/>
        <function-ref name="waitIdle" scoped="" ref="0x40e57490"/>
        <function-ref name="idle" scoped="" ref="0x40e57570"/>
        <function-ref name="select" scoped="" ref="0x40e57650"/>
        <function-ref name="deselect" scoped="" ref="0x40e57730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x40e563b0" loc="76:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x40e563b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e56588"/>
        <function-ref name="isInput" scoped="" ref="0x40e56668"/>
        <function-ref name="toggle" scoped="" ref="0x40e56748"/>
        <function-ref name="isOutput" scoped="" ref="0x40e56828"/>
        <function-ref name="get" scoped="" ref="0x40e56908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e569e8"/>
        <function-ref name="set" scoped="" ref="0x40e56ac8"/>
        <function-ref name="clr" scoped="" ref="0x40e56ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x40e77d78" loc="141:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x40e77d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e76010"/>
        <function-ref name="runTask" scoped="" ref="0x40e760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e5aa38" loc="70:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e5aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x40e5ae10" loc="71:/opt/tinyos-2.1.1/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x40e5ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40e57010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e9c410" loc="22:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e9c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e9c5e8"/>
        <function-ref name="configure" scoped="" ref="0x40e9c6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e71cc0" loc="21:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e71cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e71e98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e9c010"/>
        <function-ref name="request" scoped="" ref="0x40e9c0f0"/>
        <function-ref name="granted" scoped="" ref="0x40e9c1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e9c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x40e9c848" loc="25:/opt/tinyos-2.1.1/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x40e9c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e9ca20"/>
        <function-ref name="runTask" scoped="" ref="0x40e9cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ed07e8" loc="82:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ed07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ed09d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ed0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ecf7c0" loc="86:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ecf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ecf9a8"/>
        <function-ref name="configure" scoped="" ref="0x40ecfa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ed0bf0" loc="83:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ed0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ed0dc8"/>
        <function-ref name="requested" scoped="" ref="0x40ed0ea8"/>
        <function-ref name="granted" scoped="" ref="0x40ecf010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ecf0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ecf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ed00a8" loc="81:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ed00a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ed0290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ed0370"/>
        <function-ref name="request" scoped="" ref="0x40ed0450"/>
        <function-ref name="granted" scoped="" ref="0x40ed0530"/>
        <function-ref name="isOwner" scoped="" ref="0x40ed0610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ecf310" loc="84:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ecf310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ecf4e8"/>
        <function-ref name="userId" scoped="" ref="0x40ecf5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413c1430" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413c1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413c1608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x413c1768" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x413c1768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413c1940"/>
        <function-ref name="isEmpty" scoped="" ref="0x413c1a20"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413c1b00"/>
        <function-ref name="dequeue" scoped="" ref="0x413c1be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x413be030" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x413be030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x413be218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413be2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413bd010" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413bd1f8"/>
        <function-ref name="configure" scoped="" ref="0x413bd2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x413bd438" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x413bd438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413bd610"/>
        <function-ref name="isEmpty" scoped="" ref="0x413bd6f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413bd7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x413bd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x413be438" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413be438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413be610"/>
        <function-ref name="requested" scoped="" ref="0x413be6f0"/>
        <function-ref name="granted" scoped="" ref="0x413be7d0"/>
        <function-ref name="isOwner" scoped="" ref="0x413be8b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413be990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413bd9f0" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413bd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413bdbc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413bdca8"/>
        <function-ref name="led1On" scoped="" ref="0x413bdd88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413bde68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413bc010"/>
        <function-ref name="get" scoped="" ref="0x413bc0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x413bc1d0"/>
        <function-ref name="led0On" scoped="" ref="0x413bc550"/>
        <function-ref name="set" scoped="" ref="0x413bc390"/>
        <function-ref name="led2On" scoped="" ref="0x413bc2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x413bc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413bf8d0" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413bf8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413bfab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413bfb98"/>
        <function-ref name="request" scoped="" ref="0x413bfc78"/>
        <function-ref name="granted" scoped="" ref="0x413bfd58"/>
        <function-ref name="isOwner" scoped="" ref="0x413bfe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413bead0" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413beca8"/>
        <function-ref name="userId" scoped="" ref="0x413bed88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413bc6d0" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413bc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413bc8a8"/>
        <function-ref name="runTask" scoped="" ref="0x413bc988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x40ecb240" loc="18:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40ecb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40ecb418"/>
        <function-ref name="remap" scoped="" ref="0x40ecb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ec5af8" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ec5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec5cd0"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec5db0"/>
        <function-ref name="erase" scoped="" ref="0x40ec5e90"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec4010"/>
        <function-ref name="write" scoped="" ref="0x40ec40f0"/>
        <function-ref name="sync" scoped="" ref="0x40ec41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec4310" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec44e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ec45c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ec46a8"/>
        <function-ref name="getSize" scoped="" ref="0x40ec4788"/>
        <function-ref name="readDone" scoped="" ref="0x40ec4868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ec3870" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ec3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec3a48"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec3b28"/>
        <function-ref name="erase" scoped="" ref="0x40ec3c08"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec3ce8"/>
        <function-ref name="write" scoped="" ref="0x40ec3dc8"/>
        <function-ref name="sync" scoped="" ref="0x40ec3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec2010" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec21e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ec22c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ec23a8"/>
        <function-ref name="getSize" scoped="" ref="0x40ec2488"/>
        <function-ref name="readDone" scoped="" ref="0x40ec2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ec1528" loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ec1528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40ec1700"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec17e0"/>
        <function-ref name="erase" scoped="" ref="0x40ec18c0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ec19a0"/>
        <function-ref name="write" scoped="" ref="0x40ec1a80"/>
        <function-ref name="sync" scoped="" ref="0x40ec1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ec1ca0" loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ec1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ec1e78"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ec0010"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ec00f0"/>
        <function-ref name="getSize" scoped="" ref="0x40ec01d0"/>
        <function-ref name="readDone" scoped="" ref="0x40ec02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4136d010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4136d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4136d1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4136d2c8"/>
        <function-ref name="request" scoped="" ref="0x4136d3a8"/>
        <function-ref name="granted" scoped="" ref="0x4136d488"/>
        <function-ref name="isOwner" scoped="" ref="0x4136d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40eeb348" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40eeb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eeb520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40eeb600"/>
        <function-ref name="request" scoped="" ref="0x40eeb6e0"/>
        <function-ref name="granted" scoped="" ref="0x40eeb7c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40eeb8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40eeba50" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40eeba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40eebc28"/>
        <function-ref name="userId" scoped="" ref="0x40eebd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ee92c8" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ee92c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ee94b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ee9590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ee9b80" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ee9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ee9d68"/>
        <function-ref name="configure" scoped="" ref="0x40ee9e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40eeab38" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40eeab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eead20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40eeae00"/>
        <function-ref name="request" scoped="" ref="0x40eeaee0"/>
        <function-ref name="granted" scoped="" ref="0x40ee9010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ee96d0" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ee96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ee98a8"/>
        <function-ref name="userId" scoped="" ref="0x40ee9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413dd238" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413dd238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413dd410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x413dd570" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x413dd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413dd748"/>
        <function-ref name="isEmpty" scoped="" ref="0x413dd828"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413dd908"/>
        <function-ref name="dequeue" scoped="" ref="0x413dd9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x413dccb8" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x413dccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x413dcea0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x413db010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x413db610" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x413db610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x413db7f8"/>
        <function-ref name="configure" scoped="" ref="0x413db8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x413dba38" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x413dba38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413dbc10"/>
        <function-ref name="isEmpty" scoped="" ref="0x413dbcf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413dbdd0"/>
        <function-ref name="dequeue" scoped="" ref="0x413dbeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413dc578" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413dc578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413dc760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413dc840"/>
        <function-ref name="request" scoped="" ref="0x413dc920"/>
        <function-ref name="granted" scoped="" ref="0x413dca00"/>
        <function-ref name="isOwner" scoped="" ref="0x413dcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x413db150" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x413db150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x413db328"/>
        <function-ref name="userId" scoped="" ref="0x413db408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413da050" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413da050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413da228"/>
        <function-ref name="runTask" scoped="" ref="0x413da308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ee7330" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ee7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ee7508"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ee75e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ee76c8"/>
        <function-ref name="getSize" scoped="" ref="0x40ee77a8"/>
        <function-ref name="readDone" scoped="" ref="0x40ee7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ee79c8" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee7ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee7c80"/>
        <function-ref name="request" scoped="" ref="0x40ee7d60"/>
        <function-ref name="granted" scoped="" ref="0x40ee7e40"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee7f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4140f5f0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4140f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4140f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4140e148" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4140e148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4140e320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4140e400"/>
        <function-ref name="request" scoped="" ref="0x4140e4e0"/>
        <function-ref name="granted" scoped="" ref="0x4140e5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x4140e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40ee6e80" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40ee6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ee5070"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40ee5150"/>
        <function-ref name="computeCrc" scoped="" ref="0x40ee5230"/>
        <function-ref name="getSize" scoped="" ref="0x40ee5310"/>
        <function-ref name="readDone" scoped="" ref="0x40ee53f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ee5530" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ee5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee5708"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee57e8"/>
        <function-ref name="request" scoped="" ref="0x40ee58c8"/>
        <function-ref name="granted" scoped="" ref="0x40ee59a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4140aa48" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4140aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4140ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41409568" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41409568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41409740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41409820"/>
        <function-ref name="request" scoped="" ref="0x41409900"/>
        <function-ref name="granted" scoped="" ref="0x414099e0"/>
        <function-ref name="isOwner" scoped="" ref="0x41409ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40ee3e28" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40ee3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40edd050"/>
        <function-ref name="writeDone" scoped="" ref="0x40edd130"/>
        <function-ref name="erase" scoped="" ref="0x40edd210"/>
        <function-ref name="eraseDone" scoped="" ref="0x40edd2f0"/>
        <function-ref name="write" scoped="" ref="0x40edd3d0"/>
        <function-ref name="sync" scoped="" ref="0x40edd4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40edd5f0" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40edd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40edd7c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40edd8a8"/>
        <function-ref name="request" scoped="" ref="0x40edd988"/>
        <function-ref name="granted" scoped="" ref="0x40edda68"/>
        <function-ref name="isOwner" scoped="" ref="0x40eddb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41405e18" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41405e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41404010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41404948" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41404948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41404b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41404c00"/>
        <function-ref name="request" scoped="" ref="0x41404ce0"/>
        <function-ref name="granted" scoped="" ref="0x41404dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41404ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40edcaf0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40edcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40edccc8"/>
        <function-ref name="writeDone" scoped="" ref="0x40edcda8"/>
        <function-ref name="erase" scoped="" ref="0x40edce88"/>
        <function-ref name="eraseDone" scoped="" ref="0x40edb010"/>
        <function-ref name="write" scoped="" ref="0x40edb0f0"/>
        <function-ref name="sync" scoped="" ref="0x40edb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40edb310" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40edb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40edb4e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40edb5c8"/>
        <function-ref name="request" scoped="" ref="0x40edb6a8"/>
        <function-ref name="granted" scoped="" ref="0x40edb788"/>
        <function-ref name="isOwner" scoped="" ref="0x40edb868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x413fe350" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x413fe350"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413fe528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x413fee60" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x413fee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413fd050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x413fd130"/>
        <function-ref name="request" scoped="" ref="0x413fd210"/>
        <function-ref name="granted" scoped="" ref="0x413fd2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x413fd3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40eda7f8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40eda7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40eda9d0"/>
        <function-ref name="writeDone" scoped="" ref="0x40edaab0"/>
        <function-ref name="erase" scoped="" ref="0x40edab90"/>
        <function-ref name="eraseDone" scoped="" ref="0x40edac70"/>
        <function-ref name="write" scoped="" ref="0x40edad50"/>
        <function-ref name="sync" scoped="" ref="0x40edae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ed9010" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ed9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ed91e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ed92c8"/>
        <function-ref name="request" scoped="" ref="0x40ed93a8"/>
        <function-ref name="granted" scoped="" ref="0x40ed9488"/>
        <function-ref name="isOwner" scoped="" ref="0x40ed9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x413f9860" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x413f9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413f9a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414423a8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414423a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41442580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41442660"/>
        <function-ref name="request" scoped="" ref="0x41442740"/>
        <function-ref name="granted" scoped="" ref="0x41442820"/>
        <function-ref name="isOwner" scoped="" ref="0x41442900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40fbc2d0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40fbc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf5ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf4748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40fbc8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40f6b3d8" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40f6b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf5ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf4748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40fbc010"/>
        <function-ref name="get" scoped="" ref="0x40f6ba20"/>
        <function-ref name="set" scoped="" ref="0x40f6bc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x4143ad88" loc="62:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x4143ad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41439010"/>
        <function-ref name="runTask" scoped="" ref="0x414390f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x4143b9b0" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4143b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x4143bc68"/>
        <function-ref name="storeData" scoped="" ref="0x4143a010"/>
        <function-ref name="newData" scoped="" ref="0x4143bd48"/>
        <function-ref name="start" scoped="" ref="0x4143be28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4143bf08"/>
        <function-ref name="stop" scoped="" ref="0x4143bb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x4143b030" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x4143b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf5ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf4748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4143b658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4143a170" loc="52:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4143a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4143a348"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4143a428"/>
        <function-ref name="led1On" scoped="" ref="0x4143a508"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4143a5e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4143a6c8"/>
        <function-ref name="get" scoped="" ref="0x4143a7a8"/>
        <function-ref name="led1Off" scoped="" ref="0x4143a888"/>
        <function-ref name="led0On" scoped="" ref="0x4143ac08"/>
        <function-ref name="set" scoped="" ref="0x4143aa48"/>
        <function-ref name="led2On" scoped="" ref="0x4143a968"/>
        <function-ref name="led2Off" scoped="" ref="0x4143ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4143c200" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4143c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf5ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf4748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x4143cd60"/>
        <function-ref name="get" scoped="" ref="0x4143c848"/>
        <function-ref name="set" scoped="" ref="0x4143cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4143ecb0" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4143ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4143ee88"/>
        <function-ref name="stop" scoped="" ref="0x4143c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40f125c0" loc="52:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f125c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f12798"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f12878"/>
        <function-ref name="reset" scoped="" ref="0x40f12958"/>
        <function-ref name="start" scoped="" ref="0x40f12a38"/>
        <function-ref name="stop" scoped="" ref="0x40f12b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40f17210" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40f17210"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40f174c8"/>
        <function-ref name="stop" scoped="" ref="0x40f17848"/>
        <function-ref name="newData" scoped="" ref="0x40f175a8"/>
        <function-ref name="start" scoped="" ref="0x40f17688"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40f17768"/>
        <function-ref name="requestData" scoped="" ref="0x40f173e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f1a9d8" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f1a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f1abb0"/>
        <function-ref name="stop" scoped="" ref="0x40f1ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40f15100" loc="53:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40f15100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f152d8"/>
        <function-ref name="stop" scoped="" ref="0x40f153b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x40f0c238" loc="57:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x40f0c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f0c410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x40f0d9f8" loc="56:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x40f0d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0dbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0dcb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0dd90"/>
        <function-ref name="cancel" scoped="" ref="0x40f0de70"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f0ff18" loc="53:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f0ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0d108"/>
        <function-ref name="getPayload" scoped="" ref="0x40f0d1e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f0d2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40f0d3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0d488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40f0f010" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f0f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f0f1e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f0f2c8"/>
        <function-ref name="reset" scoped="" ref="0x40f0f3a8"/>
        <function-ref name="start" scoped="" ref="0x40f0f488"/>
        <function-ref name="stop" scoped="" ref="0x40f0f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40f10450" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40f10450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40f10708"/>
        <function-ref name="stop" scoped="" ref="0x40f10a88"/>
        <function-ref name="newData" scoped="" ref="0x40f107e8"/>
        <function-ref name="start" scoped="" ref="0x40f108c8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40f109a8"/>
        <function-ref name="requestData" scoped="" ref="0x40f10628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40f0d610" loc="54:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f0d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f0d7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f0c580" loc="59:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f0c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f0c758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f0c838"/>
        <function-ref name="led1On" scoped="" ref="0x40f0c918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f0c9f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f0cad8"/>
        <function-ref name="get" scoped="" ref="0x40f0cbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f0cc98"/>
        <function-ref name="led2Off" scoped="" ref="0x40f0b0f0"/>
        <function-ref name="set" scoped="" ref="0x40f0cd78"/>
        <function-ref name="led0On" scoped="" ref="0x40f0ce58"/>
        <function-ref name="led2On" scoped="" ref="0x40f0b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f15c48" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f15c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f15e20"/>
        <function-ref name="stop" scoped="" ref="0x40f15f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40f0fae0" loc="51:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40f0fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f0fcb8"/>
        <function-ref name="stop" scoped="" ref="0x40f0fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f11af8" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f11af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f11cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f11db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f11e90"/>
        <function-ref name="cancel" scoped="" ref="0x40f4d010"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f4d230" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f4d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4d408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4d4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4d5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4d6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f4d8c8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f4d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4daa0"/>
        <function-ref name="source" scoped="" ref="0x40f4db80"/>
        <function-ref name="address" scoped="" ref="0x40f4dc60"/>
        <function-ref name="destination" scoped="" ref="0x40f4dd40"/>
        <function-ref name="setSource" scoped="" ref="0x40f4de20"/>
        <function-ref name="setDestination" scoped="" ref="0x40f4df00"/>
        <function-ref name="type" scoped="" ref="0x40f4c010"/>
        <function-ref name="setType" scoped="" ref="0x40f4c0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f4c1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f4c2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f4c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f4c4f0" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f4c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f4c6c8"/>
        <function-ref name="noAck" scoped="" ref="0x40f4c7a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f4c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41427010" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41427010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414271e8"/>
        <function-ref name="getPayload" scoped="" ref="0x414272c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414273a8"/>
        <function-ref name="cancel" scoped="" ref="0x41427488"/>
        <function-ref name="sendDone" scoped="" ref="0x41427568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x414276a8" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x414276a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41427880"/>
        <function-ref name="payloadLength" scoped="" ref="0x41427960"/>
        <function-ref name="getPayload" scoped="" ref="0x41427a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41427b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41427c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41427d40" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41427d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41427f18"/>
        <function-ref name="source" scoped="" ref="0x41426010"/>
        <function-ref name="address" scoped="" ref="0x414260f0"/>
        <function-ref name="destination" scoped="" ref="0x414261d0"/>
        <function-ref name="setSource" scoped="" ref="0x414262b0"/>
        <function-ref name="setDestination" scoped="" ref="0x41426390"/>
        <function-ref name="type" scoped="" ref="0x41426470"/>
        <function-ref name="setType" scoped="" ref="0x41426550"/>
        <function-ref name="isForMe" scoped="" ref="0x41426630"/>
        <function-ref name="setGroup" scoped="" ref="0x41426710"/>
        <function-ref name="localGroup" scoped="" ref="0x414267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41426950" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41426950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41426b28"/>
        <function-ref name="noAck" scoped="" ref="0x41426c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x41426ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41423b28" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41423b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41423d00"/>
        <function-ref name="getPayload" scoped="" ref="0x41423de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41423ec0"/>
        <function-ref name="cancel" scoped="" ref="0x41420010"/>
        <function-ref name="sendDone" scoped="" ref="0x414200f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41420260" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41420260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41420438"/>
        <function-ref name="getPayload" scoped="" ref="0x41420518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414205f8"/>
        <function-ref name="cancel" scoped="" ref="0x414206d8"/>
        <function-ref name="sendDone" scoped="" ref="0x414207b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x414208f8" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x414208f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41420ad0"/>
        <function-ref name="source" scoped="" ref="0x41420bb0"/>
        <function-ref name="address" scoped="" ref="0x41420c90"/>
        <function-ref name="destination" scoped="" ref="0x41420d70"/>
        <function-ref name="setSource" scoped="" ref="0x41420e50"/>
        <function-ref name="setDestination" scoped="" ref="0x4141e010"/>
        <function-ref name="type" scoped="" ref="0x4141e0f0"/>
        <function-ref name="setType" scoped="" ref="0x4141e1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4141e2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4141e390"/>
        <function-ref name="localGroup" scoped="" ref="0x4141e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f4a328" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f4a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4a500"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4a5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4a7a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f4a010" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f4a9c0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f4a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f4ab98"/>
        <function-ref name="source" scoped="" ref="0x40f4ac78"/>
        <function-ref name="address" scoped="" ref="0x40f4ad58"/>
        <function-ref name="destination" scoped="" ref="0x40f4ae38"/>
        <function-ref name="setSource" scoped="" ref="0x40f4af18"/>
        <function-ref name="setDestination" scoped="" ref="0x40f49010"/>
        <function-ref name="type" scoped="" ref="0x40f490f0"/>
        <function-ref name="setType" scoped="" ref="0x40f491d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f492b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f49390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f49470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f48a28" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f48a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f48c00"/>
        <function-ref name="getPayload" scoped="" ref="0x40f48ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f48dc0"/>
        <function-ref name="cancel" scoped="" ref="0x40f48ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f47010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f47150" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f47150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f47328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f47408"/>
        <function-ref name="getPayload" scoped="" ref="0x40f474e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f475c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f476a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f477e8" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f477e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f479c0"/>
        <function-ref name="source" scoped="" ref="0x40f47aa0"/>
        <function-ref name="address" scoped="" ref="0x40f47b80"/>
        <function-ref name="destination" scoped="" ref="0x40f47c60"/>
        <function-ref name="setSource" scoped="" ref="0x40f47d40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f47e20"/>
        <function-ref name="type" scoped="" ref="0x40f47f00"/>
        <function-ref name="setType" scoped="" ref="0x40f45010"/>
        <function-ref name="isForMe" scoped="" ref="0x40f450f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f451d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f45410" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f45410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f455e8"/>
        <function-ref name="noAck" scoped="" ref="0x40f456c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f457a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4145eed0" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4145eed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4145b0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4145b1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4145b280"/>
        <function-ref name="cancel" scoped="" ref="0x4145b360"/>
        <function-ref name="sendDone" scoped="" ref="0x4145b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4145b580" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4145b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4145b758"/>
        <function-ref name="payloadLength" scoped="" ref="0x4145b838"/>
        <function-ref name="getPayload" scoped="" ref="0x4145b918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4145b9f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4145bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4145bc18" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4145bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4145bdf0"/>
        <function-ref name="source" scoped="" ref="0x4145bed0"/>
        <function-ref name="address" scoped="" ref="0x4145a010"/>
        <function-ref name="destination" scoped="" ref="0x4145a0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4145a1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4145a2b0"/>
        <function-ref name="type" scoped="" ref="0x4145a390"/>
        <function-ref name="setType" scoped="" ref="0x4145a470"/>
        <function-ref name="isForMe" scoped="" ref="0x4145a550"/>
        <function-ref name="setGroup" scoped="" ref="0x4145a630"/>
        <function-ref name="localGroup" scoped="" ref="0x4145a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4145a870" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4145a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4145aa48"/>
        <function-ref name="noAck" scoped="" ref="0x4145ab28"/>
        <function-ref name="wasAcked" scoped="" ref="0x4145ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41457998" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41457998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41457b70"/>
        <function-ref name="getPayload" scoped="" ref="0x41457c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41457d30"/>
        <function-ref name="cancel" scoped="" ref="0x41457e10"/>
        <function-ref name="sendDone" scoped="" ref="0x41457ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41453080" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41453080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41453258"/>
        <function-ref name="getPayload" scoped="" ref="0x41453338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41453418"/>
        <function-ref name="cancel" scoped="" ref="0x414534f8"/>
        <function-ref name="sendDone" scoped="" ref="0x414535d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41453718" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41453718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x414538f0"/>
        <function-ref name="source" scoped="" ref="0x414539d0"/>
        <function-ref name="address" scoped="" ref="0x41453ab0"/>
        <function-ref name="destination" scoped="" ref="0x41453b90"/>
        <function-ref name="setSource" scoped="" ref="0x41453c70"/>
        <function-ref name="setDestination" scoped="" ref="0x41453d50"/>
        <function-ref name="type" scoped="" ref="0x41453e30"/>
        <function-ref name="setType" scoped="" ref="0x41453f10"/>
        <function-ref name="isForMe" scoped="" ref="0x41452010"/>
        <function-ref name="setGroup" scoped="" ref="0x414520f0"/>
        <function-ref name="localGroup" scoped="" ref="0x414521d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f43328" loc="38:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f43328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f43500"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f435e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f436c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f437a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f43880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f43010" loc="37:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f431e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f439c0" loc="39:/opt/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f439c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f43b98"/>
        <function-ref name="source" scoped="" ref="0x40f43c78"/>
        <function-ref name="address" scoped="" ref="0x40f43d58"/>
        <function-ref name="destination" scoped="" ref="0x40f43e38"/>
        <function-ref name="setSource" scoped="" ref="0x40f43f18"/>
        <function-ref name="setDestination" scoped="" ref="0x40f42010"/>
        <function-ref name="type" scoped="" ref="0x40f420f0"/>
        <function-ref name="setType" scoped="" ref="0x40f421d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f422b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f42390"/>
        <function-ref name="localGroup" scoped="" ref="0x40f42470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f41560" loc="35:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f41560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f41738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40f418c8" loc="36:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f418c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f41aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f41b80"/>
        <function-ref name="led1On" scoped="" ref="0x40f41c60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f41d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f41e20"/>
        <function-ref name="get" scoped="" ref="0x40f41f00"/>
        <function-ref name="led1Off" scoped="" ref="0x40f76010"/>
        <function-ref name="led2Off" scoped="" ref="0x40f76390"/>
        <function-ref name="set" scoped="" ref="0x40f760f0"/>
        <function-ref name="led0On" scoped="" ref="0x40f761d0"/>
        <function-ref name="led2On" scoped="" ref="0x40f762b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40f6a100" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40f6a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f6a2d8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40f6a3b8"/>
        <function-ref name="reset" scoped="" ref="0x40f6a498"/>
        <function-ref name="start" scoped="" ref="0x40f6a578"/>
        <function-ref name="stop" scoped="" ref="0x40f6a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40fbd118" loc="47:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40fbd118"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40fbd300"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40fbd3e0"/>
        <function-ref name="reset" scoped="" ref="0x40fbd4c0"/>
        <function-ref name="start" scoped="" ref="0x40fbd5a0"/>
        <function-ref name="stop" scoped="" ref="0x40fbd680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x4148d128" loc="54:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x4148d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4148d300"/>
        <function-ref name="clear" scoped="" ref="0x4148d3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4148d4c0"/>
        <function-ref name="get" scoped="" ref="0x4148d5a0"/>
        <function-ref name="assign" scoped="" ref="0x4148d680"/>
        <function-ref name="setAll" scoped="" ref="0x4148d760"/>
        <function-ref name="set" scoped="" ref="0x4148d840"/>
        <function-ref name="size" scoped="" ref="0x4148d920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x4148da80" loc="55:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x4148da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4148dc58"/>
        <function-ref name="clear" scoped="" ref="0x4148dd38"/>
        <function-ref name="toggle" scoped="" ref="0x4148de18"/>
        <function-ref name="get" scoped="" ref="0x4148def8"/>
        <function-ref name="assign" scoped="" ref="0x4148c010"/>
        <function-ref name="setAll" scoped="" ref="0x4148c0f0"/>
        <function-ref name="set" scoped="" ref="0x4148c1d0"/>
        <function-ref name="size" scoped="" ref="0x4148c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4148c3f0" loc="56:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4148c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4148c5c8"/>
        <function-ref name="rand32" scoped="" ref="0x4148c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41445780" loc="50:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41445780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41445968"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41445a48"/>
        <function-ref name="reset" scoped="" ref="0x41445b28"/>
        <function-ref name="start" scoped="" ref="0x41445c08"/>
        <function-ref name="stop" scoped="" ref="0x41445ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414453d0" loc="49:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414453d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414455a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x4148b430" loc="146:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x4148b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4148b608"/>
        <function-ref name="runTask" scoped="" ref="0x4148b6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4148c7e8" loc="57:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4148c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4148c9c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4148caa0"/>
        <function-ref name="led1On" scoped="" ref="0x4148cb80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4148cc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4148cd40"/>
        <function-ref name="get" scoped="" ref="0x4148ce20"/>
        <function-ref name="led1Off" scoped="" ref="0x4148cf00"/>
        <function-ref name="led0On" scoped="" ref="0x4148b2b0"/>
        <function-ref name="set" scoped="" ref="0x4148b0f0"/>
        <function-ref name="led2On" scoped="" ref="0x4148b010"/>
        <function-ref name="led2Off" scoped="" ref="0x4148b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41445ee8" loc="53:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41445ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41443a18"/>
        <function-ref name="fired" scoped="" ref="0x41444cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414433d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x41443180"/>
        <function-ref name="getdt" scoped="" ref="0x41443ec8"/>
        <function-ref name="gett0" scoped="" ref="0x41443c70"/>
        <function-ref name="isRunning" scoped="" ref="0x41444f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41444558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414436f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x414447d8"/>
        <function-ref name="stop" scoped="" ref="0x41444a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4148ae18" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4148ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41488920"/>
        <function-ref name="fired" scoped="" ref="0x41489bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414882e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41488088"/>
        <function-ref name="getdt" scoped="" ref="0x41488dd0"/>
        <function-ref name="gett0" scoped="" ref="0x41488b78"/>
        <function-ref name="isRunning" scoped="" ref="0x41489e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41489468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41488600"/>
        <function-ref name="startOneShot" scoped="" ref="0x414896e8"/>
        <function-ref name="stop" scoped="" ref="0x41489968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41486b08" loc="35:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41486b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41486ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41486e40" loc="36:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41486e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41485050"/>
        <function-ref name="clear" scoped="" ref="0x41485130"/>
        <function-ref name="toggle" scoped="" ref="0x41485210"/>
        <function-ref name="get" scoped="" ref="0x414852f0"/>
        <function-ref name="assign" scoped="" ref="0x414853d0"/>
        <function-ref name="setAll" scoped="" ref="0x414854b0"/>
        <function-ref name="set" scoped="" ref="0x41485590"/>
        <function-ref name="size" scoped="" ref="0x41485670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414842e0" loc="35:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414842e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41484618" loc="36:/opt/tinyos-2.1.1/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41484618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x414847f0"/>
        <function-ref name="clear" scoped="" ref="0x414848d0"/>
        <function-ref name="toggle" scoped="" ref="0x414849b0"/>
        <function-ref name="get" scoped="" ref="0x41484a90"/>
        <function-ref name="assign" scoped="" ref="0x41484b70"/>
        <function-ref name="setAll" scoped="" ref="0x41484c50"/>
        <function-ref name="set" scoped="" ref="0x41484d30"/>
        <function-ref name="size" scoped="" ref="0x41484e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fba5a0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fba5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fba778"/>
        <function-ref name="stop" scoped="" ref="0x40fba858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x40fe9228" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x40fe9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x40fe9400"/>
        <function-ref name="reboot" scoped="" ref="0x40fe94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x40fdae78" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x40fdae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fdd070"/>
        <function-ref name="write" scoped="" ref="0x40fdd150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x40fd5ed0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x40fd5ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x40fd30c0"/>
        <function-ref name="reboot" scoped="" ref="0x40fd31a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x40fd3750" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x40fd3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd3928"/>
        <function-ref name="write" scoped="" ref="0x40fd3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fd3310" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fd3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fd34e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fd2010" loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fd2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fd21e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fd22c8"/>
        <function-ref name="led1On" scoped="" ref="0x40fd23a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fd2488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fd2568"/>
        <function-ref name="get" scoped="" ref="0x40fd2648"/>
        <function-ref name="led1Off" scoped="" ref="0x40fd2728"/>
        <function-ref name="led2Off" scoped="" ref="0x40fd2aa8"/>
        <function-ref name="set" scoped="" ref="0x40fd2808"/>
        <function-ref name="led0On" scoped="" ref="0x40fd28e8"/>
        <function-ref name="led2On" scoped="" ref="0x40fd29c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x40fd3b68" loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x40fd3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x40fd3d40"/>
        <function-ref name="crc16" scoped="" ref="0x40fd3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x40ff44e8" loc="87:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x40ff44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff46c0"/>
        <function-ref name="runTask" scoped="" ref="0x40ff47a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x40fff610" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x40fff610"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x40fff7e8"/>
        <function-ref name="reboot" scoped="" ref="0x40fff8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x40fff010" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x40fff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fff1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40fff2c8"/>
        <function-ref name="start" scoped="" ref="0x40fff3a8"/>
        <function-ref name="stop" scoped="" ref="0x40fff488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40fb7350" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40fb7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40fb7528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x410003c8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x410003c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410005a0"/>
        <function-ref name="stop" scoped="" ref="0x41000680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x40fffd90" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40fffd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40ffe010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x40ffa4d8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x40ffa4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ffa6b0"/>
        <function-ref name="readDone" scoped="" ref="0x40ffa790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fb7698" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fb7698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fb7870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fb7950"/>
        <function-ref name="led1On" scoped="" ref="0x40fb7a30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fb7b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fb7bf0"/>
        <function-ref name="get" scoped="" ref="0x40fb7cd0"/>
        <function-ref name="led1Off" scoped="" ref="0x40fb7db0"/>
        <function-ref name="led2Off" scoped="" ref="0x410011d0"/>
        <function-ref name="set" scoped="" ref="0x40fb7e90"/>
        <function-ref name="led0On" scoped="" ref="0x41001010"/>
        <function-ref name="led2On" scoped="" ref="0x410010f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40ff9c60" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ff9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ff9e38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ff9f18"/>
        <function-ref name="request" scoped="" ref="0x40ffd010"/>
        <function-ref name="granted" scoped="" ref="0x40ffd0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x410014b8" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x410014b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x40bf5ea8"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x40bf4748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41000048"/>
        <function-ref name="get" scoped="" ref="0x41001b00"/>
        <function-ref name="set" scoped="" ref="0x41001d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x40ff9810" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x40ff9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x40ff99e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40ff9ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x41000850" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x41000850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41000a28"/>
        <function-ref name="receiveDone" scoped="" ref="0x41000b08"/>
        <function-ref name="publish" scoped="" ref="0x41000be8"/>
        <function-ref name="stop" scoped="" ref="0x41000cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41002848" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41002848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40356590"/>
            <typename><typedef-ref name="TMilli" ref="0x40356758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4101a368"/>
        <function-ref name="fired" scoped="" ref="0x4101b5e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4101bcf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4101ba98"/>
        <function-ref name="getdt" scoped="" ref="0x4101a818"/>
        <function-ref name="gett0" scoped="" ref="0x4101a5c0"/>
        <function-ref name="isRunning" scoped="" ref="0x4101b840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41002e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4101a048"/>
        <function-ref name="startOneShot" scoped="" ref="0x4101b110"/>
        <function-ref name="stop" scoped="" ref="0x4101b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41019928" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41019928"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41019b00"/>
        <function-ref name="readDone" scoped="" ref="0x41019be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41011c48" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41011c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41011e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x41010308" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41010308"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410104e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410105c0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410106a0"/>
        <function-ref name="getSize" scoped="" ref="0x41010780"/>
        <function-ref name="readDone" scoped="" ref="0x41010860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41010d28" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41010d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41010f00"/>
        <function-ref name="writeDone" scoped="" ref="0x4100f010"/>
        <function-ref name="erase" scoped="" ref="0x4100f0f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x4100f1d0"/>
        <function-ref name="write" scoped="" ref="0x4100f2b0"/>
        <function-ref name="sync" scoped="" ref="0x4100f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x410117f0" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x410117f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410119c8"/>
        <function-ref name="readDone" scoped="" ref="0x41011aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x4100f858" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x4100f858"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x4100fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41015ef8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41015ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410140e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410141c0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410142a0"/>
        <function-ref name="getSize" scoped="" ref="0x41014380"/>
        <function-ref name="readDone" scoped="" ref="0x41014460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410145a0" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41014778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41014858"/>
        <function-ref name="request" scoped="" ref="0x41014938"/>
        <function-ref name="granted" scoped="" ref="0x41014a18"/>
        <function-ref name="isOwner" scoped="" ref="0x41014af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x4149a1e8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x4149a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4149a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4149acf8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4149acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4149aed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41499010"/>
        <function-ref name="request" scoped="" ref="0x414990f0"/>
        <function-ref name="granted" scoped="" ref="0x414991d0"/>
        <function-ref name="isOwner" scoped="" ref="0x414992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41027a60" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41027a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41027c38"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41027d18"/>
        <function-ref name="computeCrc" scoped="" ref="0x41027df8"/>
        <function-ref name="getSize" scoped="" ref="0x41027ed8"/>
        <function-ref name="readDone" scoped="" ref="0x41026010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41026150" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41026150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41026328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41026408"/>
        <function-ref name="request" scoped="" ref="0x410264e8"/>
        <function-ref name="granted" scoped="" ref="0x410265c8"/>
        <function-ref name="isOwner" scoped="" ref="0x410266a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41495690" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41495690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41495868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414941b8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414941b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41494390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41494470"/>
        <function-ref name="request" scoped="" ref="0x41494550"/>
        <function-ref name="granted" scoped="" ref="0x41494630"/>
        <function-ref name="isOwner" scoped="" ref="0x41494710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410256a0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410256a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41025878"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41025958"/>
        <function-ref name="computeCrc" scoped="" ref="0x41025a38"/>
        <function-ref name="getSize" scoped="" ref="0x41025b18"/>
        <function-ref name="readDone" scoped="" ref="0x41025bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41025d38" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41025d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41025f10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105e010"/>
        <function-ref name="request" scoped="" ref="0x4105e0f0"/>
        <function-ref name="granted" scoped="" ref="0x4105e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4105e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41490ab8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41490ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41490c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414db6d8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414db6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414db8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414db990"/>
        <function-ref name="request" scoped="" ref="0x414dba70"/>
        <function-ref name="granted" scoped="" ref="0x414dbb50"/>
        <function-ref name="isOwner" scoped="" ref="0x414dbc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4105d230" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4105d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4105d408"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4105d4e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x4105d5c8"/>
        <function-ref name="getSize" scoped="" ref="0x4105d6a8"/>
        <function-ref name="readDone" scoped="" ref="0x4105d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4105d8c8" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4105d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4105daa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105db80"/>
        <function-ref name="request" scoped="" ref="0x4105dc60"/>
        <function-ref name="granted" scoped="" ref="0x4105dd40"/>
        <function-ref name="isOwner" scoped="" ref="0x4105de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414d6010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d61e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414d6b20" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414d6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414d6cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414d6dd8"/>
        <function-ref name="request" scoped="" ref="0x414d6eb8"/>
        <function-ref name="granted" scoped="" ref="0x414d5010"/>
        <function-ref name="isOwner" scoped="" ref="0x414d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4105be80" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4105be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4105a070"/>
        <function-ref name="writeDone" scoped="" ref="0x4105a150"/>
        <function-ref name="erase" scoped="" ref="0x4105a230"/>
        <function-ref name="eraseDone" scoped="" ref="0x4105a310"/>
        <function-ref name="write" scoped="" ref="0x4105a3f0"/>
        <function-ref name="sync" scoped="" ref="0x4105a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4105a610" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4105a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4105a7e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4105a8c8"/>
        <function-ref name="request" scoped="" ref="0x4105a9a8"/>
        <function-ref name="granted" scoped="" ref="0x4105aa88"/>
        <function-ref name="isOwner" scoped="" ref="0x4105ab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414d14a0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414d14a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414d1678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414d0010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414d0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414d01e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414d02c8"/>
        <function-ref name="request" scoped="" ref="0x414d03a8"/>
        <function-ref name="granted" scoped="" ref="0x414d0488"/>
        <function-ref name="isOwner" scoped="" ref="0x414d0568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41059b08" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41059b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41059ce0"/>
        <function-ref name="writeDone" scoped="" ref="0x41059dc0"/>
        <function-ref name="erase" scoped="" ref="0x41059ea0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41058010"/>
        <function-ref name="write" scoped="" ref="0x410580f0"/>
        <function-ref name="sync" scoped="" ref="0x410581d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41058310" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41058310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410584e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410585c8"/>
        <function-ref name="request" scoped="" ref="0x410586a8"/>
        <function-ref name="granted" scoped="" ref="0x41058788"/>
        <function-ref name="isOwner" scoped="" ref="0x41058868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414cba08" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414cba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414cbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414ca538" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414ca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414ca710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414ca7f0"/>
        <function-ref name="request" scoped="" ref="0x414ca8d0"/>
        <function-ref name="granted" scoped="" ref="0x414ca9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x414caa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410577f8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410577f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410579d0"/>
        <function-ref name="writeDone" scoped="" ref="0x41057ab0"/>
        <function-ref name="erase" scoped="" ref="0x41057b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x41057c70"/>
        <function-ref name="write" scoped="" ref="0x41057d50"/>
        <function-ref name="sync" scoped="" ref="0x41057e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41056010" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41056010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410561e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410562c8"/>
        <function-ref name="request" scoped="" ref="0x410563a8"/>
        <function-ref name="granted" scoped="" ref="0x41056488"/>
        <function-ref name="isOwner" scoped="" ref="0x41056568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414c5010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414c51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414c5b20" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414c5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414c5cf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414c5dd8"/>
        <function-ref name="request" scoped="" ref="0x414c5eb8"/>
        <function-ref name="granted" scoped="" ref="0x414c4010"/>
        <function-ref name="isOwner" scoped="" ref="0x414c40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41055520" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41055520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410556f8"/>
        <function-ref name="writeDone" scoped="" ref="0x410557d8"/>
        <function-ref name="erase" scoped="" ref="0x410558b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41055998"/>
        <function-ref name="write" scoped="" ref="0x41055a78"/>
        <function-ref name="sync" scoped="" ref="0x41055b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41055c98" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41055c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41055e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41054010"/>
        <function-ref name="request" scoped="" ref="0x410540f0"/>
        <function-ref name="granted" scoped="" ref="0x410541d0"/>
        <function-ref name="isOwner" scoped="" ref="0x410542b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414bf5f0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414bf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414bf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414be148" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414be148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414be320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414be400"/>
        <function-ref name="request" scoped="" ref="0x414be4e0"/>
        <function-ref name="granted" scoped="" ref="0x414be5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x414be6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x410519d8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x410519d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41051bb0"/>
        <function-ref name="readDone" scoped="" ref="0x41051c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4106ca48" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4106ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4106cc20"/>
        <function-ref name="eraseDone" scoped="" ref="0x4106cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4104bcc0" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4104bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4104be98"/>
        <function-ref name="eraseDone" scoped="" ref="0x41048010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x410452e8" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410452e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410454c0"/>
        <function-ref name="writeDone" scoped="" ref="0x410455a0"/>
        <function-ref name="erase" scoped="" ref="0x41045680"/>
        <function-ref name="eraseDone" scoped="" ref="0x41045760"/>
        <function-ref name="write" scoped="" ref="0x41045840"/>
        <function-ref name="sync" scoped="" ref="0x41045920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41045dd8" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41045dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41044010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410440f0"/>
        <function-ref name="request" scoped="" ref="0x410441d0"/>
        <function-ref name="granted" scoped="" ref="0x410442b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41044390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41048b00" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41048b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41048cd8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41048db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410475c0" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410475c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41047798"/>
        <function-ref name="writeDone" scoped="" ref="0x41047878"/>
        <function-ref name="erase" scoped="" ref="0x41047958"/>
        <function-ref name="eraseDone" scoped="" ref="0x41047a38"/>
        <function-ref name="write" scoped="" ref="0x41047b18"/>
        <function-ref name="sync" scoped="" ref="0x41047bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41047d38" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41047d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41047f10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41046010"/>
        <function-ref name="request" scoped="" ref="0x410460f0"/>
        <function-ref name="granted" scoped="" ref="0x410461d0"/>
        <function-ref name="isOwner" scoped="" ref="0x410462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414b7bf8" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414b7bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414b7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414b5720" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414b5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414b58f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414b59d8"/>
        <function-ref name="request" scoped="" ref="0x414b5ab8"/>
        <function-ref name="granted" scoped="" ref="0x414b5b98"/>
        <function-ref name="isOwner" scoped="" ref="0x414b5c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41072250" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41072250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41072428"/>
        <function-ref name="writeDone" scoped="" ref="0x41072508"/>
        <function-ref name="erase" scoped="" ref="0x410725e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x410726c8"/>
        <function-ref name="write" scoped="" ref="0x410727a8"/>
        <function-ref name="sync" scoped="" ref="0x41072888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410729c8" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410729c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41072ba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41072c80"/>
        <function-ref name="request" scoped="" ref="0x41072d60"/>
        <function-ref name="granted" scoped="" ref="0x41072e40"/>
        <function-ref name="isOwner" scoped="" ref="0x41072f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414fe010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414fe1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414feb20" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414feb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414fecf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414fedd8"/>
        <function-ref name="request" scoped="" ref="0x414feeb8"/>
        <function-ref name="granted" scoped="" ref="0x414fd010"/>
        <function-ref name="isOwner" scoped="" ref="0x414fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41071eb8" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41071eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410700c0"/>
        <function-ref name="writeDone" scoped="" ref="0x410701a0"/>
        <function-ref name="erase" scoped="" ref="0x41070280"/>
        <function-ref name="eraseDone" scoped="" ref="0x41070360"/>
        <function-ref name="write" scoped="" ref="0x41070440"/>
        <function-ref name="sync" scoped="" ref="0x41070520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41070660" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41070660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41070838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41070918"/>
        <function-ref name="request" scoped="" ref="0x410709f8"/>
        <function-ref name="granted" scoped="" ref="0x41070ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x41070bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x414f8438" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x414f8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414f8610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414f7010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414f71e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414f72c8"/>
        <function-ref name="request" scoped="" ref="0x414f73a8"/>
        <function-ref name="granted" scoped="" ref="0x414f7488"/>
        <function-ref name="isOwner" scoped="" ref="0x414f7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4104d818" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4104d818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4104d9f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4104dad0"/>
        <function-ref name="request" scoped="" ref="0x4104dbb0"/>
        <function-ref name="granted" scoped="" ref="0x4104dc90"/>
        <function-ref name="isOwner" scoped="" ref="0x4104dd70"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403aaa68" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403a4e10" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403ad508" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403ad3b0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403a8b48" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403ae1c0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403ae068" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403ae888" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403ae730" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403aede0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403be308" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403be6f0" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403b7b68" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403beec0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403b7f28" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403beac8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b7428" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403b77b8" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402fc390" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402fcc98" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402fc7d0" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fdb68" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40302090" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40385138" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40394b28" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4033bd78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40390680" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404ab010" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404ab458" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404ab8d8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404aa158" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404aae48" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404a8318" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404abd00" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404a8a58" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404a8900" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404adba0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404aa5d8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404aaa00" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404c6e08" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404c6e08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404cd550" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404d03d8" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404cf530" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404cf1e8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404cf3d0" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404d0d28" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404cdec8" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404cd998" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404d0868" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404c3480" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404c3328" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404cff18" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404cfbd0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404cfdb8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404c3b18" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404c39c0" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404d0010" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40526d58" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40526c00" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40524ae0" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40524988" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40526518" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405242a8" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x40513688" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40513530" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40512088" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40513f00" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4050f208" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40511e88" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4050f088" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405118a0" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40512ce8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405129a8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40512b88" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4051f230" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404d7cb8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404d7ed0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4051f0c8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40529dd0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40529a70" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40529c50" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40529510" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4051fed0" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051fd78" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4051dbf8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051d8a0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4051da98" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4050ea40" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
              <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050e4f8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4050e6d8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4050e8b8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40522310" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405221b8" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4051bcb0" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051bb58" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404cabf0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4051b2b0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051b158" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4051a5a0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4051a238" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4051a440" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405198a8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40519540" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40519748" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40517ca0" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40517b48" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40515808" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405154d8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x405156a8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f5c70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40517168" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40517010" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40521010" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40522c30" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40522e30" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40521888" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40546650" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40546650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40546b30" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4054bcc8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054bcc8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054be30" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054be30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40558360" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054be30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40558d88" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40558888" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405571c8" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40543e60" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40543e60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054e010" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4054c350" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4054d010" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4054dcd8" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4054d988" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          </variable>
          <variable name="dt" ref="0x4054db78" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4054d480" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4054c7e0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4054e640" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4054e4e8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4054eb20" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4056b2b8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4056c818" loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4056d438" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4056cdd8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4056cc80" loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4056c3a8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4056c250" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4056b880" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4056b728" loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4056d888" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4056de00" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4056dca8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x40581010" loc="81:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x40573ca0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x405720f8" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x405725d8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405814d0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x40572ab8" loc="75:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405731c8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40366d68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40365010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405737c0" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40366d68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40365010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40573668" loc="52:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40366d68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40365010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40570850" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40570850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40577830" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40579760" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40570d48" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40570850"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40579b68" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40577c90" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40579320" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40570850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405791c8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40570850"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40577010" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40577408" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40566508" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40566508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40564d28" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40564498" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405669f8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40566508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x405622e0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40562188" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40562770" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40565860" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40565440" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40564900" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40565010" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40566508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40566e18" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40566508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40565c68" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40564070" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x406415b0" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406415b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40641718" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40641718"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40647a78" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40641718"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40647920" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40659528" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406593d0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40641da0" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40641c48" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40646010" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40641718"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40659c78" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40659e88" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40641718"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40642010" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40645c18" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40645e30" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4064f1c8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063ce18" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4064f068" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4064fc88" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064fb30" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x4063c940" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x4063c2c0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4063c168" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x406438d8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40643780" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4063f3f0" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063f298" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4063fe78" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4063fd20" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x4064bd70" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064bc18" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4064d170" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064cd38" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4064d010" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4064b420" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064b2c8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4064dd48" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4064d9b0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4064dbe8" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x406496a8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40649550" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40661460" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40661460"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4065d788" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065d630" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4065d168" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40661460"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065d010" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40661ad8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40661980" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4065c010" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40661460"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4065dbb8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4065ddd0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40661460"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x4065f4f0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4065f010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40662e50" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4065f9f0" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4067fae8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4067f1c8" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40674bb0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4067f678" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4067e210" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x4067b168" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067b010" loc="30:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406734c8" loc="26:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40673ac8" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40673970" loc="28:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4067a170" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067bd38" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4067a010" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4067b938" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067b598" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4067b7d8" loc="32:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x4067ac90" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40675ce8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067ab38" loc="38:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40679418" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40675ce8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40679088" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406792b8" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40675ce8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4067a6e0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067a588" loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40679858" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40675ce8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x40671e48" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406718e8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40671048"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40671b00" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40671ce0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40681190" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4066fde0" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40681010" loc="111:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4066f880" loc="99:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40670870" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40670718" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4066f288" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40670ef8" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4066f128" loc="86:/opt/tinyos-2.1.1/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x406b11f0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x40696f08" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x40697e28" loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x40698b80" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x406972a0" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40697148" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x406a94a0" loc="73:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x40696480" loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40697918" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406977c0" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x406969c8" loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x406b43b8" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b4260" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x406b2168" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b2010" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406a0630" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a04d8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406a7880" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a7728" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406a0dc8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a0a60" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406a0c68" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406a0060" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a7ce0" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406a7ee8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406b4b40" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b47e0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406b49e0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4069cb20" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x406a4138" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x406a37b8" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a3660" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x406a4880" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a4728" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x406a3010" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a4e20" loc="49:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x406b7790" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x406a1f08" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x406a1db0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406b7378" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x406a1890" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x406b7c38" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x406c9d60" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c9c08" loc="59:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x406b5370" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b5218" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406c90c8" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x406b5bc8" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b5868" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406b5a68" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x406b9c50" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b9af8" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x406c9748" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c95f0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4068f158" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40694c38" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40694ae0" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4068f838" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068f6e0" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x4068fd80" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x4068e4c0" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068e368" loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40699ee8" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40699d90" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x4069d898" loc="75:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x4069d3e0" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4069d068" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4069d280" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4068c3b8" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068c260" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x4068ca80" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068c928" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x4069e3e0" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4069e068" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4069e280" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x4068d470" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4068dce0" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4068d9b8" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4068db80" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4069eaf8" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069e9a0" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x406be880" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406be728" loc="120:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x406baa10" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ba8b8" loc="157:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x406b0970" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b0620" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x406b0810" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x406afd48" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406afbf0" loc="64:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x406aaa48" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aa8f0" loc="109:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x406af6b0" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406af558" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x406be270" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aaf00" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x406be110" loc="114:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x406aed00" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406ae988" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406aeba0" loc="77:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x406bccc0" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bc960" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406bcb60" loc="145:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x406bc4e8" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bc390" loc="140:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x406af010" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b0e80" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x406ac678" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406ac300" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406ac518" loc="83:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x406acd28" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406acbd0" loc="88:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x406ba300" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ba1a8" loc="151:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x406ae448" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ae2f0" loc="70:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x406aa438" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aa0e8" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x406aa2d8" loc="104:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x406bdea0" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bdb40" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406bdd40" loc="135:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x406bd090" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bed18" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x406bef08" loc="125:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x406ab540" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ab218" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x406ab3e0" loc="94:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x406b0168" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b0010" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x406bd6c0" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bd568" loc="130:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x406abbf0" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406aba98" loc="99:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x4069ba70" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069b710" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x4069b910" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x4069bf08" loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40691be0" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40691a88" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x4069b240" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4069b0e8" loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x406a6010" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40690e88" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40690900" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406907a8" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x406a6508" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x406a6bc0" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406a6a68" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40709698" loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40709c68" loc="61:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x407072d0" loc="68:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40709270" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40720e68" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720d10" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4071b010" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071de08" loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4071d870" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071d518" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4071d710" loc="43:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4071a010" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
              <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071be30" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40727a00" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40725298" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40727e70" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40727510" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x407271a8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5ec8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x407273b0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4077e558" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4077eb30" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4077b730" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4077b270" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40780d90" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4077c2b8" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4078c058" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4077fa10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4078ded8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4077fa10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40778ca0" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4078d398" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4077fa10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4078d240" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4077fa10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4078d948" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4077fa10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40828c08" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
              <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40828a90" loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40828418" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408282c0" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40838900" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x408387a8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40838d80" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4083ee10" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083ecb8" loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40838398" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40838240" loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x4083c800" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083c6a8" loc="46:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x4083b518" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4083b3c0" loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x4083cee8" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083cd90" loc="51:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x4083bbe8" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4083ba90" loc="69:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x4083c168" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4083c010" loc="38:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f4140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408b22c0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408b2cf8" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408b0360" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408b0208" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408b07d0" loc="58:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408b2800" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408b0d10" loc="63:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408b4d80" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4c28" loc="37:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408aeb90" loc="52:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408ae678" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408ae520" loc="45:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408d7de8" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408d7c90" loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408d77b0" loc="33:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x408f7650" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408f71a8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x409014a0" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409014a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40901af0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409014a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40901998" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409014a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x409244c0" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40924368" loc="44:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40925168" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40925010" loc="29:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40925938" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409255f8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x409257d8" loc="34:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40925ef8" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40925da0" loc="39:/opt/tinyos-2.1.1/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409a3da0" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409a3da0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409a3f08" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a3f08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x409a2530" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a3f08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409a23d8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409a3f08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409a4540" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409a4ef0" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409a4aa8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409a4950" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x409a4038" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x409ab9a0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409ab848" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x409a7608" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409a74b0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x409abeb0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409a7c50" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409a7af8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40a2c880" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2c880"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40a263a8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40a26250" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40a28970" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a2cd78" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2c880"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a298f8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2c880"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a297a0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2c880"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40a29d38" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40a28dd0" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a29320" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2c880"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40a291c8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a2c880"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40a28158" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a28550" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a3b4a0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a3eef8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a3b148" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a3b338" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a39af8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a39378" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a39590" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a39780" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a39988" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40a3fa40" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40a3f8e8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40a51548" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a4cc38" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a4edd8" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a4a288" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a4a130" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a510f8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a4dd48" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a4dbf0" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a4e010" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a4fe48" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a51dd8" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a48318" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a481c0" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a4e468" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a4ac10" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a4aab8" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a494b0" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a4c7f0" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a4c698" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a49d78" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a4d380" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a4d228" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a4f390" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a4f238" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a4e9b8" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a4e860" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a4c210" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a4a6b0" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a49038" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a49908" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a4d7b8" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a51970" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a4f958" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a4f800" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a7e2f0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a7e7d8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40ab6460" loc="61:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40ab49f8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40ab9bb8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40ab3480" loc="71:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40ab3010" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40ab4e60" loc="68:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40ab4010" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ab6df8" loc="63:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40ab3a48" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40ab38f0" loc="72:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40ab6038" loc="60:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40ab4588" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ab4430" loc="64:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40ab69d8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ab6880" loc="62:/opt/tinyos-2.1.1/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40bc6770" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc6430" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40bc6610" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40bc2370" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc2010" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40bc21f0" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40bc3a90" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40bc53f8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc52a0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40bc3170" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc5d38" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405072e8"/>
                <typename><typedef-ref name="message_t" ref="0x405130c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40bc3010" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x40c30bb8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c30678" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c30830" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c30a50" loc="56:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40c2e930" loc="95:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2e1a8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40c2e3c8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40c2e5c8" loc="96:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c2e7c0" loc="96:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40c2cb78" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2c5f0" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40c2c810" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40c2ca10" loc="84:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x40c2ee88" loc="103:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40c2dca8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c2d558" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c2d710" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c2d930" loc="67:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c2db38" loc="68:/opt/tinyos-2.1.1/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008/06/04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x40c26398" loc="112:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c26240" loc="112:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40c288b8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c28168" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c28320" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c28540" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40c28748" loc="72:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40c271c8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40c27818" loc="91:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c276c0" loc="91:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40c29758" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c29218" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c293d0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c295f0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x40c0c810"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40c27ca0" loc="103:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x40c0ae00" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c17010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c0a838" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40c0aa90" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c17010"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40c0ac98" loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40c09360" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c09208" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x40c0a3d8" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c17010"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c0fde8" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x40c0a068" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40c17010"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x40c0a270" loc="31:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40c09728" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="33:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40c412a8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x40c44758" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x40c44600" loc="35:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x40c43168" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c43010" loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x40c43958" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c17528"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c435b8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x40c437f8" loc="38:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c17528"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x40c43ec8" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x40c43d70" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x40c44b68" loc="36:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x40c44170" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c17528"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x40c47d48" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40c18a30"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x40c44010" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40c17528"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="33:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x40c3f378" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x40c40e60" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40c3f030" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c3f210" loc="53:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x40c40540" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40c40200" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c403e0" loc="42:/opt/tinyos-2.1.1/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="28:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x40c7d868" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40c7d088" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x40c7d2b8" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x40c7d4e8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c7d6f8" loc="40:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x40c7a010" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40c7b998" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40c7bbb8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c7bdc8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x40c7b470" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40c7de90" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40c7b0e8" loc="51:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c7b308" loc="52:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x40d1b518" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x40c0c1f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008/01/25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x40d177c0" loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40d17668" loc="47:/opt/tinyos-2.1.1/tos/lib/net/Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x40c0c588"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x40d39010" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x40d3ca40" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x40d3c8e8" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="52:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40d87cb0" loc="162:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d87b58" loc="162:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40d89520" loc="125:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d893c8" loc="125:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40d88628" loc="143:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="139:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d884d0" loc="143:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40d87520" loc="155:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d88ab8" loc="155:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40d88d18" loc="155:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d87180" loc="156:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40d873b0" loc="156:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40d5d3f8" loc="69:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d5d2a0" loc="69:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x40d5dc20" loc="80:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x40d5d8c8" loc="80:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x40d5dac0" loc="80:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40d5cb50" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d5c7d0" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x40d5c9f0" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40d5b398" loc="105:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d5b240" loc="105:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40d843d8" loc="183:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d84088" loc="183:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40d84278" loc="183:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40d89b08" loc="133:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d899b0" loc="133:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x40d5be98" loc="120:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x40d88038" loc="138:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40d5ecd8" loc="62:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d5e290" loc="62:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40d5e4f0" loc="62:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d5e938" loc="63:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40d5eb68" loc="63:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40d5b968" loc="114:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="107:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d5b810" loc="114:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40d859c8" loc="176:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="164:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d851a0" loc="176:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40d85400" loc="176:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40d85640" loc="177:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40d85858" loc="177:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x40d5c350" loc="85:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d5c1f8" loc="85:/opt/tinyos-2.1.1/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x40d80528" loc="50:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x40d81450" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x40d81010" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x40d818d0" loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x40d80b78" loc="58:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40d80a20" loc="58:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x40d80010" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d81de8" loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40dc4eb0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40dc08f0" loc="73:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40dc4980" loc="46:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40dc0418" loc="65:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40dc0ec8" loc="81:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40de4b68" loc="141:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x40dbaa08" loc="41:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x40de22c8" loc="163:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x40de2170" loc="163:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40de9a70" loc="79:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40de4578" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de6880" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de6a90" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de6cf0" loc="134:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40de41d0" loc="135:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40de4400" loc="135:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40de8eb8" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de8b48" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de8d58" loc="100:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40de1a38" loc="185:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x40dba5e8" loc="35:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x40deb058" loc="47:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x40dbaee0" loc="47:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40de7390" loc="106:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x40dba0c8" loc="30:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40de94c0" loc="73:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de9150" loc="73:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de9360" loc="73:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40de13d8" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de26e8" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de28f8" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de2b58" loc="178:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40de1030" loc="179:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40de1260" loc="179:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x40de8710" loc="93:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x40de8218" loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de9e90" loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de80b8" loc="87:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x40de3a50" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de3010" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40de3220" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de3480" loc="157:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40de36c0" loc="158:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40de38d8" loc="158:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x40de6280" loc="119:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40de77d0" loc="119:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40de7a30" loc="119:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40c07b80"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40de7ee8" loc="120:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40de6110" loc="120:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x40debcf8" loc="61:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x40deb830" loc="55:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40deb4c0" loc="55:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40deb6d0" loc="55:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40c078d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x40e1ff18" loc="42:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x40e1f5e8" loc="31:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x40e1fa88" loc="35:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x40e503d0" loc="47:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
          <long>&#10; Assert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x40e507d8" loc="52:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f07960" loc="40:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f07960"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x40f02168" loc="52:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f07960"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f02010" loc="52:/opt/tinyos-2.1.1/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f07960"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f083d0" loc="36:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f083d0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x40f043c8" loc="61:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40f08878" loc="47:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f083d0"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40f08eb8" loc="56:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f083d0"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40f08d60" loc="56:/opt/tinyos-2.1.1/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f083d0"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x40efae80" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40efad08" loc="47:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x40ef8a60" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ef8500" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40ef86f0" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x40ef88f8" loc="48:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x40ef7258" loc="50:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x40efa538" loc="45:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x40ef8e88" loc="49:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x40efa900" loc="46:/opt/tinyos-2.1.1/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40eff6f0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40effbb8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x40f120f8" loc="82:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x40f13cd8" loc="77:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40f13830" loc="72:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40f17f20" loc="60:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40f13428" loc="66:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="29:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x40f5eed8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40f92428" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f922d0" loc="58:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40f929e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f92890" loc="64:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40f938a0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f93748" loc="46:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x40f911c8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f92e50" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40f91068" loc="71:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40f932f0" loc="39:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="36:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40f93e50" loc="52:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40f93cf8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f91648" loc="77:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="34:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x40fb0ef8" loc="53:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x40fb0da0" loc="53:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x40fb0870" loc="42:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="35:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40fdb8d0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fdb3b0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40fdb568" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40fdb768" loc="48:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40fda788" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40fda268" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40fda420" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40fda620" loc="60:/opt/tinyos-2.1.1/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40ffe9b8" loc="12:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ffe860" loc="12:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40ffa370" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x40bfa728"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x40bf7e58"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ffed98" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x40ffa010" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x40bfa728"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x40bf7e58"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ffa208" loc="13:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="27:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x40ff9168" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fe628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ff9010" loc="29:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40ff96a8" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x40ff9550" loc="30:/opt/tinyos-2.1.1/tos/lib/net/Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
